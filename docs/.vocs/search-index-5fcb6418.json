{"documentCount":437,"nextId":437,"documentIds":{"0":"docs/pages/bug-bounty.md#bug-bounty","1":"docs/pages/contracts/cross-chain-farming.md#跨链农场","2":"docs/pages/contracts/farm-booster-bcake.md#farm-booster-bcake","3":"docs/pages/contracts/farm-booster-bcake.md#合约信息","4":"docs/pages/contracts/farm-booster-bcake.md#bcake-farm-booster-合约","5":"docs/pages/contracts/farm-booster-bcake.md#bcake-farm-booster-proxy-factory-合约","6":"docs/pages/contracts/farm-booster-bcake.md#审计","7":"docs/pages/contracts/fixed-term-staking-cake-pool.md#cake-syrup-pool已弃用","8":"docs/pages/contracts/fixed-term-staking-cake-pool.md#合约信息","9":"docs/pages/contracts/fixed-term-staking-cake-pool.md#审计报告","10":"docs/pages/contracts/ifo-commit-limit-icake.md#ifo-限额-icake","11":"docs/pages/contracts/ifo-commit-limit-icake.md#合约信息","12":"docs/pages/contracts/ifo-commit-limit-icake.md#icake-计算合约","13":"docs/pages/contracts/ifo.md#ifo","14":"docs/pages/contracts/ifo.md#合约信息","15":"docs/pages/contracts/ifo.md#ifo-部署者","16":"docs/pages/contracts/market-maker-pool.md#做市商池","17":"docs/pages/contracts/market-maker-pool.md#合约信息","18":"docs/pages/contracts/market-maker-pool.md#交换示例","19":"docs/pages/contracts/market-maker-pool.md#eip-712-签名","20":"docs/pages/contracts/market-maker-pool.md#swap","21":"docs/pages/contracts/nft-market.md#nft-市场","22":"docs/pages/contracts/pottery.md#陶瓷","23":"docs/pages/contracts/prediction-v2.md#预测","24":"docs/pages/contracts/prediction-v2.md#合约信息","25":"docs/pages/contracts/prediction-v2.md#bnb-预测","26":"docs/pages/contracts/prediction-v2.md#审计","27":"docs/pages/contracts/vecake-and-gauge-voting.md#vecake-和投票指标","28":"docs/pages/contracts/vecake-and-gauge-voting.md#合约信息","29":"docs/pages/apis/subgraph.md#子图","30":"docs/pages/contracts-aptos/ifo.mdx#ifo","31":"docs/pages/contracts-aptos/ifo.mdx#审计","32":"docs/pages/contracts-aptos/index.md#智能合约aptos","33":"docs/pages/contracts-aptos/index.md#功能","34":"docs/pages/contracts-aptos/index.md#github","35":"docs/pages/contracts-aptos/index.md#审计","36":"docs/pages/contracts-aptos/masterchef.mdx#masterchef","37":"docs/pages/contracts-aptos/masterchef.mdx#合约信息","38":"docs/pages/contracts-aptos/masterchef.mdx#资源","39":"docs/pages/contracts-aptos/masterchef.mdx#masterchef-1","40":"docs/pages/contracts-aptos/masterchef.mdx#pooluserinfo","41":"docs/pages/contracts-aptos/masterchef.mdx#userinfo","42":"docs/pages/contracts-aptos/masterchef.mdx#poolinfo","43":"docs/pages/contracts-aptos/masterchef.mdx#入口函数","44":"docs/pages/contracts-aptos/masterchef.mdx#deposit","45":"docs/pages/contracts-aptos/masterchef.mdx#withdraw","46":"docs/pages/contracts-aptos/masterchef.mdx#emergency-withdraw","47":"docs/pages/contracts-aptos/masterchef.mdx#mass-update-pools","48":"docs/pages/contracts-aptos/masterchef.mdx#update-pool","49":"docs/pages/contracts-aptos/masterchef.mdx#公共函数","50":"docs/pages/contracts-aptos/masterchef.mdx#pending-cake","51":"docs/pages/contracts-aptos/masterchef.mdx#输入值","52":"docs/pages/contracts-aptos/masterchef.mdx#返回值","53":"docs/pages/contracts-aptos/masterchef.mdx#pool-length","54":"docs/pages/contracts-aptos/masterchef.mdx#返回值-1","55":"docs/pages/contracts-aptos/masterchef.mdx#审计","56":"docs/pages/contracts-aptos/syrup-pools.md#syrup-pools","57":"docs/pages/contracts-aptos/syrup-pools.md#合约信息","58":"docs/pages/contracts-aptos/syrup-pools.md#类型","59":"docs/pages/contracts-aptos/syrup-pools.md#资源","60":"docs/pages/contracts-aptos/syrup-pools.md#smartchefmetadata","61":"docs/pages/contracts-aptos/syrup-pools.md#poolinfo","62":"docs/pages/contracts-aptos/syrup-pools.md#入口函数","63":"docs/pages/contracts-aptos/syrup-pools.md#deposit","64":"docs/pages/contracts-aptos/syrup-pools.md#withdraw","65":"docs/pages/contracts-aptos/syrup-pools.md#emergency-withdraw","66":"docs/pages/contracts-aptos/syrup-pools.md#公共函数","67":"docs/pages/contracts-aptos/syrup-pools.md#获取池信息","68":"docs/pages/contracts-aptos/syrup-pools.md#返回值","69":"docs/pages/contracts-aptos/syrup-pools.md#获取用户质押数量","70":"docs/pages/contracts-aptos/syrup-pools.md#输入值","71":"docs/pages/contracts-aptos/syrup-pools.md#返回值-1","72":"docs/pages/contracts-aptos/syrup-pools.md#获取待领取奖励","73":"docs/pages/contracts-aptos/syrup-pools.md#输入值-1","74":"docs/pages/contracts-aptos/syrup-pools.md#返回值-2","75":"docs/pages/contracts-aptos/syrup-pools.md#审计","76":"docs/pages/contracts-aptos/utils.md#utils","77":"docs/pages/contracts-aptos/utils.md#合约信息","78":"docs/pages/contracts-aptos/utils.md#函数","79":"docs/pages/contracts-aptos/utils.md#类型","80":"docs/pages/contracts/exchange/index.md#pancakeswap-交易所","81":"docs/pages/contracts/cake/cross-chain-cake-bridging.md#跨链-cake-桥接","82":"docs/pages/contracts/cake/cross-chain-cake-bridging.md#合约信息","83":"docs/pages/contracts/cake/cross-chain-cake-bridging.md#cake-桥接合约","84":"docs/pages/contracts/cake/cross-chain-cake-bridging.md#cake-桥接到-aptos-的示例","85":"docs/pages/contracts/cake/cross-chain-cake-bridging.md#实用工具","86":"docs/pages/contracts/cake/cross-chain-cake-bridging.md#审计","87":"docs/pages/contracts/cake/index.md#cake-地址","88":"docs/pages/contracts/affiliate-program/overview.md#affiliate-program","89":"docs/pages/contracts/affiliate-program/overview.md#contract-info","90":"docs/pages/contracts/affiliate-program/overview.md#introduction","91":"docs/pages/contracts/affiliate-program/overview.md#binance-智能链","92":"docs/pages/contracts/lottery-v2/lottery-contract.md#lottery-contract","93":"docs/pages/contracts/lottery-v2/lottery-contract.md#合约角色","94":"docs/pages/contracts/lottery-v2/lottery-contract.md#owner","95":"docs/pages/contracts/lottery-v2/lottery-contract.md#operator-address","96":"docs/pages/contracts/lottery-v2/lottery-contract.md#treasury-address","97":"docs/pages/contracts/lottery-v2/lottery-contract.md#injector-address-目前与-owner-相同","98":"docs/pages/contracts/lottery-v2/lottery-contract.md#函数","99":"docs/pages/contracts/lottery-v2/lottery-contract.md#injectfunds---injector-和-owner","100":"docs/pages/contracts/lottery-v2/lottery-contract.md#startlottery---operator","101":"docs/pages/contracts/lottery-v2/lottery-contract.md#closelottery---operator","102":"docs/pages/contracts/lottery-v2/lottery-contract.md#drawfinalnumberandmakelotteryclaimable---operator","103":"docs/pages/contracts/lottery-v2/lottery-contract.md#recoverwrongtokens---owner","104":"docs/pages/contracts/lottery-v2/lottery-contract.md#setminandmaxticketpriceincake---owner","105":"docs/pages/contracts/lottery-v2/lottery-contract.md#setmaxnumberticketsperbuy---owner","106":"docs/pages/contracts/lottery-v2/lottery-contract.md#setoperatorandtreasuryandinjectoraddresses---owner","107":"docs/pages/contracts/lottery-v2/lottery-contract.md#changerandomgenerator---owner","108":"docs/pages/contracts/permit2/addresses.md#pancakeswap-permit2-地址","109":"docs/pages/contracts/permit2/index.md#简介","110":"docs/pages/contracts/permit2/index.md#功能","111":"docs/pages/contracts/permit2/index.md#流程","112":"docs/pages/contracts/stableswap/overview.md#稳定交换","113":"docs/pages/contracts/stableswap/overview.md#合约信息","114":"docs/pages/contracts/stableswap/overview.md#binance-智能链","115":"docs/pages/contracts/stableswap/overview.md#智能路由","116":"docs/pages/contracts/stableswap/stableswap-pools.md#稳定币交换池","117":"docs/pages/contracts/stableswap/stableswap-router.md#smart-router","118":"docs/pages/contracts/masterchef/addresses.md#masterchef","119":"docs/pages/contracts/masterchef/addresses.md#合约信息","120":"docs/pages/contracts/masterchef/addresses.md#masterchef-1","121":"docs/pages/contracts/masterchef/addresses.md#masterchef-v2","122":"docs/pages/contracts/masterchef/addresses.md#masterchef-v3","123":"docs/pages/contracts/masterchef/addresses.md#审计报告","124":"docs/pages/contracts/masterchef/masterchef-v3.md#masterchef-v3","125":"docs/pages/contracts/masterchef/masterchef-v3.md#solidity-api","126":"docs/pages/contracts/masterchef/masterchef-v3.md#poolinfo","127":"docs/pages/contracts/masterchef/masterchef-v3.md#userpositioninfo","128":"docs/pages/contracts/masterchef/masterchef-v3.md#poollength","129":"docs/pages/contracts/masterchef/masterchef-v3.md#poolinfo-1","130":"docs/pages/contracts/masterchef/masterchef-v3.md#userpositioninfos","131":"docs/pages/contracts/masterchef/masterchef-v3.md#v3poolpid","132":"docs/pages/contracts/masterchef/masterchef-v3.md#v3pooladdresspid","133":"docs/pages/contracts/masterchef/masterchef-v3.md#cake","134":"docs/pages/contracts/masterchef/masterchef-v3.md#weth","135":"docs/pages/contracts/masterchef/masterchef-v3.md#receiver","136":"docs/pages/contracts/masterchef/masterchef-v3.md#nonfungiblepositionmanager","137":"docs/pages/contracts/masterchef/masterchef-v3.md#lmpooldeployer","138":"docs/pages/contracts/masterchef/masterchef-v3.md#farm_booster","139":"docs/pages/contracts/masterchef/masterchef-v3.md#emergency","140":"docs/pages/contracts/masterchef/masterchef-v3.md#totalallocpoint","141":"docs/pages/contracts/masterchef/masterchef-v3.md#latestperiodnumber","142":"docs/pages/contracts/masterchef/masterchef-v3.md#latestperiodstarttime","143":"docs/pages/contracts/masterchef/masterchef-v3.md#latestperiodendtime","144":"docs/pages/contracts/masterchef/masterchef-v3.md#latestperiodcakepersecond","145":"docs/pages/contracts/masterchef/masterchef-v3.md#operatoraddress","146":"docs/pages/contracts/masterchef/masterchef-v3.md#period_duration","147":"docs/pages/contracts/masterchef/masterchef-v3.md#max_duration","148":"docs/pages/contracts/masterchef/masterchef-v3.md#min_duration","149":"docs/pages/contracts/masterchef/masterchef-v3.md#precision","150":"docs/pages/contracts/masterchef/masterchef-v3.md#boost_precision","151":"docs/pages/contracts/masterchef/masterchef-v3.md#max_boost_precision","152":"docs/pages/contracts/masterchef/masterchef-v3.md#q128","153":"docs/pages/contracts/masterchef/masterchef-v3.md#max_u256","154":"docs/pages/contracts/masterchef/masterchef-v3.md#cakeamountbelongtomc","155":"docs/pages/contracts/masterchef/masterchef-v3.md#zeroaddress","156":"docs/pages/contracts/masterchef/masterchef-v3.md#notowneroroperator","157":"docs/pages/contracts/masterchef/masterchef-v3.md#nobalance","158":"docs/pages/contracts/masterchef/masterchef-v3.md#notpancakenft","159":"docs/pages/contracts/masterchef/masterchef-v3.md#invalidnft","160":"docs/pages/contracts/masterchef/masterchef-v3.md#notowner","161":"docs/pages/contracts/masterchef/masterchef-v3.md#noliquidity","162":"docs/pages/contracts/masterchef/masterchef-v3.md#invalidperiodduration","163":"docs/pages/contracts/masterchef/masterchef-v3.md#nolmpool","164":"docs/pages/contracts/masterchef/masterchef-v3.md#invalidpid","165":"docs/pages/contracts/masterchef/masterchef-v3.md#duplicatedpool","166":"docs/pages/contracts/masterchef/masterchef-v3.md#notempty","167":"docs/pages/contracts/masterchef/masterchef-v3.md#wrongreceiver","168":"docs/pages/contracts/masterchef/masterchef-v3.md#inconsistentamount","169":"docs/pages/contracts/masterchef/masterchef-v3.md#insufficientamount","170":"docs/pages/contracts/masterchef/masterchef-v3.md#init","171":"docs/pages/contracts/masterchef/masterchef-v3.md#addpool","172":"docs/pages/contracts/masterchef/masterchef-v3.md#setpool","173":"docs/pages/contracts/masterchef/masterchef-v3.md#deposit","174":"docs/pages/contracts/masterchef/masterchef-v3.md#withdraw","175":"docs/pages/contracts/masterchef/masterchef-v3.md#updateliquidity","176":"docs/pages/contracts/masterchef/masterchef-v3.md#newoperatoraddress","177":"docs/pages/contracts/masterchef/masterchef-v3.md#newlmpooldeployeraddress","178":"docs/pages/contracts/masterchef/masterchef-v3.md#newreceiver","179":"docs/pages/contracts/masterchef/masterchef-v3.md#newperiodduration","180":"docs/pages/contracts/masterchef/masterchef-v3.md#harvest","181":"docs/pages/contracts/masterchef/masterchef-v3.md#newupkeepperiod","182":"docs/pages/contracts/masterchef/masterchef-v3.md#updateupkeepperiod","183":"docs/pages/contracts/masterchef/masterchef-v3.md#updatefarmboostcontract","184":"docs/pages/contracts/masterchef/masterchef-v3.md#setemergency","185":"docs/pages/contracts/masterchef/masterchef-v3.md#onlyowneroroperator","186":"docs/pages/contracts/masterchef/masterchef-v3.md#onlyvalidpid","187":"docs/pages/contracts/masterchef/masterchef-v3.md#onlyreceiver","188":"docs/pages/contracts/masterchef/masterchef-v3.md#onlyboostcontract","189":"docs/pages/contracts/masterchef/masterchef-v3.md#constructor","190":"docs/pages/contracts/masterchef/masterchef-v3.md#getlatestperiodinfobypid","191":"docs/pages/contracts/masterchef/masterchef-v3.md#getlatestperiodinfo","192":"docs/pages/contracts/masterchef/masterchef-v3.md#pendingcake","193":"docs/pages/contracts/masterchef/masterchef-v3.md#setemergency-1","194":"docs/pages/contracts/masterchef/masterchef-v3.md#setreceiver","195":"docs/pages/contracts/masterchef/masterchef-v3.md#setlmpooldeployer","196":"docs/pages/contracts/masterchef/masterchef-v3.md#add","197":"docs/pages/contracts/masterchef/masterchef-v3.md#set","198":"docs/pages/contracts/masterchef/masterchef-v3.md#depositcache","199":"docs/pages/contracts/masterchef/masterchef-v3.md#onerc721received","200":"docs/pages/contracts/masterchef/masterchef-v3.md#harvest-1","201":"docs/pages/contracts/masterchef/masterchef-v3.md#harvestoperation","202":"docs/pages/contracts/masterchef/masterchef-v3.md#withdraw-1","203":"docs/pages/contracts/masterchef/masterchef-v3.md#updateliquidity-1","204":"docs/pages/contracts/masterchef/masterchef-v3.md#updateboostmultiplier","205":"docs/pages/contracts/masterchef/masterchef-v3.md#updateliquidityoperation","206":"docs/pages/contracts/masterchef/masterchef-v3.md#increaseliquidity","207":"docs/pages/contracts/masterchef/masterchef-v3.md#pay","208":"docs/pages/contracts/masterchef/masterchef-v3.md#refund","209":"docs/pages/contracts/masterchef/masterchef-v3.md#decreaseliquidity","210":"docs/pages/contracts/masterchef/masterchef-v3.md#collect","211":"docs/pages/contracts/masterchef/masterchef-v3.md#collectto","212":"docs/pages/contracts/masterchef/masterchef-v3.md#transfertoken","213":"docs/pages/contracts/masterchef/masterchef-v3.md#unwrapweth9","214":"docs/pages/contracts/masterchef/masterchef-v3.md#sweeptoken","215":"docs/pages/contracts/syrup-pools/index.md#syrup-池","216":"docs/pages/contracts/syrup-pools/index.md#合约信息","217":"docs/pages/contracts/syrup-pools/index.md#syrup-池部署者","218":"docs/pages/contracts/syrup-pools/pooldeployer.md#pooldeployer","219":"docs/pages/contracts/syrup-pools/smartchefinitializable.md#smartchefinitializable","220":"docs/pages/contracts/syrup-pools/smartchefinitializable.md#合约角色","221":"docs/pages/contracts/syrup-pools/smartchefinitializable.md#合约拥有者","222":"docs/pages/contracts/syrup-pools/smartchefinitializable.md#函数","223":"docs/pages/contracts/syrup-pools/smartchefinitializable.md#emergencyrewardwithdraw---合约拥有者","224":"docs/pages/contracts/syrup-pools/smartchefinitializable.md#recoverwrongtokens---合约拥有者","225":"docs/pages/contracts/syrup-pools/smartchefinitializable.md#stoprewards---合约拥有者","226":"docs/pages/contracts/syrup-pools/smartchefinitializable.md#updatepoollimitperuser---合约拥有者","227":"docs/pages/contracts/syrup-pools/smartchefinitializable.md#updaterewardperblock---合约拥有者","228":"docs/pages/contracts/syrup-pools/smartchefinitializable.md#updatestartandendblocks---合约拥有者","229":"docs/pages/contracts/syrup-pools/smartchefinitializable.md#transferownership---合约拥有者","230":"docs/pages/contracts/v2/factory-v2.md#factory-v2","231":"docs/pages/contracts/v2/factory-v2.md#合约信息","232":"docs/pages/contracts/v2/factory-v2.md#读取函数","233":"docs/pages/contracts/v2/factory-v2.md#getpair","234":"docs/pages/contracts/v2/factory-v2.md#allpairs","235":"docs/pages/contracts/v2/factory-v2.md#allpairslength","236":"docs/pages/contracts/v2/factory-v2.md#feeto","237":"docs/pages/contracts/v2/factory-v2.md#feetosetter","238":"docs/pages/contracts/v2/factory-v2.md#写入函数","239":"docs/pages/contracts/v2/factory-v2.md#createpair","240":"docs/pages/contracts/v2/factory-v2.md#setfeeto","241":"docs/pages/contracts/v2/factory-v2.md#setfeetosetter","242":"docs/pages/contracts/v2/factory-v2.md#事件","243":"docs/pages/contracts/v2/factory-v2.md#paircreated","244":"docs/pages/contracts/v2/factory-v2.md#接口","245":"docs/pages/contracts/v2/index.md#v2-合约","246":"docs/pages/contracts/v2/router-v2.md#router-v2","247":"docs/pages/contracts/v2/router-v2.md#合约信息","248":"docs/pages/contracts/v2/router-v2.md#读取函数","249":"docs/pages/contracts/v2/router-v2.md#weth","250":"docs/pages/contracts/v2/router-v2.md#factory","251":"docs/pages/contracts/v2/router-v2.md#getamountout","252":"docs/pages/contracts/v2/router-v2.md#getamountin","253":"docs/pages/contracts/v2/router-v2.md#getamountsout","254":"docs/pages/contracts/v2/router-v2.md#getamountsin","255":"docs/pages/contracts/v2/router-v2.md#quote","256":"docs/pages/contracts/v2/router-v2.md#写入函数","257":"docs/pages/contracts/v2/router-v2.md#addliquidity","258":"docs/pages/contracts/v2/router-v2.md#addliquidityeth","259":"docs/pages/contracts/v2/router-v2.md#removeliquidity","260":"docs/pages/contracts/v2/router-v2.md#removeliquidityeth","261":"docs/pages/contracts/v2/router-v2.md#removeliquidityethsupportingfeeontransfertokens","262":"docs/pages/contracts/v2/router-v2.md#removeliquidityethwithpermit","263":"docs/pages/contracts/v2/router-v2.md#removeliquidityethwithpermitsupportingfeeontransfertokens","264":"docs/pages/contracts/v2/router-v2.md#removeliquiditywithpermit","265":"docs/pages/contracts/v2/router-v2.md#swapethforexacttokens","266":"docs/pages/contracts/v2/router-v2.md#swapexactethfortokens","267":"docs/pages/contracts/v2/router-v2.md#swapexactethfortokenssupportingfeeontransfertokens","268":"docs/pages/contracts/v2/router-v2.md#swapexacttokensforeth","269":"docs/pages/contracts/v2/router-v2.md#swapexacttokensforethsupportingfeeontransfertokens","270":"docs/pages/contracts/universal-router/addresses.md#pancakeswap-通用路由器地址","271":"docs/pages/contracts/v3/addresses.md#pancakeswap-v3-地址","272":"docs/pages/contracts/v3/addresses.md#核心","273":"docs/pages/contracts/v3/addresses.md#外围","274":"docs/pages/contracts/v3/addresses.md#聪明路由器","275":"docs/pages/contracts/v3/addresses.md#masterchefv3","276":"docs/pages/contracts/v3/pancakev3factory.md#pancakev3factory","277":"docs/pages/contracts/v3/pancakev3factory.md#solidity-api","278":"docs/pages/contracts/v3/pancakev3factory.md#owner","279":"docs/pages/contracts/v3/pancakev3factory.md#pooldeployer","280":"docs/pages/contracts/v3/pancakev3factory.md#feeamounttickspacing","281":"docs/pages/contracts/v3/pancakev3factory.md#getpool","282":"docs/pages/contracts/v3/pancakev3factory.md#feeamounttickspacingextrainfo","283":"docs/pages/contracts/v3/pancakev3factory.md#constructor","284":"docs/pages/contracts/v3/pancakev3factory.md#createpool","285":"docs/pages/contracts/v3/pancakev3factory.md#setowner","286":"docs/pages/contracts/v3/pancakev3factory.md#enablefeeamount","287":"docs/pages/contracts/v3/pancakev3factory.md#setwhitelistaddress","288":"docs/pages/contracts/v3/pancakev3factory.md#setfeeamountextrainfo","289":"docs/pages/contracts/v3/pancakev3pool.md#pancakev3pool","290":"docs/pages/contracts/v3/pancakev3pool.md#solidity-api","291":"docs/pages/contracts/v3/pancakev3pool.md#factory","292":"docs/pages/contracts/v3/pancakev3pool.md#token0","293":"docs/pages/contracts/v3/pancakev3pool.md#token1","294":"docs/pages/contracts/v3/pancakev3pool.md#fee","295":"docs/pages/contracts/v3/pancakev3pool.md#tickspacing","296":"docs/pages/contracts/v3/pancakev3pool.md#maxliquiditypertick","297":"docs/pages/contracts/v3/pancakev3pool.md#protocol_fee_sp","298":"docs/pages/contracts/v3/pancakev3pool.md#protocol_fee_denominator","299":"docs/pages/contracts/v3/pancakev3pool.md#slot0","300":"docs/pages/contracts/v3/pancakev3pool.md#slot0-1","301":"docs/pages/contracts/v3/pancakev3pool.md#feegrowthglobal0x128","302":"docs/pages/contracts/v3/pancakev3pool.md#feegrowthglobal1x128","303":"docs/pages/contracts/v3/pancakev3pool.md#protocolfees","304":"docs/pages/contracts/v3/pancakev3pool.md#protocolfees-1","305":"docs/pages/contracts/v3/pancakev3pool.md#liquidity","306":"docs/pages/contracts/v3/pancakev3pool.md#ticks","307":"docs/pages/contracts/v3/pancakev3pool.md#tickbitmap","308":"docs/pages/contracts/v3/pancakev3pool.md#positions","309":"docs/pages/contracts/v3/pancakev3pool.md#observations","310":"docs/pages/contracts/v3/pancakev3pool.md#lmpool","311":"docs/pages/contracts/v3/pancakev3pool.md#setlmpoolevent","312":"docs/pages/contracts/v3/pancakev3pool.md#lock","313":"docs/pages/contracts/v3/pancakev3pool.md#onlyfactoryowner","314":"docs/pages/contracts/v3/pancakev3pool.md#constructor","315":"docs/pages/contracts/v3/pancakev3pool.md#_blocktimestamp","316":"docs/pages/contracts/v3/pancakev3pool.md#snapshotcumulativesinside","317":"docs/pages/contracts/v3/pancakev3pool.md#observe","318":"docs/pages/contracts/v3/pancakev3pool.md#increaseobservationcardinalitynext","319":"docs/pages/contracts/v3/pancakev3pool.md#initialize","320":"docs/pages/contracts/v3/pancakev3pool.md#modifypositionparams","321":"docs/pages/contracts/v3/pancakev3pool.md#mint","322":"docs/pages/contracts/v3/pancakev3pool.md#collect","323":"docs/pages/contracts/v3/pancakev3pool.md#burn","324":"docs/pages/contracts/v3/pancakev3pool.md#swapcache","325":"docs/pages/contracts/v3/pancakev3pool.md#swapstate","326":"docs/pages/contracts/v3/pancakev3pool.md#stepcomputations","327":"docs/pages/contracts/v3/pancakev3pool.md#swap","328":"docs/pages/contracts/v3/pancakev3pool.md#flash","329":"docs/pages/contracts/v3/pancakev3pool.md#setfeeprotocol","330":"docs/pages/contracts/v3/pancakev3pool.md#collectprotocol","331":"docs/pages/contracts/v3/pancakev3pool.md#setlmpool","332":"docs/pages/contracts-aptos/v2/overview.mdx#v2","333":"docs/pages/contracts-aptos/v2/overview.mdx#审计","334":"docs/pages/contracts-aptos/v2/router-v2.md#router-v2","335":"docs/pages/contracts-aptos/v2/router-v2.md#合约信息","336":"docs/pages/contracts-aptos/v2/router-v2.md#类型","337":"docs/pages/contracts-aptos/v2/router-v2.md#入口函数","338":"docs/pages/contracts-aptos/v2/router-v2.md#创建交易对","339":"docs/pages/contracts-aptos/v2/router-v2.md#参数","340":"docs/pages/contracts-aptos/v2/router-v2.md#添加流动性","341":"docs/pages/contracts-aptos/v2/router-v2.md#参数-1","342":"docs/pages/contracts-aptos/v2/router-v2.md#移除流动性","343":"docs/pages/contracts-aptos/v2/router-v2.md#参数-2","344":"docs/pages/contracts-aptos/v2/router-v2.md#交换确切输入","345":"docs/pages/contracts-aptos/v2/router-v2.md#参数-3","346":"docs/pages/contracts-aptos/v2/router-v2.md#交换确切输出","347":"docs/pages/contracts-aptos/v2/router-v2.md#参数-4","348":"docs/pages/contracts-aptos/v2/router-v2.md#双跳交换确切输入","349":"docs/pages/contracts-aptos/v2/router-v2.md#参数-5","350":"docs/pages/contracts-aptos/v2/router-v2.md#双跳交换确切输出","351":"docs/pages/contracts-aptos/v2/router-v2.md#参数-6","352":"docs/pages/contracts-aptos/v2/router-v2.md#三跳交换确切输入","353":"docs/pages/contracts-aptos/v2/router-v2.md#参数-7","354":"docs/pages/contracts-aptos/v2/router-v2.md#三跳交换确切输出","355":"docs/pages/contracts-aptos/v2/router-v2.md#四跳交换确切输入","356":"docs/pages/contracts-aptos/v2/router-v2.md#四跳交换确切输出","357":"docs/pages/contracts-aptos/v2/router-v2.md#公共函数","358":"docs/pages/contracts-aptos/v2/router-v2.md#交换确切-x-到-y","359":"docs/pages/contracts-aptos/v2/router-v2.md#输入值","360":"docs/pages/contracts-aptos/v2/router-v2.md#返回值","361":"docs/pages/contracts-aptos/v2/router-v2.md#交换-x-到确切-y","362":"docs/pages/contracts-aptos/v2/router-v2.md#输入值-1","363":"docs/pages/contracts-aptos/v2/router-v2.md#返回值-1","364":"docs/pages/contracts-aptos/v2/router-v2.md#获取输入数量","365":"docs/pages/contracts-aptos/v2/router-v2.md#输入值-2","366":"docs/pages/contracts-aptos/v2/router-v2.md#返回值-2","367":"docs/pages/contracts-aptos/v2/swap-core-v2.md#swap-core-v2","368":"docs/pages/contracts-aptos/v2/swap-core-v2.md#合约信息","369":"docs/pages/contracts-aptos/v2/swap-core-v2.md#类型","370":"docs/pages/contracts-aptos/v2/swap-core-v2.md#资源","371":"docs/pages/contracts-aptos/v2/swap-core-v2.md#lptoken","372":"docs/pages/contracts-aptos/v2/swap-core-v2.md#tokenpairmetadata","373":"docs/pages/contracts-aptos/v2/swap-core-v2.md#tokenpairreserve","374":"docs/pages/contracts-aptos/v2/swap-core-v2.md#swapinfo","375":"docs/pages/contracts-aptos/v2/swap-core-v2.md#公共函数","376":"docs/pages/contracts-aptos/v2/swap-core-v2.md#注册-lp","377":"docs/pages/contracts-aptos/v2/swap-core-v2.md#输入值","378":"docs/pages/contracts-aptos/v2/swap-core-v2.md#池是否已创建","379":"docs/pages/contracts-aptos/v2/swap-core-v2.md#返回值","380":"docs/pages/contracts-aptos/v2/swap-core-v2.md#lp-余额","381":"docs/pages/contracts-aptos/v2/swap-core-v2.md#输入值-1","382":"docs/pages/contracts-aptos/v2/swap-core-v2.md#返回值-1","383":"docs/pages/contracts-aptos/v2/swap-core-v2.md#总-lp-供应量","384":"docs/pages/contracts-aptos/v2/swap-core-v2.md#返回值-2","385":"docs/pages/contracts-aptos/v2/swap-core-v2.md#代币储备","386":"docs/pages/contracts-aptos/v2/swap-core-v2.md#返回值-3","387":"docs/pages/contracts-aptos/v2/swap-core-v2.md#代币余额","388":"docs/pages/contracts-aptos/v2/swap-core-v2.md#返回值-4","389":"docs/pages/contracts/v3/smartrouter/index.md#smartrouterv3","390":"docs/pages/contracts/v3/smartrouter/index.md#合约信息","391":"docs/pages/contracts/v3/smartrouter/index.md#注意","392":"docs/pages/contracts/v3/smartrouter/index.md#api","393":"docs/pages/contracts/v3/smartrouter/index.md#构造函数","394":"docs/pages/contracts/v3/smartrouter/stableswaprouter.md#stableswaprouter","395":"docs/pages/contracts/v3/smartrouter/stableswaprouter.md#solidity-api","396":"docs/pages/contracts/v3/smartrouter/stableswaprouter.md#stableswapfactory","397":"docs/pages/contracts/v3/smartrouter/stableswaprouter.md#stableswapinfo","398":"docs/pages/contracts/v3/smartrouter/stableswaprouter.md#setstableswap","399":"docs/pages/contracts/v3/smartrouter/stableswaprouter.md#constructor","400":"docs/pages/contracts/v3/smartrouter/stableswaprouter.md#setstableswap-1","401":"docs/pages/contracts/v3/smartrouter/stableswaprouter.md#exactinputstableswap","402":"docs/pages/contracts/v3/smartrouter/stableswaprouter.md#exactoutputstableswap","403":"docs/pages/contracts/v3/smartrouter/v2swaprouter.md#v2swaprouter","404":"docs/pages/contracts/v3/smartrouter/v2swaprouter.md#solidity-api","405":"docs/pages/contracts/v3/smartrouter/v2swaprouter.md#swapexacttokensfortokens","406":"docs/pages/contracts/v3/smartrouter/v3swaprouter.md#v3swaprouter","407":"docs/pages/contracts/v3/smartrouter/v3swaprouter.md#solidity-api","408":"docs/pages/contracts/v3/smartrouter/v3swaprouter.md#swapcallbackdata","409":"docs/pages/contracts/v3/smartrouter/v3swaprouter.md#pancakev3swapcallback","410":"docs/pages/contracts/v3/smartrouter/v3swaprouter.md#exactinputsingle","411":"docs/pages/contracts/v3/smartrouter/v3swaprouter.md#exactinput","412":"docs/pages/contracts/v3/smartrouter/v3swaprouter.md#exactoutputsingle","413":"docs/pages/contracts/v3/smartrouter/v3swaprouter.md#exactoutput","414":"docs/pages/contracts/v4/overview/accounting-layer-vault.mdx#accounting-layer--vault","415":"docs/pages/contracts/v4/overview/accounting-layer-vault.mdx#锁机制","416":"docs/pages/contracts/v4/overview/accounting-layer-vault.mdx#调整余额","417":"docs/pages/contracts/v4/overview/accounting-layer-vault.mdx#负余额变动","418":"docs/pages/contracts/v4/overview/accounting-layer-vault.mdx#正余额变动","419":"docs/pages/contracts/v4/overview/accounting-layer-vault.mdx#何时使用-takemintsettleburn","420":"docs/pages/contracts/v4/overview/amm-layer-poolmanager.mdx#amm-层--poolmanager","421":"docs/pages/contracts/v4/overview/amm-layer-poolmanager.mdx#单例","422":"docs/pages/contracts/v4/overview/amm-layer-poolmanager.mdx#poolkey--poolid","423":"docs/pages/contracts/v4/overview/amm-layer-poolmanager.mdx#初始化池","424":"docs/pages/contracts/v4/overview/custom-layer-hook.mdx#常见问题","425":"docs/pages/contracts/v4/overview/custom-layer-hook.mdx#hook-列表","426":"docs/pages/contracts/v4/overview/amm-layer/concentrated-liquidity.mdx#集中流动性池","427":"docs/pages/contracts/v4/overview/amm-layer/concentrated-liquidity.mdx#概览","428":"docs/pages/contracts/v4/overview/amm-layer/concentrated-liquidity.mdx#概念","429":"docs/pages/contracts/v4/overview/amm-layer/concentrated-liquidity.mdx#tick","430":"docs/pages/contracts/v4/overview/amm-layer/concentrated-liquidity.mdx#示例-1-cakeweth-池","431":"docs/pages/contracts/v4/overview/amm-layer/concentrated-liquidity.mdx#示例-2-wethusdt-池带有不同代币小数","432":"docs/pages/contracts/v4/overview/amm-layer/concentrated-liquidity.mdx#tick-间隔","433":"docs/pages/contracts/v4/overview/amm-layer/concentrated-liquidity.mdx#sqrtpricex96","434":"docs/pages/contracts/v4/overview/amm-layer/concentrated-liquidity.mdx#示例-1-cakeweth-池-1","435":"docs/pages/contracts/v4/overview/amm-layer/concentrated-liquidity.mdx#示例-2-wethusdt-池带有不同代币小数-1","436":"docs/pages/contracts/v4/overview/amm-layer/concentrated-liquidity.mdx#流动性变化"},"fieldIds":{"title":0,"titles":1,"text":2},"fieldLength":{"0":[2,1,42],"1":[1,1,1],"2":[4,1,1],"3":[1,4,1],"4":[4,5,8],"5":[6,5,11],"6":[1,4,6],"7":[5,1,1],"8":[1,5,13],"9":[1,5,7],"10":[4,1,1],"11":[1,4,1],"12":[2,5,8],"13":[1,1,1],"14":[1,1,11],"15":[2,3,9],"16":[1,1,1],"17":[1,1,13],"18":[1,2,1],"19":[3,3,42],"20":[1,3,26],"21":[2,1,5],"22":[1,1,1],"23":[1,1,1],"24":[1,1,1],"25":[2,3,16],"26":[1,1,6],"27":[2,1,1],"28":[1,2,32],"29":[1,1,124],"30":[1,1,1],"31":[1,1,7],"32":[3,1,1],"33":[1,3,11],"34":[1,3,8],"35":[1,3,7],"36":[1,1,1],"37":[1,1,10],"38":[1,1,1],"39":[1,2,78],"40":[1,2,29],"41":[1,2,14],"42":[1,2,37],"43":[1,1,1],"44":[1,2,20],"45":[1,2,20],"46":[2,2,16],"47":[3,2,8],"48":[2,2,12],"49":[1,1,1],"50":[2,2,15],"51":[1,4,4],"52":[1,4,4],"53":[2,2,7],"54":[1,4,2],"55":[1,1,7],"56":[2,1,1],"57":[1,2,11],"58":[1,2,9],"59":[1,2,1],"60":[1,3,28],"61":[1,3,65],"62":[1,2,1],"63":[1,3,20],"64":[1,3,20],"65":[2,3,17],"66":[1,2,1],"67":[1,3,13],"68":[1,4,9],"69":[1,3,15],"70":[1,4,2],"71":[1,4,2],"72":[1,3,15],"73":[1,4,2],"74":[1,4,2],"75":[1,2,8],"76":[1,1,1],"77":[1,1,10],"78":[1,1,1],"79":[1,2,6],"80":[2,1,4],"81":[3,1,1],"82":[1,3,1],"83":[2,5,8],"84":[4,3,98],"85":[1,3,9],"86":[1,3,8],"87":[2,1,25],"88":[2,1,1],"89":[2,2,1],"90":[1,4,5],"91":[2,4,8],"92":[2,1,1],"93":[2,2,11],"94":[1,4,8],"95":[2,4,6],"96":[2,4,8],"97":[6,4,8],"98":[1,2,1],"99":[4,3,35],"100":[2,3,86],"101":[2,3,39],"102":[2,3,95],"103":[2,3,27],"104":[2,3,20],"105":[2,3,20],"106":[2,3,24],"107":[2,3,44],"108":[3,1,13],"109":[1,1,9],"110":[1,1,51],"111":[1,1,56],"112":[1,1,1],"113":[1,1,1],"114":[2,2,10],"115":[1,2,10],"116":[1,1,35],"117":[2,1,13],"118":[1,1,1],"119":[1,1,1],"120":[1,2,8],"121":[2,2,9],"122":[2,2,2],"123":[1,1,6],"124":[2,1,1],"125":[2,2,7],"126":[1,4,15],"127":[1,4,16],"128":[1,4,3],"129":[1,4,12],"130":[1,4,14],"131":[1,4,12],"132":[1,4,9],"133":[1,4,5],"134":[1,4,4],"135":[1,4,4],"136":[1,4,4],"137":[1,4,5],"138":[2,4,6],"139":[1,4,4],"140":[1,4,5],"141":[1,4,3],"142":[1,4,3],"143":[1,4,3],"144":[1,4,3],"145":[1,4,4],"146":[2,4,5],"147":[2,4,4],"148":[2,4,4],"149":[1,4,3],"150":[2,4,6],"151":[3,4,7],"152":[1,4,3],"153":[2,4,4],"154":[1,4,8],"155":[1,4,3],"156":[1,4,3],"157":[1,4,3],"158":[1,4,3],"159":[1,4,3],"160":[1,4,3],"161":[1,4,3],"162":[1,4,3],"163":[1,4,3],"164":[1,4,3],"165":[1,4,5],"166":[1,4,3],"167":[1,4,3],"168":[1,4,3],"169":[1,4,3],"170":[1,4,3],"171":[1,4,11],"172":[1,4,6],"173":[1,4,12],"174":[1,4,9],"175":[1,4,13],"176":[1,4,5],"177":[1,4,5],"178":[1,4,5],"179":[1,4,5],"180":[1,4,10],"181":[1,4,9],"182":[1,4,8],"183":[1,4,5],"184":[1,4,5],"185":[1,4,3],"186":[1,4,5],"187":[1,4,3],"188":[1,4,4],"189":[1,4,19],"190":[1,4,17],"191":[1,4,20],"192":[1,4,24],"193":[1,4,7],"194":[1,4,6],"195":[1,4,7],"196":[1,4,25],"197":[1,4,23],"198":[1,4,13],"199":[1,4,14],"200":[1,4,19],"201":[1,4,14],"202":[1,4,22],"203":[1,4,15],"204":[1,4,17],"205":[1,4,11],"206":[1,4,43],"207":[1,4,13],"208":[1,4,13],"209":[1,4,34],"210":[1,4,42],"211":[1,4,15],"212":[1,4,15],"213":[1,4,18],"214":[1,4,9],"215":[2,1,1],"216":[1,2,15],"217":[2,4,6],"218":[1,1,1],"219":[1,1,1],"220":[1,1,4],"221":[1,2,10],"222":[1,1,1],"223":[2,2,14],"224":[2,2,28],"225":[2,2,11],"226":[2,2,29],"227":[2,2,25],"228":[2,2,38],"229":[2,2,7],"230":[2,1,9],"231":[1,2,8],"232":[1,2,1],"233":[1,3,20],"234":[1,3,19],"235":[1,3,9],"236":[1,3,10],"237":[1,3,10],"238":[1,2,1],"239":[1,3,18],"240":[1,3,4],"241":[1,3,4],"242":[1,2,1],"243":[1,3,20],"244":[1,2,38],"245":[2,1,5],"246":[2,1,10],"247":[1,2,8],"248":[1,2,1],"249":[1,3,13],"250":[1,3,15],"251":[1,3,11],"252":[1,3,11],"253":[1,3,12],"254":[1,3,12],"255":[1,3,11],"256":[1,2,1],"257":[1,3,32],"258":[1,3,32],"259":[1,3,31],"260":[1,3,30],"261":[1,3,29],"262":[1,3,46],"263":[1,3,44],"264":[1,3,48],"265":[1,3,30],"266":[1,3,30],"267":[1,3,28],"268":[1,3,29],"269":[1,3,17],"270":[2,1,11],"271":[3,1,1],"272":[1,3,12],"273":[1,3,15],"274":[1,3,14],"275":[1,3,8],"276":[1,1,4],"277":[2,1,5],"278":[1,3,7],"279":[1,3,4],"280":[1,3,16],"281":[1,3,17],"282":[1,3,14],"283":[1,3,5],"284":[1,3,26],"285":[1,3,11],"286":[1,3,20],"287":[1,3,14],"288":[1,3,13],"289":[1,1,1],"290":[2,1,1],"291":[1,3,8],"292":[1,3,5],"293":[1,3,5],"294":[1,3,11],"295":[1,3,24],"296":[1,3,11],"297":[3,3,5],"298":[3,3,5],"299":[1,3,15],"300":[1,3,12],"301":[1,3,10],"302":[1,3,10],"303":[1,3,6],"304":[1,3,13],"305":[1,3,7],"306":[1,3,14],"307":[1,4,15],"308":[1,3,12],"309":[1,4,13],"310":[1,3,4],"311":[1,3,5],"312":[1,3,9],"313":[1,3,7],"314":[1,3,3],"315":[2,3,15],"316":[1,3,33],"317":[1,3,53],"318":[1,3,12],"319":[1,3,17],"320":[1,3,10],"321":[1,3,34],"322":[1,3,42],"323":[1,3,28],"324":[1,3,14],"325":[1,3,15],"326":[1,3,14],"327":[1,3,50],"328":[1,3,29],"329":[1,3,14],"330":[1,3,26],"331":[1,3,7],"332":[1,1,4],"333":[1,1,16],"334":[2,1,1],"335":[1,2,12],"336":[1,2,8],"337":[1,2,1],"338":[1,3,14],"339":[1,4,2],"340":[1,3,20],"341":[1,4,12],"342":[1,3,19],"343":[1,4,13],"344":[1,3,24],"345":[1,4,10],"346":[1,3,24],"347":[1,4,10],"348":[1,3,31],"349":[1,4,10],"350":[1,3,31],"351":[1,4,10],"352":[1,3,33],"353":[1,4,10],"354":[1,3,37],"355":[1,3,39],"356":[1,3,39],"357":[1,2,1],"358":[4,4,21],"359":[1,4,8],"360":[1,4,7],"361":[4,4,24],"362":[1,4,13],"363":[1,4,10],"364":[1,3,14],"365":[1,4,6],"366":[1,4,6],"367":[3,1,1],"368":[1,3,12],"369":[1,3,8],"370":[1,3,1],"371":[1,4,13],"372":[1,4,54],"373":[1,4,26],"374":[1,4,28],"375":[1,3,1],"376":[2,4,15],"377":[1,6,2],"378":[1,4,13],"379":[1,5,2],"380":[2,4,15],"381":[1,6,2],"382":[1,6,4],"383":[3,4,16],"384":[1,7,3],"385":[1,4,13],"386":[1,5,8],"387":[1,4,13],"388":[1,5,7],"389":[1,1,1],"390":[1,1,2],"391":[1,1,6],"392":[1,1,1],"393":[1,2,11],"394":[1,1,1],"395":[2,1,1],"396":[1,3,3],"397":[1,3,3],"398":[1,3,6],"399":[1,3,6],"400":[1,3,11],"401":[1,3,23],"402":[1,3,23],"403":[1,1,1],"404":[2,1,1],"405":[1,3,22],"406":[1,1,1],"407":[2,1,1],"408":[1,3,7],"409":[1,3,38],"410":[1,3,27],"411":[1,3,27],"412":[1,3,24],"413":[1,3,26],"414":[4,1,8],"415":[1,4,91],"416":[1,4,22],"417":[1,5,19],"418":[1,5,23],"419":[6,5,17],"420":[4,1,16],"421":[1,5,15],"422":[3,5,79],"423":[1,5,21],"424":[1,1,63],"425":[2,1,12],"426":[1,1,1],"427":[1,1,13],"428":[1,1,1],"429":[1,2,37],"430":[3,3,23],"431":[3,3,34],"432":[2,2,27],"433":[1,2,26],"434":[3,3,37],"435":[3,3,33],"436":[1,2,16]},"averageFieldLength":[1.3295194508009147,2.9153318077803214,13.958810068649885],"storedFields":{"0":{"href":"/bug-bounty#bug-bounty","html":"</header>\n<p>PancakeSwap 的漏洞悬赏计划主要关注我们的智能合约、网站和应用程序，重点在于防止用户资金的损失，无论是通过直接耗尽锁定资金，还是通过社交工程攻击来重定向用户或强迫他们签署交易。</p>\n<p><a href=\"https://immunefi.com/bounty/pancakeswap\">https://immunefi.com/bounty/pancakeswap</a></p>\n<p><strong>智能合约和区块链</strong>*</p>\n<table><thead><tr><th style=\"text-align:left\">级别</th><th style=\"text-align:left\"></th></tr></thead><tbody><tr><td style=\"text-align:left\">严重</td><td style=\"text-align:left\">最高 USD $1,000,000</td></tr><tr><td style=\"text-align:left\">高</td><td style=\"text-align:left\">USD $40,000</td></tr><tr><td style=\"text-align:left\">中</td><td style=\"text-align:left\">USD $5,000</td></tr><tr><td style=\"text-align:left\">低</td><td style=\"text-align:left\">USD $1,000</td></tr></tbody></table>\n<p>*所有的漏洞报告必须包含概念验证，演示漏洞是如何被利用的以符合奖励资格。这可以是一个智能合约本身或一笔交易。</p>\n<strong>网站和应用</strong>\n<table><thead><tr><th style=\"text-align:left\">级别</th><th style=\"text-align:left\"></th></tr></thead><tbody><tr><td style=\"text-align:left\">严重*</td><td style=\"text-align:left\">USD $7,500</td></tr><tr><td style=\"text-align:left\">高</td><td style=\"text-align:left\">USD $4,000</td></tr><tr><td style=\"text-align:left\">中</td><td style=\"text-align:left\">USD $1,500</td></tr></tbody></table>\n<p>*XSS 报告仅限于那些导致用户签署交易或重定向的影响。</p>\n<p>所有的奖励都由 <strong>PancakeSwap</strong> 团队支付，并与这里设定的 <strong>USD</strong> 价值挂钩，可以用 <strong>CAKE</strong> 或 <strong>BUSD</strong> 支付。</p>","isPage":true,"text":"\nPancakeSwap 的漏洞悬赏计划主要关注我们的智能合约、网站和应用程序，重点在于防止用户资金的损失，无论是通过直接耗尽锁定资金，还是通过社交工程攻击来重定向用户或强迫他们签署交易。\nhttps://immunefi.com/bounty/pancakeswap\n智能合约和区块链*\n级别严重最高 USD $1,000,000高USD $40,000中USD $5,000低USD $1,000\n*所有的漏洞报告必须包含概念验证，演示漏洞是如何被利用的以符合奖励资格。这可以是一个智能合约本身或一笔交易。\n网站和应用\n级别严重*USD $7,500高USD $4,000中USD $1,500\n*XSS 报告仅限于那些导致用户签署交易或重定向的影响。\n所有的奖励都由 PancakeSwap 团队支付，并与这里设定的 USD 价值挂钩，可以用 CAKE 或 BUSD 支付。","title":"Bug Bounty","titles":[]},"1":{"href":"/contracts/cross-chain-farming#跨链农场","html":"</header>","isPage":true,"text":"","title":"跨链农场","titles":[]},"2":{"href":"/contracts/farm-booster-bcake#farm-booster-bcake","html":"</header>\n","isPage":true,"text":"\n","title":"Farm Booster (bCAKE)","titles":[]},"3":{"href":"/contracts/farm-booster-bcake#合约信息","html":"\n","isPage":false,"text":"\n","title":"合约信息","titles":["Farm Booster (bCAKE)"]},"4":{"href":"/contracts/farm-booster-bcake#bcake-farm-booster-合约","html":"\n<p><strong>合约名称:</strong> FarmBooster<br/>\n<strong>合约地址:</strong> <a href=\"https://bscscan.com/address/0xe4faa3ef5a9708c894435b0f39c2b440936a3a52\">0xE4FAa3Ef5A9708C894435B0F39c2B440936A3A52</a></p>\n<p><a href=\"https://bscscan.com/address/0xe4faa3ef5a9708c894435b0f39c2b440936a3a52\">在 BscScan 上查看</a></p>\n","isPage":false,"text":"\n合约名称: FarmBooster\n合约地址: 0xE4FAa3Ef5A9708C894435B0F39c2B440936A3A52\n在 BscScan 上查看\n","title":"bCAKE Farm Booster 合约","titles":["Farm Booster (bCAKE)","合约信息",null]},"5":{"href":"/contracts/farm-booster-bcake#bcake-farm-booster-proxy-factory-合约","html":"\n<p>这个工厂合约帮助用户部署代理来使用 bCAKE 提升倍数进行挖矿。</p>\n<p><strong>合约名称:</strong> FarmBoosterProxyFactory<br/>\n<strong>合约地址:</strong> <a href=\"https://bscscan.com/address/0x2c36221bf724c60e9fee3dd44e2da8017a8ef3ba\">0x2C36221bF724c60E9FEE3dd44e2da8017a8EF3BA</a></p>\n<p><a href=\"https://bscscan.com/address/0x2c36221bf724c60e9fee3dd44e2da8017a8ef3ba\">在 BscScan 上查看</a></p>\n","isPage":false,"text":"\n这个工厂合约帮助用户部署代理来使用 bCAKE 提升倍数进行挖矿。\n合约名称: FarmBoosterProxyFactory\n合约地址: 0x2C36221bF724c60E9FEE3dd44e2da8017a8EF3BA\n在 BscScan 上查看\n","title":"bCAKE Farm Booster Proxy Factory 合约","titles":["Farm Booster (bCAKE)","合约信息",null]},"6":{"href":"/contracts/farm-booster-bcake#审计","html":"\n<p><a href=\"https://github.com/peckshield/publications/tree/master/audit_reports/PeckShield-Audit-Report-PancakeSwap-FarmBooster-v1.0.pdf\">Peckshield 的 Farm Booster 安全审计</a></p>","isPage":false,"text":"\nPeckshield 的 Farm Booster 安全审计","title":"审计","titles":["Farm Booster (bCAKE)"]},"7":{"href":"/contracts/fixed-term-staking-cake-pool#cake-syrup-pool已弃用","html":"</header>\n","isPage":true,"text":"\n","title":"CAKE Syrup Pool（已弃用）","titles":[]},"8":{"href":"/contracts/fixed-term-staking-cake-pool#合约信息","html":"\n<p><strong>合约名称：</strong> CakePool<br/>\n<strong>合约地址：</strong> <code>0x45c54210128a065de780C4B0Df3d16664f7f859e</code></p>\n<p><a href=\"https://bscscan.com/address/0x45c54210128a065de780C4B0Df3d16664f7f859e\">在 BscScan 上查看 PancakeSwap 的 Cake Pool 合约。</a></p>\n","isPage":false,"text":"\n合约名称： CakePool\n合约地址： 0x45c54210128a065de780C4B0Df3d16664f7f859e\n在 BscScan 上查看 PancakeSwap 的 Cake Pool 合约。\n","title":"合约信息","titles":["CAKE Syrup Pool（已弃用）"]},"9":{"href":"/contracts/fixed-term-staking-cake-pool#审计报告","html":"\n<p><a href=\"https://github.com/peckshield/publications/tree/master/audit_reports/PeckShield-Audit-Report-PancakeSwap-CakePool-v1.0.pdf\">Pecksheild 的新 CAKE Pool 安全审计</a></p>\n<p><a href=\"https://github.com/slowmist/Knowledge-Base/blob/master/open-report-V2/smart-contract/SlowMist%20Audit%20Report%20-%20Pancakeswap-CakePool_en-us.pdf\">Slowmist 的新 CAKE Pool 安全审计</a></p>","isPage":false,"text":"\nPecksheild 的新 CAKE Pool 安全审计\nSlowmist 的新 CAKE Pool 安全审计","title":"审计报告","titles":["CAKE Syrup Pool（已弃用）"]},"10":{"href":"/contracts/ifo-commit-limit-icake#ifo-限额-icake","html":"</header>\n","isPage":true,"text":"\n","title":"IFO 限额 (iCAKE)","titles":[]},"11":{"href":"/contracts/ifo-commit-limit-icake#合约信息","html":"\n","isPage":false,"text":"\n","title":"合约信息","titles":["IFO 限额 (iCAKE)"]},"12":{"href":"/contracts/ifo-commit-limit-icake#icake-计算合约","html":"\n<p><strong>合约名称:</strong> ICake<br/>\n<strong>合约地址:</strong> <a href=\"https://bscscan.com/address/0x3c458828d1622f5f4d526eb0d24da8c4eb8f07b1#code\">0x3C458828D1622F5f4d526eb0d24Da8C4Eb8F07b1</a></p>\n<p><a href=\"https://bscscan.com/address/0x3c458828d1622f5f4d526eb0d24da8c4eb8f07b1#code\">在 BscScan 上查看</a></p>","isPage":false,"text":"\n合约名称: ICake\n合约地址: 0x3C458828D1622F5f4d526eb0d24Da8C4Eb8F07b1\n在 BscScan 上查看","title":"iCAKE 计算合约","titles":["IFO 限额 (iCAKE)","合约信息",null]},"13":{"href":"/contracts/ifo#ifo","html":"</header>\n","isPage":true,"text":"\n","title":"IFO","titles":[]},"14":{"href":"/contracts/ifo#合约信息","html":"\n<p>每个 IFO 都有其独立的智能合约。你可以在<a href=\"https://pancakeswap.finance/ifo/history\">历史 IFO</a>页面的每个 IFO 销售下找到它们的地址，并链接到 BscScan。</p>\n<p>或者，你可以通过其部署者追踪每个 IFO。</p>\n","isPage":false,"text":"\n每个 IFO 都有其独立的智能合约。你可以在历史 IFO页面的每个 IFO 销售下找到它们的地址，并链接到 BscScan。\n或者，你可以通过其部署者追踪每个 IFO。\n","title":"合约信息","titles":["IFO"]},"15":{"href":"/contracts/ifo#ifo-部署者","html":"\n<p>最新: </p>\n<ul>\n<li><a href=\"https://bscscan.com/address/0x7c5a0427242214c1Cf58B2c3fA7dC673b924212e#events\">0x7c5a0427242214c1Cf58B2c3fA7dC673b924212e</a></li>\n</ul>\n<p>以前使用：</p>\n<ul>\n<li>0xa5465248b3A8986d86ACA968c0c076250263409F</li>\n<li>0x3b3e6b959b842a1634bb96b1d924e98bca38f4e7</li>\n<li>0x4684B399607f67e26a21e9F2A73eaE97e28D246d</li>\n<li>0xBdC44f83de2e66534e555dABeD640c9aF290cE54</li>\n<li>0xd4E7F319A22A746518e9b8b79854B30b0C7Bf5Df</li>\n</ul>","isPage":false,"text":"\n最新: \n\n0x7c5a0427242214c1Cf58B2c3fA7dC673b924212e\n\n以前使用：\n\n0xa5465248b3A8986d86ACA968c0c076250263409F\n0x3b3e6b959b842a1634bb96b1d924e98bca38f4e7\n0x4684B399607f67e26a21e9F2A73eaE97e28D246d\n0xBdC44f83de2e66534e555dABeD640c9aF290cE54\n0xd4E7F319A22A746518e9b8b79854B30b0C7Bf5Df\n","title":"IFO 部署者","titles":["IFO","合约信息",null]},"16":{"href":"/contracts/market-maker-pool#做市商池","html":"</header>\n","isPage":true,"text":"\n","title":"做市商池","titles":[]},"17":{"href":"/contracts/market-maker-pool#合约信息","html":"\n<strong>合约名称: MM Pool</strong>\n<strong>BSC</strong>\n<p><strong>合约地址:</strong> <a href=\"https://bscscan.com/address/0xfEACb05b373f1A08E68235bA7FC92636b92ced01#code\">0xfEACb05b373f1A08E68235bA7FC92636b92ced01</a></p>\n<p><a href=\"https://bscscan.com/address/0xfEACb05b373f1A08E68235bA7FC92636b92ced01\">在 BscScan 上查看</a></p>\n<strong>ETH</strong>\n<p><strong>合约地址:</strong> <a href=\"https://etherscan.io/address/0x9Ca2A439810524250E543BA8fB6E88578aF242BC#code\">0x9Ca2A439810524250E543BA8fB6E88578aF242BC</a></p>\n<p><a href=\"https://etherscan.io/address/0x9Ca2A439810524250E543BA8fB6E88578aF242BC\">在 Etherscan 上查看</a></p>\n","isPage":false,"text":"\n合约名称: MM Pool\nBSC\n合约地址: 0xfEACb05b373f1A08E68235bA7FC92636b92ced01\n在 BscScan 上查看\nETH\n合约地址: 0x9Ca2A439810524250E543BA8fB6E88578aF242BC\n在 Etherscan 上查看\n","title":"合约信息","titles":["做市商池"]},"18":{"href":"/contracts/market-maker-pool#交换示例","html":"\n","isPage":false,"text":"\n","title":"交换示例","titles":["做市商池","合约信息"]},"19":{"href":"/contracts/market-maker-pool#eip-712-签名","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">const domain </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  name</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;PCS MM Pool&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  version</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;1&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  chainId</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> // 1 或 56,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  verifyingContract</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> // 请参照上面的地址,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">};</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">const quoteType </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  Quote</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> [</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    { name</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;nonce&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">type</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;uint256&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    { name</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">type</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;address&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    { name</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;baseToken&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">type</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;address&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    { name</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;quoteToken&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">type</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;address&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    { name</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;baseTokenAmount&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">type</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;uint256&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    { name</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;quoteTokenAmount&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">type</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;uint256&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    { name</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;expiryTimestamp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">type</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;uint256&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  ],</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">};</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">const quoteValue </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    nonce,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    user,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    baseToken,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    quoteToken,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    baseTokenAmount,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    quoteTokenAmount,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    expiryTimestamp,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">};</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// EIP 712 签名</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">const signature </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> await mm.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">_signTypedData</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(domain, quoteType, quoteValue);</span></span></code></pre>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>nonce</td><td>uint256</td><td>用户 nonce，可以从合约中的 <code>getUserNonce</code> 调用</td></tr><tr><td>user</td><td>address</td><td>用户地址</td></tr><tr><td>baseToken</td><td>address</td><td>用户发送给做市商的代币地址</td></tr><tr><td>quoteToken</td><td>address</td><td>用户从做市商接收的代币地址</td></tr><tr><td>baseTokenAmount</td><td>uint256</td><td>交换中基础代币的数量</td></tr><tr><td>quoteTokenAmount</td><td>uint256</td><td>交换中报价代币的数量</td></tr><tr><td>expiryTimestamp</td><td>uint256</td><td>签名的到期时间（unix 时间戳）</td></tr></tbody></table>\n","isPage":false,"text":"\nconst domain = {\n  name: &quot;PCS MM Pool&quot;,\n  version: &quot;1&quot;,\n  chainId: // 1 或 56,\n  verifyingContract: // 请参照上面的地址,\n};\n \nconst quoteType = {\n  Quote: [\n    { name: &quot;nonce&quot;, type: &quot;uint256&quot; },\n    { name: &quot;user&quot;, type: &quot;address&quot; },\n    { name: &quot;baseToken&quot;, type: &quot;address&quot; },\n    { name: &quot;quoteToken&quot;, type: &quot;address&quot; },\n    { name: &quot;baseTokenAmount&quot;, type: &quot;uint256&quot; },\n    { name: &quot;quoteTokenAmount&quot;, type: &quot;uint256&quot; },\n    { name: &quot;expiryTimestamp&quot;, type: &quot;uint256&quot; },\n  ],\n};\n \nconst quoteValue = {\n    nonce,\n    user,\n    baseToken,\n    quoteToken,\n    baseTokenAmount,\n    quoteTokenAmount,\n    expiryTimestamp,\n};\n \n// EIP 712 签名\nconst signature = await mm._signTypedData(domain, quoteType, quoteValue);\n名称类型描述nonceuint256用户 nonce，可以从合约中的 getUserNonce 调用useraddress用户地址baseTokenaddress用户发送给做市商的代币地址quoteTokenaddress用户从做市商接收的代币地址baseTokenAmountuint256交换中基础代币的数量quoteTokenAmountuint256交换中报价代币的数量expiryTimestampuint256签名的到期时间（unix 时间戳）\n","title":"EIP 712 签名","titles":["做市商池","合约信息","交换示例"]},"20":{"href":"/contracts/market-maker-pool#swap","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Quote</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> nonce;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> user;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> baseToken;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> quoteToken;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> baseTokenAmount;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> quoteTokenAmount;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> expiryTimestamp;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> swap</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">        address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _mmSigner,</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        Quote</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> calldata</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _quote,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">        bytes</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> calldata</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _signature</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> payable</span></span></code></pre>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>_mmSigner</td><td>address</td><td>做市商地址</td></tr><tr><td>_quote</td><td>Quote</td><td>Quote 结构体</td></tr><tr><td>_signature</td><td>bytes</td><td>上述生成的签名</td></tr></tbody></table>","isPage":false,"text":"\nstruct Quote {\n    uint256 nonce;\n    address user;\n    address baseToken;\n    address quoteToken;\n    uint256 baseTokenAmount;\n    uint256 quoteTokenAmount;\n    uint256 expiryTimestamp;\n}\n \nfunction swap(\n        address _mmSigner,\n        Quote calldata _quote,\n        bytes calldata _signature\n    ) external payable\n名称类型描述_mmSigneraddress做市商地址_quoteQuoteQuote 结构体_signaturebytes上述生成的签名","title":"swap","titles":["做市商池","合约信息","交换示例"]},"21":{"href":"/contracts/nft-market#nft-市场","html":"</header>\n<ul>\n<li><a href=\"https://bscscan.com/address/0x17539cca21c7933df5c980172d22659b8c345c5a\">PancakeSwap: NFT 市场 v1</a></li>\n</ul>","isPage":true,"text":"\n\nPancakeSwap: NFT 市场 v1\n","title":"NFT 市场","titles":[]},"22":{"href":"/contracts/pottery#陶瓷","html":"</header>","isPage":true,"text":"","title":"陶瓷","titles":[]},"23":{"href":"/contracts/prediction-v2#预测","html":"</header>\n","isPage":true,"text":"\n","title":"预测","titles":[]},"24":{"href":"/contracts/prediction-v2#合约信息","html":"\n","isPage":false,"text":"\n","title":"合约信息","titles":["预测"]},"25":{"href":"/contracts/prediction-v2#bnb-预测","html":"\n<p><strong>合约名称:</strong> PancakePredictionV2<br/>\n<strong>合约地址:</strong> <a href=\"https://bscscan.com/address/0x18B2A687610328590Bc8F2e5fEdDe3b582A49cdA\">0x18B2A687610328590Bc8F2e5fEdDe3b582A49cdA</a></p>\n<p>查看 <a href=\"https://bscscan.com/address/0x18B2A687610328590Bc8F2e5fEdDe3b582A49cdA#code\">PancakeSwap BNB Prediction 合约在 BscScan 上</a>。</p>\n<strong>CAKE 预测</strong>\n<p><strong>合约名称:</strong> PancakePredictionV3<br/>\n<strong>合约地址:</strong> <a href=\"https://bscscan.com/address/0x0e3a8078edd2021dadcde733c6b4a86e51ee8f07\">0x0E3A8078EDD2021dadcdE733C6b4a86E51EE8f07</a></p>\n<p><a href=\"https://bscscan.com/address/0x0e3a8078edd2021dadcde733c6b4a86e51ee8f07\">查看 PancakeSwap CAKE Prediction 合约在 BscScan 上。</a></p>\n","isPage":false,"text":"\n合约名称: PancakePredictionV2\n合约地址: 0x18B2A687610328590Bc8F2e5fEdDe3b582A49cdA\n查看 PancakeSwap BNB Prediction 合约在 BscScan 上。\nCAKE 预测\n合约名称: PancakePredictionV3\n合约地址: 0x0E3A8078EDD2021dadcdE733C6b4a86E51EE8f07\n查看 PancakeSwap CAKE Prediction 合约在 BscScan 上。\n","title":"BNB 预测","titles":["预测","合约信息",null]},"26":{"href":"/contracts/prediction-v2#审计","html":"\n<p><a href=\"https://github.com/peckshield/publications/blob/master/audit_reports/PeckShield-Audit-Report-PancakeSwap-PredictionV2-v1.0.pdf\">Peckshield 的 Prediction V2 安全审计报告</a></p>","isPage":false,"text":"\nPeckshield 的 Prediction V2 安全审计报告","title":"审计","titles":["预测"]},"27":{"href":"/contracts/vecake-and-gauge-voting#vecake-和投票指标","html":"</header>\n","isPage":true,"text":"\n","title":"veCAKE 和投票指标","titles":[]},"28":{"href":"/contracts/vecake-and-gauge-voting#合约信息","html":"\n<p><strong>合约名称:</strong> veCAKE<br/>\n<strong>合约地址:</strong> 0x5692DB8177a81A6c6afc8084C2976C9933EC1bAB<br/>\n<a href=\"https://bscscan.com/address/0x5692DB8177a81A6c6afc8084C2976C9933EC1bAB\">在 BscScan 上查看</a></p>\n<p><strong>合约名称:</strong> GaugeVoting<br/>\n<strong>合约地址:</strong> 0xffdcDD4cF85Ba1b51D7aB498208C0EC7E1910e3b<br/>\n<a href=\"https://bscscan.com/token/0xffdcDD4cF85Ba1b51D7aB498208C0EC7E1910e3b\">在 BscScan 上查看</a></p>\n<aside data-callout=\"warning\"><p>由于某些必要的计算逻辑更新，部署了新的 <code>GaugeVotingCalc</code> 合约，所有投票指标的绝对和相对权重都应基于此合约的输出。不要参考 <code>GaugeVoting</code> 的返回值。</p><p><strong>合约名称:</strong> GaugeVotingCalc<br/>\n<strong>合约地址:</strong> 0x94f8cba8712b3e72c9bf8ba4d6619ac9046fe695<br/>\n<a href=\"https://bscscan.com/address/0x94f8cba8712b3e72c9bf8ba4d6619ac9046fe695#readContract\">在 BscScan 上查看</a></p><p><strong>合约名称:</strong> RevenueSharingPoolForCake<br/>\n<strong>合约地址:</strong> 0xCaF4e48a4Cb930060D0c3409F40Ae7b34d2AbE2D<br/>\n<strong>注:</strong> 用于领取每周收益分享奖励的合约<br/>\n<a href=\"https://bscscan.com/address/0xCaF4e48a4Cb930060D0c3409F40Ae7b34d2AbE2D\">在 BscScan 上查看</a></p><p><strong>合约名称:</strong> RevenueSharingPoolForCake<br/>\n<strong>合约地址:</strong> 0x9cac9745731d1Cf2B483f257745A512f0938DD01<br/>\n<strong>注:</strong> 用于领取每周 veCAKE 发放奖励的合约<br/>\n<a href=\"https://bscscan.com/address/0x9cac9745731d1Cf2B483f257745A512f0938DD01\">在 BscScan 上查看</a></p><p><strong>合约名称:</strong> RevenueSharingPoolGateway<br/>\n<strong>合约地址:</strong> 0x011f2a82846a4E9c62C2FC4Fd6fDbad19147D94A<br/>\n<strong>注:</strong> 用于多合约领取 &quot;RevenueSharingPool&quot; 奖励的合约<br/>\n<a href=\"https://bscscan.com/address/0x011f2a82846a4E9c62C2FC4Fd6fDbad19147D94A\">在 BscScan 上查看</a></p></aside>","isPage":false,"text":"\n合约名称: veCAKE\n合约地址: 0x5692DB8177a81A6c6afc8084C2976C9933EC1bAB\n在 BscScan 上查看\n合约名称: GaugeVoting\n合约地址: 0xffdcDD4cF85Ba1b51D7aB498208C0EC7E1910e3b\n在 BscScan 上查看\n由于某些必要的计算逻辑更新，部署了新的 GaugeVotingCalc 合约，所有投票指标的绝对和相对权重都应基于此合约的输出。不要参考 GaugeVoting 的返回值。合约名称: GaugeVotingCalc\n合约地址: 0x94f8cba8712b3e72c9bf8ba4d6619ac9046fe695\n在 BscScan 上查看合约名称: RevenueSharingPoolForCake\n合约地址: 0xCaF4e48a4Cb930060D0c3409F40Ae7b34d2AbE2D\n注: 用于领取每周收益分享奖励的合约\n在 BscScan 上查看合约名称: RevenueSharingPoolForCake\n合约地址: 0x9cac9745731d1Cf2B483f257745A512f0938DD01\n注: 用于领取每周 veCAKE 发放奖励的合约\n在 BscScan 上查看合约名称: RevenueSharingPoolGateway\n合约地址: 0x011f2a82846a4E9c62C2FC4Fd6fDbad19147D94A\n注: 用于多合约领取 &quot;RevenueSharingPool&quot; 奖励的合约\n在 BscScan 上查看","title":"合约信息","titles":["veCAKE 和投票指标"]},"29":{"href":"/apis/subgraph#子图","html":"</header>\n<p>请参考 Github 仓库获取最新版本</p>\n<p>代码: <a href=\"https://github.com/pancakeswap/pancake-subgraph\">https://github.com/pancakeswap/pancake-subgraph</a></p>\n<ol>\n<li>\n<p><strong><a href=\"https://nodereal.io/meganode/api-marketplace/pancakeswap-graphql\">Exchange V2</a></strong>: 跟踪所有 PancakeSwap V2 交易所数据，包括价格、交易量、流动性等...</p>\n<ul>\n<li>BSC <a href=\"https://nodereal.io/meganode/api-marketplace/pancakeswap-graphql\">https://nodereal.io/meganode/api-marketplace/pancakeswap-graphql</a></li>\n<li>ETH <a href=\"https://thegraph.com/explorer/subgraphs/9opY17WnEPD4REcC43yHycQthSeUMQE26wyoeMjZTLEx?view=Query&amp;chain=arbitrum-one\">https://thegraph.com/explorer/subgraphs/9opY17WnEPD4REcC43yHycQthSeUMQE26wyoeMjZTLEx?view=Query&amp;chain=arbitrum-one</a></li>\n<li>ARB <a href=\"https://thegraph.com/explorer/subgraphs/EsL7geTRcA3LaLLM9EcMFzYbUgnvf8RixoEEGErrodB3?view=Query&amp;chain=arbitrum-one\">https://thegraph.com/explorer/subgraphs/EsL7geTRcA3LaLLM9EcMFzYbUgnvf8RixoEEGErrodB3?view=Query&amp;chain=arbitrum-one</a></li>\n<li>ARB GRO <a href=\"https://api.thegraph.com/subgraphs/name/chef-jojo/exchange-v2-arb-goerli\">https://api.thegraph.com/subgraphs/name/chef-jojo/exchange-v2-arb-goerli</a></li>\n<li>Polygon zkEVM <a href=\"https://thegraph.com/explorer/subgraphs/37WmH5kBu6QQytRpMwLJMGPRbXvHgpuZsWqswW4Finc2?view=Query&amp;chain=arbitrum-one\">https://thegraph.com/explorer/subgraphs/37WmH5kBu6QQytRpMwLJMGPRbXvHgpuZsWqswW4Finc2?view=Query&amp;chain=arbitrum-one</a></li>\n<li>zkSync <a href=\"https://thegraph.com/explorer/subgraphs/6dU6WwEz22YacyzbTbSa3CECCmaD8G7oQ8aw6MYd5VKU?view=Query&amp;chain=arbitrum-one\">https://thegraph.com/explorer/subgraphs/6dU6WwEz22YacyzbTbSa3CECCmaD8G7oQ8aw6MYd5VKU?view=Query&amp;chain=arbitrum-one</a></li>\n<li>Linea <a href=\"https://thegraph.com/explorer/subgraphs/Eti2Z5zVEdARnuUzjCbv4qcimTLysAizsqH3s6cBfPjB?view=Query&amp;chain=arbitrum-one\">https://thegraph.com/explorer/subgraphs/Eti2Z5zVEdARnuUzjCbv4qcimTLysAizsqH3s6cBfPjB?view=Query&amp;chain=arbitrum-one</a></li>\n<li>Base <a href=\"https://thegraph.com/explorer/subgraphs/2NjL7L4CmQaGJSacM43ofmH6ARf6gJoBeBaJtz9eWAQ9?view=Query&amp;chain=arbitrum-one\">https://thegraph.com/explorer/subgraphs/2NjL7L4CmQaGJSacM43ofmH6ARf6gJoBeBaJtz9eWAQ9?view=Query&amp;chain=arbitrum-one</a></li>\n<li>opBNB <a href=\"https://opbnb-mainnet-graph.nodereal.io/subgraphs/name/pancakeswap/exchange-v2\">https://opbnb-mainnet-graph.nodereal.io/subgraphs/name/pancakeswap/exchange-v2</a></li>\n</ul>\n</li>\n<li>\n<p><strong><a href=\"https://thegraph.com/explorer/subgraphs/8wcykciFiBhVwnHbMeKoN5QNFGCJwBvFy5bWTUgDEgBq?view=Query&amp;chain=arbitrum-one\">Lottery</a></strong>: 跟踪所有 PancakeSwap 彩票，涵盖各轮次、抽奖和彩票。</p>\n</li>\n<li>\n<p><strong><a href=\"https://thegraph.com/explorer/subgraphs/3wRSNMaGhwzdrq76sjcWuiceTEdLAsNesxtMx2A8XMdV?view=Query&amp;chain=arbitrum-one\">Pottery</a></strong>: 跟踪所有 PancakeSwap 陶瓷奖，涵盖各轮次、抽奖和彩票。</p>\n</li>\n<li>\n<p><strong><a href=\"https://thegraph.com/explorer/subgraphs/2LHYMstVV7vuxR8zz3Lx8i4pD1JgYS5mPoecBTzMKFmW?view=Query&amp;chain=arbitrum-one\">NFT Market (v1)</a></strong>: 跟踪所有 PancakeSwap NFT 市场的 ERC-721 交易。</p>\n</li>\n<li>\n<p><strong><a href=\"https://thegraph.com/explorer/subgraphs/5ZQGSZ74JUeSQdCjqALFEhYjWsiFJAsqJpuLhWvJ9fkP?view=Query&amp;chain=arbitrum-one\">Prediction (v1)</a></strong>: 跟踪所有 PancakeSwap 预测 (v1) 的市场、轮次和投注。</p>\n</li>\n<li>\n<p><strong><a href=\"https://thegraph.com/explorer/subgraphs/4kRuZVKCR9dsG2ePXhLSiKw5oaw3YMJo4nAwxZbUaqVY?view=Query&amp;chain=arbitrum-one\">Prediction (v2)</a></strong>: 跟踪所有 PancakeSwap 预测 (v2) 的市场、轮次和投注。</p>\n</li>\n<li>\n<p><strong><a href=\"https://thegraph.com/explorer/subgraphs/4KLfz3gEPwXXP67jraV2ew8SwV9Ke359BHW3phxny35X?view=Query&amp;chain=arbitrum-one\">Prediction (v2 CAKE)</a></strong>: 跟踪所有 PancakeSwap 预测 (v2) CAKE 的市场、轮次和投注。</p>\n</li>\n<li>\n<p><strong><a href=\"https://thegraph.com/explorer/subgraphs/ER6tpJy2kHQNuGFjN8KEzUi8JGvvEwFZwQq7f7upvkF5?view=Query&amp;chain=arbitrum-one\">Profile</a></strong>: 跟踪所有 PancakeSwap 帐户，包括团队、用户、积分和活动。</p>\n</li>\n<li>\n<p><strong><a href=\"https://thegraph.com/explorer/subgraphs/Gr629imGYJckFywitY1bndE4LhVaLF7pFJPEtHMw6EBr?view=Query&amp;chain=arbitrum-one\">SmartChef</a></strong>: 跟踪所有 PancakeSwap SmartChef（即 Syrup Pools）的代币和奖励。</p>\n</li>\n<li>\n<p><strong><a href=\"https://thegraph.com/explorer/subgraphs/8zwHPqpf5RVVevNzgR5Hfo2ZcZP6drVNBqMZT15SWXjU?view=Query&amp;chain=arbitrum-one\">Trading Competition (v1)</a></strong>: 跟踪复活节大赛（2021 年 4 月 7 日—14 日）的所有指标。</p>\n</li>\n<li>\n<p><strong><a href=\"https://thegraph.com/explorer/subgraphs/9AJmNCwQr75PkAxrne2gLBfYFwhhizeLj3Njf2zWM8dc?view=Query&amp;chain=arbitrum-one\">Trading Competition (v2)</a></strong>: 跟踪交易竞赛 v2 的所有指标。</p>\n</li>\n<li>\n<p><strong><a href=\"https://thegraph.com/explorer/subgraphs/FyuHMgf4nUG8z7EXgkuPxfGg1zXyBDuTpKYHw9NoRanD?view=Query&amp;chain=arbitrum-one\">Trading Competition (v3)</a></strong>: 跟踪交易竞赛 v3 的所有指标。</p>\n</li>\n<li>\n<p><strong><a href=\"https://thegraph.com/explorer/subgraphs/62TXi7ERoFE7F75XEuvu77bxuVFYWrdQGP1J3CrTGDvG?view=Query&amp;chain=arbitrum-one\">Trading Competition (v4)</a></strong>: 跟踪交易竞赛 v4 的所有指标。</p>\n</li>\n<li>\n<p><strong><a href=\"https://thegraph.com/explorer/subgraphs/5PoeuRQVgTMVEMPghv5EmsqaTFzPnNZeekTiQQNxvUNC?view=Query&amp;chain=arbitrum-one\">MasterChef (v2)</a></strong>: 跟踪 MasterChefV2 的数据。</p>\n</li>\n<li>\n<p><strong>MasterChef (v3)</strong>: 跟踪 MasterChefV3 的数据。</p>\n<ul>\n<li>BSC <a href=\"https://thegraph.com/explorer/subgraphs/QProcZexB8KYHueG55aoLhBmwnLXExxopq7CUnFkjMv?view=Query&amp;chain=arbitrum-one\">https://thegraph.com/explorer/subgraphs/QProcZexB8KYHueG55aoLhBmwnLXExxopq7CUnFkjMv?view=Query&amp;chain=arbitrum-one</a></li>\n<li>ETH <a href=\"https://thegraph.com/explorer/subgraphs/9psTWtnVVQwSHUVRtCuR8985UfzotdtdZwVt8K9kJGeg?view=Query&amp;chain=arbitrum-one\">https://thegraph.com/explorer/subgraphs/9psTWtnVVQwSHUVRtCuR8985UfzotdtdZwVt8K9kJGeg?view=Query&amp;chain=arbitrum-one</a></li>\n<li>Polygon zkEVM <a href=\"https://thegraph.com/explorer/subgraphs/GY319RL3CwRYq4LvTcGnE2ftVtWfM7D7FLzsy21GFYUb?view=Query&amp;chain=arbitrum-one\">https://thegraph.com/explorer/subgraphs/GY319RL3CwRYq4LvTcGnE2ftVtWfM7D7FLzsy21GFYUb?view=Query&amp;chain=arbitrum-one</a></li>\n<li>ARB <a href=\"https://thegraph.com/explorer/subgraphs/2fq9U1dYX1bxuu6D3HuZcfyZSBxPHd8yWduJnVoxNjSP?view=Query&amp;chain=arbitrum-one\">https://thegraph.com/explorer/subgraphs/2fq9U1dYX1bxuu6D3HuZcfyZSBxPHd8yWduJnVoxNjSP?view=Query&amp;chain=arbitrum-one</a></li>\n<li>zkSync <a href=\"https://thegraph.com/explorer/subgraphs/BnTM866GHTEyhxzrSmqnCdDAEixc34R87SnZaxH4BChy?view=Query&amp;chain=arbitrum-one\">https://thegraph.com/explorer/subgraphs/BnTM866GHTEyhxzrSmqnCdDAEixc34R87SnZaxH4BChy?view=Query&amp;chain=arbitrum-one</a></li>\n<li>Base <a href=\"https://thegraph.com/explorer/subgraphs/3oYoAoCJMV2ZyZSTpg6cUS1gKTzcc2cjmCVfpNyWZVmr?view=Query&amp;chain=arbitrum-one\">https://thegraph.com/explorer/subgraphs/3oYoAoCJMV2ZyZSTpg6cUS1gKTzcc2cjmCVfpNyWZVmr?view=Query&amp;chain=arbitrum-one</a></li>\n</ul>\n</li>\n<li>\n<p><strong>Exchange (v3)</strong>: 跟踪所有 PancakeSwap V3 交易所数据，包括价格、交易量、流动性</p>\n<ul>\n<li>BSC <a href=\"https://thegraph.com/explorer/subgraphs/Hv1GncLY5docZoGtXjo4kwbTvxm3MAhVZqBZE4sUT9eZ?view=Query&amp;chain=arbitrum-one\">https://thegraph.com/explorer/subgraphs/Hv1GncLY5docZoGtXjo4kwbTvxm3MAhVZqBZE4sUT9eZ?view=Query&amp;chain=arbitrum-one</a></li>\n<li>ETH <a href=\"https://thegraph.com/explorer/subgraphs/CJYGNhb7RvnhfBDjqpRnD3oxgyhibzc7fkAMa38YV3oS?view=Query&amp;chain=arbitrum-one\">https://thegraph.com/explorer/subgraphs/CJYGNhb7RvnhfBDjqpRnD3oxgyhibzc7fkAMa38YV3oS?view=Query&amp;chain=arbitrum-one</a></li>\n<li>ARB <a href=\"https://thegraph.com/explorer/subgraphs/251MHFNN1rwjErXD2efWMpNS73SANZN8Ua192zw6iXve?view=Query&amp;chain=arbitrum-one\">https://thegraph.com/explorer/subgraphs/251MHFNN1rwjErXD2efWMpNS73SANZN8Ua192zw6iXve?view=Query&amp;chain=arbitrum-one</a></li>\n<li>Polygon zkEVM <a href=\"https://thegraph.com/explorer/subgraphs/7HroSeAFxfJtYqpbgcfAnNSgkzzcZXZi6c75qLPheKzQ?view=Query&amp;chain=arbitrum-one\">https://thegraph.com/explorer/subgraphs/7HroSeAFxfJtYqpbgcfAnNSgkzzcZXZi6c75qLPheKzQ?view=Query&amp;chain=arbitrum-one</a></li>\n<li>zkSync <a href=\"https://thegraph.com/explorer/subgraphs/3dKr3tYxTuwiRLkU9vPj3MvZeUmeuGgWURbFC72ZBpYY?view=Query&amp;chain=arbitrum-one\">https://thegraph.com/explorer/subgraphs/3dKr3tYxTuwiRLkU9vPj3MvZeUmeuGgWURbFC72ZBpYY?view=Query&amp;chain=arbitrum-one</a></li>\n<li>Linea <a href=\"https://thegraph.com/explorer/subgraphs/6gCTVX98K3A9Hf9zjvgEKwjz7rtD4C1V173RYEdbeMFX?view=Query&amp;chain=arbitrum-one\">https://thegraph.com/explorer/subgraphs/6gCTVX98K3A9Hf9zjvgEKwjz7rtD4C1V173RYEdbeMFX?view=Query&amp;chain=arbitrum-one</a></li>\n<li>Base <a href=\"https://thegraph.com/explorer/subgraphs/BHWNsedAHtmTCzXxCCDfhPmm6iN9rxUhoRHdHKyujic3?view=Query&amp;chain=arbitrum-one\">https://thegraph.com/explorer/subgraphs/BHWNsedAHtmTCzXxCCDfhPmm6iN9rxUhoRHdHKyujic3?view=Query&amp;chain=arbitrum-one</a></li>\n<li>opBNB <a href=\"https://opbnb-mainnet-graph.nodereal.io/subgraphs/name/pancakeswap/exchange-v3\">https://opbnb-mainnet-graph.nodereal.io/subgraphs/name/pancakeswap/exchange-v3</a></li>\n</ul>\n</li>\n<li>\n<p><strong>Exchange (StableSwap)</strong>: 跟踪所有 PancakeSwap Stableswap 交易所数据，包括价格、交易量、流动性</p>\n<ul>\n<li>BSC <a href=\"https://thegraph.com/explorer/subgraphs/C5EuiZwWkCge7edveeMcvDmdr7jjc1zG4vgn8uucLdfz?view=Query&amp;chain=arbitrum-one\">https://thegraph.com/explorer/subgraphs/C5EuiZwWkCge7edveeMcvDmdr7jjc1zG4vgn8uucLdfz?view=Query&amp;chain=arbitrum-one</a></li>\n<li>ARB <a href=\"https://thegraph.com/explorer/subgraphs/y7G5NUSq5ngsLH2jBGQajjxuLgW1bcqWiBqKmBk3MWM?view=Query&amp;chain=arbitrum-one\">https://thegraph.com/explorer/subgraphs/y7G5NUSq5ngsLH2jBGQajjxuLgW1bcqWiBqKmBk3MWM?view=Query&amp;chain=arbitrum-one</a></li>\n</ul>\n</li>\n</ol>","isPage":true,"text":"\n请参考 Github 仓库获取最新版本\n代码: https://github.com/pancakeswap/pancake-subgraph\n\n\nExchange V2: 跟踪所有 PancakeSwap V2 交易所数据，包括价格、交易量、流动性等...\n\nBSC https://nodereal.io/meganode/api-marketplace/pancakeswap-graphql\nETH https://thegraph.com/explorer/subgraphs/9opY17WnEPD4REcC43yHycQthSeUMQE26wyoeMjZTLEx?view=Query&amp;chain=arbitrum-one\nARB https://thegraph.com/explorer/subgraphs/EsL7geTRcA3LaLLM9EcMFzYbUgnvf8RixoEEGErrodB3?view=Query&amp;chain=arbitrum-one\nARB GRO https://api.thegraph.com/subgraphs/name/chef-jojo/exchange-v2-arb-goerli\nPolygon zkEVM https://thegraph.com/explorer/subgraphs/37WmH5kBu6QQytRpMwLJMGPRbXvHgpuZsWqswW4Finc2?view=Query&amp;chain=arbitrum-one\nzkSync https://thegraph.com/explorer/subgraphs/6dU6WwEz22YacyzbTbSa3CECCmaD8G7oQ8aw6MYd5VKU?view=Query&amp;chain=arbitrum-one\nLinea https://thegraph.com/explorer/subgraphs/Eti2Z5zVEdARnuUzjCbv4qcimTLysAizsqH3s6cBfPjB?view=Query&amp;chain=arbitrum-one\nBase https://thegraph.com/explorer/subgraphs/2NjL7L4CmQaGJSacM43ofmH6ARf6gJoBeBaJtz9eWAQ9?view=Query&amp;chain=arbitrum-one\nopBNB https://opbnb-mainnet-graph.nodereal.io/subgraphs/name/pancakeswap/exchange-v2\n\n\n\nLottery: 跟踪所有 PancakeSwap 彩票，涵盖各轮次、抽奖和彩票。\n\n\nPottery: 跟踪所有 PancakeSwap 陶瓷奖，涵盖各轮次、抽奖和彩票。\n\n\nNFT Market (v1): 跟踪所有 PancakeSwap NFT 市场的 ERC-721 交易。\n\n\nPrediction (v1): 跟踪所有 PancakeSwap 预测 (v1) 的市场、轮次和投注。\n\n\nPrediction (v2): 跟踪所有 PancakeSwap 预测 (v2) 的市场、轮次和投注。\n\n\nPrediction (v2 CAKE): 跟踪所有 PancakeSwap 预测 (v2) CAKE 的市场、轮次和投注。\n\n\nProfile: 跟踪所有 PancakeSwap 帐户，包括团队、用户、积分和活动。\n\n\nSmartChef: 跟踪所有 PancakeSwap SmartChef（即 Syrup Pools）的代币和奖励。\n\n\nTrading Competition (v1): 跟踪复活节大赛（2021 年 4 月 7 日—14 日）的所有指标。\n\n\nTrading Competition (v2): 跟踪交易竞赛 v2 的所有指标。\n\n\nTrading Competition (v3): 跟踪交易竞赛 v3 的所有指标。\n\n\nTrading Competition (v4): 跟踪交易竞赛 v4 的所有指标。\n\n\nMasterChef (v2): 跟踪 MasterChefV2 的数据。\n\n\nMasterChef (v3): 跟踪 MasterChefV3 的数据。\n\nBSC https://thegraph.com/explorer/subgraphs/QProcZexB8KYHueG55aoLhBmwnLXExxopq7CUnFkjMv?view=Query&amp;chain=arbitrum-one\nETH https://thegraph.com/explorer/subgraphs/9psTWtnVVQwSHUVRtCuR8985UfzotdtdZwVt8K9kJGeg?view=Query&amp;chain=arbitrum-one\nPolygon zkEVM https://thegraph.com/explorer/subgraphs/GY319RL3CwRYq4LvTcGnE2ftVtWfM7D7FLzsy21GFYUb?view=Query&amp;chain=arbitrum-one\nARB https://thegraph.com/explorer/subgraphs/2fq9U1dYX1bxuu6D3HuZcfyZSBxPHd8yWduJnVoxNjSP?view=Query&amp;chain=arbitrum-one\nzkSync https://thegraph.com/explorer/subgraphs/BnTM866GHTEyhxzrSmqnCdDAEixc34R87SnZaxH4BChy?view=Query&amp;chain=arbitrum-one\nBase https://thegraph.com/explorer/subgraphs/3oYoAoCJMV2ZyZSTpg6cUS1gKTzcc2cjmCVfpNyWZVmr?view=Query&amp;chain=arbitrum-one\n\n\n\nExchange (v3): 跟踪所有 PancakeSwap V3 交易所数据，包括价格、交易量、流动性\n\nBSC https://thegraph.com/explorer/subgraphs/Hv1GncLY5docZoGtXjo4kwbTvxm3MAhVZqBZE4sUT9eZ?view=Query&amp;chain=arbitrum-one\nETH https://thegraph.com/explorer/subgraphs/CJYGNhb7RvnhfBDjqpRnD3oxgyhibzc7fkAMa38YV3oS?view=Query&amp;chain=arbitrum-one\nARB https://thegraph.com/explorer/subgraphs/251MHFNN1rwjErXD2efWMpNS73SANZN8Ua192zw6iXve?view=Query&amp;chain=arbitrum-one\nPolygon zkEVM https://thegraph.com/explorer/subgraphs/7HroSeAFxfJtYqpbgcfAnNSgkzzcZXZi6c75qLPheKzQ?view=Query&amp;chain=arbitrum-one\nzkSync https://thegraph.com/explorer/subgraphs/3dKr3tYxTuwiRLkU9vPj3MvZeUmeuGgWURbFC72ZBpYY?view=Query&amp;chain=arbitrum-one\nLinea https://thegraph.com/explorer/subgraphs/6gCTVX98K3A9Hf9zjvgEKwjz7rtD4C1V173RYEdbeMFX?view=Query&amp;chain=arbitrum-one\nBase https://thegraph.com/explorer/subgraphs/BHWNsedAHtmTCzXxCCDfhPmm6iN9rxUhoRHdHKyujic3?view=Query&amp;chain=arbitrum-one\nopBNB https://opbnb-mainnet-graph.nodereal.io/subgraphs/name/pancakeswap/exchange-v3\n\n\n\nExchange (StableSwap): 跟踪所有 PancakeSwap Stableswap 交易所数据，包括价格、交易量、流动性\n\nBSC https://thegraph.com/explorer/subgraphs/C5EuiZwWkCge7edveeMcvDmdr7jjc1zG4vgn8uucLdfz?view=Query&amp;chain=arbitrum-one\nARB https://thegraph.com/explorer/subgraphs/y7G5NUSq5ngsLH2jBGQajjxuLgW1bcqWiBqKmBk3MWM?view=Query&amp;chain=arbitrum-one\n\n\n","title":"子图","titles":[]},"30":{"href":"/contracts-aptos/ifo#ifo","html":"</header>\n","isPage":true,"text":"\n","title":"IFO","titles":[]},"31":{"href":"/contracts-aptos/ifo#审计","html":"\n<a class=\"vocs_Anchor vocs_Link vocs_Link_accent_underlined\" href=\"/Pancakeswap_aptos_ifo_audit.pdf\" target=\"_blank\"><p>OtterSec 的 PancakeSwap Aptos IFO 安全审计</p></a>","isPage":false,"text":"\nOtterSec 的 PancakeSwap Aptos IFO 安全审计","title":"审计","titles":["IFO"]},"32":{"href":"/contracts-aptos/index#智能合约aptos","html":"</header>\n","isPage":true,"text":"\n","title":"智能合约（Aptos）","titles":[]},"33":{"href":"/contracts-aptos/index#功能","html":"\n<p>PancakesSwap 已经上链到 Aptos！我们会不断部署更多功能。</p>\n<p><a href=\"v2/overview.mdx\">pancakeswap-v2</a></p>\n<p><a href=\"masterchef\">masterchef.md</a></p>\n<p><a href=\"syrup-pools\">syrup-pools.md</a></p>\n","isPage":false,"text":"\nPancakesSwap 已经上链到 Aptos！我们会不断部署更多功能。\npancakeswap-v2\nmasterchef.md\nsyrup-pools.md\n","title":"功能","titles":["智能合约（Aptos）"]},"34":{"href":"/contracts-aptos/index#github","html":"\n<p><a href=\"https://github.com/pancakeswap/pancake-contracts-move\">https://github.com/pancakeswap/pancake-contracts-move</a></p>\n","isPage":false,"text":"\nhttps://github.com/pancakeswap/pancake-contracts-move\n","title":"GitHub","titles":["智能合约（Aptos）"]},"35":{"href":"/contracts-aptos/index#审计","html":"\n<a class=\"vocs_Anchor vocs_Link vocs_Link_accent_underlined\" href=\"/PancakeSwap_OFT_Audit_OtterSec.pdf\" target=\"_blank\"><p>OtterSec 的 PancakeSwap CAKE OFT 审计报告</p></a>","isPage":false,"text":"\nOtterSec 的 PancakeSwap CAKE OFT 审计报告","title":"审计","titles":["智能合约（Aptos）"]},"36":{"href":"/contracts-aptos/masterchef#masterchef","html":"</header>\n","isPage":true,"text":"\n","title":"MasterChef","titles":[]},"37":{"href":"/contracts-aptos/masterchef#合约信息","html":"\n<p><strong>合约名称</strong>: pancake::masterchef<br/>\n<strong>合约地址</strong>:</p>\n<p>7968a225eba6c99f5f1070aeec1b405757dee939eabcfda43ba91588bf5fccf3::masterchef</p>\n<p><strong>管理员多签地址</strong>: eef8788f3eaa34b936d0bc5897fc40fa3782b1e663bf04edf2cd22fcd18329ff</p>\n<p><a href=\"https://explorer.aptoslabs.com/account/0x7968a225eba6c99f5f1070aeec1b405757dee939eabcfda43ba91588bf5fccf3/modules\">Aptos Explorer</a></p>\n","isPage":false,"text":"\n合约名称: pancake::masterchef\n合约地址:\n7968a225eba6c99f5f1070aeec1b405757dee939eabcfda43ba91588bf5fccf3::masterchef\n管理员多签地址: eef8788f3eaa34b936d0bc5897fc40fa3782b1e663bf04edf2cd22fcd18329ff\nAptos Explorer\n","title":"合约信息","titles":["MasterChef"]},"38":{"href":"/contracts-aptos/masterchef#资源","html":"\n","isPage":false,"text":"\n","title":"资源","titles":["MasterChef"]},"39":{"href":"/contracts-aptos/masterchef#masterchef-1","html":"\n<p>MasterChef 的元数据。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> MasterChef</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> has key {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    signer_cap</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> account</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SignerCapability</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// 资源账号的签名能力。</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    admin</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> address,                       </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// 模块的管理员地址。</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    upkeep_admin</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> address,                </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// 执行维护调用的账号。</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    lp_to_pid</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> TableWithLength</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;string</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">String</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// LP 代币类型信息及相应的池 ID。</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    lps</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> vector&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">string</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">String</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;,          </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// 所有已添加 LP 代币类型信息数组。</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    pool_info</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> vector&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PoolInfo</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;,          </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// 池信息列表。</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    total_regular_alloc_point</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,       </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// 所有常规农场分配点总和。</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    total_special_alloc_point</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,       </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// 所有特殊农场分配点总和。</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    cake_per_second</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,                 </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// 所有农场池每秒的 CAKE 奖励。</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    cake_rate_to_regular</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,            </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// 常规农场可以获得的 CAKE 奖励百分比。</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    cake_rate_to_special</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,            </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// 特殊农场可以获得的 CAKE 奖励百分比。</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    last_upkeep_timestamp</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,           </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// 上次维护执行的时间戳。</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    end_timestamp</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#6A737D;--shiki-dark:#768390\">                    // 农场可以获得 CAKE 奖励的最后时间，每次维护操作都会延长此时间戳。</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>signer_cap</td><td><code>account::SingerCapability</code></td><td>资源账号的签名能力。</td></tr><tr><td>admin</td><td><code>address</code></td><td>模块的管理员地址。</td></tr><tr><td>upkeep_admin</td><td><code>address</code></td><td>执行维护调用的账号。</td></tr><tr><td>lp_to_pid</td><td><code>table_with_length::TableWithLength</code></td><td>LP 代币类型信息及相应的池 ID。</td></tr><tr><td>lps</td><td><code>vector</code></td><td>所有已添加 LP 代币类型信息数组。</td></tr><tr><td>pool_info</td><td><code>vector</code></td><td>池信息结构体的列表。</td></tr><tr><td>total_regular_alloc_point</td><td><code>u64</code></td><td>所有常规农场分配点总和。</td></tr><tr><td>total_special_alloc_point</td><td><code>u64</code></td><td>所有特殊农场分配点总和。</td></tr><tr><td>cake_per_second</td><td><code>64</code></td><td>所有农场池每秒的 CAKE 奖励。</td></tr><tr><td>cake_rate_to_regular</td><td><code>u64</code></td><td>常规农场可以获得的 CAKE 奖励百分比。</td></tr><tr><td>cake_rate_to_special</td><td><code>64</code></td><td>特殊农场可以获得的 CAKE 奖励百分比。</td></tr><tr><td>last_upkeep_timestamp</td><td><code>64</code></td><td>上次维护执行的时间戳。</td></tr><tr><td>end_timestamp</td><td><code>64</code></td><td>农场可以获得 CAKE 奖励的最后时间，每次维护操作都会延长此时间戳。</td></tr></tbody></table>\n","isPage":false,"text":"\nMasterChef 的元数据。\nstruct MasterChef has key {\n    signer_cap: account::SignerCapability, // 资源账号的签名能力。\n    admin: address,                       // 模块的管理员地址。\n    upkeep_admin: address,                // 执行维护调用的账号。\n    lp_to_pid: TableWithLength&lt;string::String, u64&gt;, // LP 代币类型信息及相应的池 ID。\n    lps: vector&lt;string::String&gt;,          // 所有已添加 LP 代币类型信息数组。\n    pool_info: vector&lt;PoolInfo&gt;,          // 池信息列表。\n    total_regular_alloc_point: u64,       // 所有常规农场分配点总和。\n    total_special_alloc_point: u64,       // 所有特殊农场分配点总和。\n    cake_per_second: u64,                 // 所有农场池每秒的 CAKE 奖励。\n    cake_rate_to_regular: u64,            // 常规农场可以获得的 CAKE 奖励百分比。\n    cake_rate_to_special: u64,            // 特殊农场可以获得的 CAKE 奖励百分比。\n    last_upkeep_timestamp: u64,           // 上次维护执行的时间戳。\n    end_timestamp: u64                    // 农场可以获得 CAKE 奖励的最后时间，每次维护操作都会延长此时间戳。\n}\n名称类型描述signer_capaccount::SingerCapability资源账号的签名能力。adminaddress模块的管理员地址。upkeep_adminaddress执行维护调用的账号。lp_to_pidtable_with_length::TableWithLengthLP 代币类型信息及相应的池 ID。lpsvector所有已添加 LP 代币类型信息数组。pool_infovector池信息结构体的列表。total_regular_alloc_pointu64所有常规农场分配点总和。total_special_alloc_pointu64所有特殊农场分配点总和。cake_per_second64所有农场池每秒的 CAKE 奖励。cake_rate_to_regularu64常规农场可以获得的 CAKE 奖励百分比。cake_rate_to_special64特殊农场可以获得的 CAKE 奖励百分比。last_upkeep_timestamp64上次维护执行的时间戳。end_timestamp64农场可以获得 CAKE 奖励的最后时间，每次维护操作都会延长此时间戳。\n","title":"MasterChef","titles":["MasterChef","资源"]},"40":{"href":"/contracts-aptos/masterchef#pooluserinfo","html":"\n<p>所有池信息。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> PoolUserInfo</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> has key {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    pid_to_user_info</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> TableWithLength</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">UserInfo</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// 包含 user_info 的表，对应池 id。</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    pids</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> vector&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;,                                </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// 池 id 的列表。</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>pid_to_user_info</td><td><code>table_with_length::TableWithLength</code></td><td>包含 user_info 的表，对应池 id。</td></tr><tr><td>pids</td><td><code>vector</code></td><td>池 id 的列表。</td></tr></tbody></table>\n","isPage":false,"text":"\n所有池信息。\nstruct PoolUserInfo has key {\n    pid_to_user_info: TableWithLength&lt;u64, UserInfo&gt;, // 包含 user_info 的表，对应池 id。\n    pids: vector&lt;u64&gt;,                                // 池 id 的列表。\n}\n名称类型描述pid_to_user_infotable_with_length::TableWithLength包含 user_info 的表，对应池 id。pidsvector池 id 的列表。\n","title":"PoolUserInfo","titles":["MasterChef","资源"]},"41":{"href":"/contracts-aptos/masterchef#userinfo","html":"\n<p>每个池中的用户信息。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> UserInfo</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> has store {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    amount</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u128</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,       </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// 在池中抵押的代币总数量。</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    reward_debt</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u128</span><span style=\"color:#6A737D;--shiki-dark:#768390\">   // 分发给用户的奖励总数量。</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>amount</td><td><code>u128</code></td><td>在池中抵押的代币总数量。</td></tr><tr><td>reward_debt</td><td><code>u128</code></td><td>分发给用户的奖励总数量。</td></tr></tbody></table>\n","isPage":false,"text":"\n每个池中的用户信息。\nstruct UserInfo has store {\n    amount: u128,       // 在池中抵押的代币总数量。\n    reward_debt: u128   // 分发给用户的奖励总数量。\n}\n名称类型描述amountu128在池中抵押的代币总数量。reward_debtu128分发给用户的奖励总数量。\n","title":"UserInfo","titles":["MasterChef","资源"]},"42":{"href":"/contracts-aptos/masterchef#poolinfo","html":"\n<p>每个池的信息</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> PoolInfo</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> has store {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    total_amount</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u128</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,           </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// 抵押代币的总数量。</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    acc_cake_per_share</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u128</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,     </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// 池中的累计 CAKE 每股。</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    last_reward_timestamp</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,   </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// 最新的奖励分发时间。</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    alloc_point</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,             </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// 池分配点。</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    is_regular</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> bool</span><span style=\"color:#6A737D;--shiki-dark:#768390\">              // True 表示此池是常规农场，否则为特殊农场。</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>total_amount</td><td><code>u128</code></td><td>抵押代币的总数量。</td></tr><tr><td>acc_cake_per_share</td><td><code>u128</code></td><td>池中的累计 CAKE 每股。</td></tr><tr><td>last_reward_timestamp</td><td><code>u64</code></td><td>最新的奖励分发时间。</td></tr><tr><td>alloc_point</td><td><code>u64</code></td><td>池分配点。</td></tr><tr><td>is_regular</td><td><code>bool</code></td><td>True 表示此池是常规农场，否则为特殊农场。</td></tr></tbody></table>\n","isPage":false,"text":"\n每个池的信息\nstruct PoolInfo has store {\n    total_amount: u128,           // 抵押代币的总数量。\n    acc_cake_per_share: u128,     // 池中的累计 CAKE 每股。\n    last_reward_timestamp: u64,   // 最新的奖励分发时间。\n    alloc_point: u64,             // 池分配点。\n    is_regular: bool              // True 表示此池是常规农场，否则为特殊农场。\n}\n名称类型描述total_amountu128抵押代币的总数量。acc_cake_per_shareu128池中的累计 CAKE 每股。last_reward_timestampu64最新的奖励分发时间。alloc_pointu64池分配点。is_regularboolTrue 表示此池是常规农场，否则为特殊农场。\n","title":"PoolInfo","titles":["MasterChef","资源"]},"43":{"href":"/contracts-aptos/masterchef#入口函数","html":"\n","isPage":false,"text":"\n","title":"入口函数","titles":["MasterChef"]},"44":{"href":"/contracts-aptos/masterchef#deposit","html":"\n<p>将抵押代币存入池中。如果有奖励代币，也会分配给用户。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">public entry fun deposit&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CoinType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sender</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">signer, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// 调用函数时的发送者签名器。</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    amount</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#6A737D;--shiki-dark:#768390\">      // 将要存入的代币数量。</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>sender</td><td><code>signer</code></td><td>调用函数时的发送者签名器。</td></tr><tr><td>amount</td><td><code>u64</code></td><td>将要存入的代币数量。</td></tr></tbody></table>\n","isPage":false,"text":"\n将抵押代币存入池中。如果有奖励代币，也会分配给用户。\npublic entry fun deposit&lt;CoinType&gt;(\n    sender: &amp;signer, // 调用函数时的发送者签名器。\n    amount: u64      // 将要存入的代币数量。\n)\n名称类型描述sendersigner调用函数时的发送者签名器。amountu64将要存入的代币数量。\n","title":"Deposit","titles":["MasterChef","入口函数"]},"45":{"href":"/contracts-aptos/masterchef#withdraw","html":"\n<p>从池中提取抵押代币。如果有奖励代币，也会分配给用户。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">public entry fun withdraw&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CoinType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sender</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">signer, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// 调用函数时的发送者签名器。</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    amount</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#6A737D;--shiki-dark:#768390\">      // 将要提取的代币数量。</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>sender</td><td><code>signer</code></td><td>调用函数时的发送者签名器。</td></tr><tr><td>amount</td><td><code>u64</code></td><td>将要提取的代币数量。</td></tr></tbody></table>\n","isPage":false,"text":"\n从池中提取抵押代币。如果有奖励代币，也会分配给用户。\npublic entry fun withdraw&lt;CoinType&gt;(\n    sender: &amp;signer, // 调用函数时的发送者签名器。\n    amount: u64      // 将要提取的代币数量。\n)\n名称类型描述sendersigner调用函数时的发送者签名器。amountu64将要提取的代币数量。\n","title":"Withdraw","titles":["MasterChef","入口函数"]},"46":{"href":"/contracts-aptos/masterchef#emergency-withdraw","html":"\n<p>无论是否有奖励，从池中提取抵押代币。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">public entry fun emergency_withdraw&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CoinType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;(sender</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">signer) </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// 调用函数时的发送者签名器。</span></span></code></pre>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>sender</td><td><code>signer</code></td><td>调用函数时的发送者签名器。</td></tr></tbody></table>\n","isPage":false,"text":"\n无论是否有奖励，从池中提取抵押代币。\npublic entry fun emergency_withdraw&lt;CoinType&gt;(sender: &amp;signer) // 调用函数时的发送者签名器。\n名称类型描述sendersigner调用函数时的发送者签名器。\n","title":"Emergency Withdraw","titles":["MasterChef","入口函数"]},"47":{"href":"/contracts-aptos/masterchef#mass-update-pools","html":"\n<p>更新所有池的信息。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">public entry fun </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">mass_update_pools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span></code></pre>\n","isPage":false,"text":"\n更新所有池的信息。\npublic entry fun mass_update_pools()\n","title":"Mass Update Pools","titles":["MasterChef","入口函数"]},"48":{"href":"/contracts-aptos/masterchef#update-pool","html":"\n<p>更新特定池的信息。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">public entry fun </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">update_pool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(pid</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// 池的 id。</span></span></code></pre>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>pid</td><td><code>u64</code></td><td>池的 id。</td></tr></tbody></table>\n","isPage":false,"text":"\n更新特定池的信息。\npublic entry fun update_pool(pid: u64) // 池的 id。\n名称类型描述pidu64池的 id。\n","title":"Update Pool","titles":["MasterChef","入口函数"]},"49":{"href":"/contracts-aptos/masterchef#公共函数","html":"\n","isPage":false,"text":"\n","title":"公共函数","titles":["MasterChef"]},"50":{"href":"/contracts-aptos/masterchef#pending-cake","html":"\n<p>用户的待领取 CAKE 奖励。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">public fun </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">pending_cake</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    pid</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,       </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// 池的 id。</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    user</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> address   </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// 存款者的地址。</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span></span></code></pre>\n","isPage":false,"text":"\n用户的待领取 CAKE 奖励。\npublic fun pending_cake(\n    pid: u64,       // 池的 id。\n    user: address   // 存款者的地址。\n): u64\n","title":"Pending Cake","titles":["MasterChef","公共函数"]},"51":{"href":"/contracts-aptos/masterchef#输入值","html":"\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>pid</td><td><code>u64</code></td><td>池的 id。</td></tr><tr><td>user</td><td><code>address</code></td><td>存款者的地址。</td></tr></tbody></table>\n","isPage":false,"text":"\n名称类型描述pidu64池的 id。useraddress存款者的地址。\n","title":"输入值","titles":["MasterChef","公共函数","Pending Cake"]},"52":{"href":"/contracts-aptos/masterchef#返回值","html":"\n<table><thead><tr><th>类型</th><th>描述</th></tr></thead><tbody><tr><td><code>u64</code></td><td>待领取的 CAKE 奖励总数量。</td></tr></tbody></table>\n","isPage":false,"text":"\n类型描述u64待领取的 CAKE 奖励总数量。\n","title":"返回值","titles":["MasterChef","公共函数","Pending Cake"]},"53":{"href":"/contracts-aptos/masterchef#pool-length","html":"\n<p>池的总数。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">public fun </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">pool_length</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">u64</span></span></code></pre>\n","isPage":false,"text":"\n池的总数。\npublic fun pool_length():u64\n","title":"Pool Length","titles":["MasterChef","公共函数"]},"54":{"href":"/contracts-aptos/masterchef#返回值-1","html":"\n<table><thead><tr><th>类型</th><th>描述</th></tr></thead><tbody><tr><td><code>u64</code></td><td>池的总数量。</td></tr></tbody></table>\n","isPage":false,"text":"\n类型描述u64池的总数量。\n","title":"返回值","titles":["MasterChef","公共函数","Pool Length"]},"55":{"href":"/contracts-aptos/masterchef#审计","html":"\n<a class=\"vocs_Anchor vocs_Link vocs_Link_accent_underlined\" href=\"/PancakeSwap_aptos_masterchef_audit.pdf\" target=\"_blank\"><p>OtterSec 的 PancakeSwap Aptos MasterChef 安全审计</p></a>","isPage":false,"text":"\nOtterSec 的 PancakeSwap Aptos MasterChef 安全审计","title":"审计","titles":["MasterChef"]},"56":{"href":"/contracts-aptos/syrup-pools#syrup-pools","html":"</header>\n","isPage":true,"text":"\n","title":"Syrup Pools","titles":[]},"57":{"href":"/contracts-aptos/syrup-pools#合约信息","html":"\n<p><strong>合约名称</strong>: pancake::smart_chef<br/>\n<strong>合约地址:</strong> </p>\n<p>fd1d8a523f1be89277ac0787ae3469312667e3d0b3f75a5f01bfc95530a2dc91::smart_chef</p>\n<p><strong>管理员多重签名地址</strong>: 0xd97268666bad31a7299cc80c1bca26face32718630c5498544fe8e9bcc593d74</p>\n<p><a href=\"https://explorer.aptoslabs.com/account/0xfd1d8a523f1be89277ac0787ae3469312667e3d0b3f75a5f01bfc95530a2dc91/modules\">Aptos Explorer</a></p>\n","isPage":false,"text":"\n合约名称: pancake::smart_chef\n合约地址: \nfd1d8a523f1be89277ac0787ae3469312667e3d0b3f75a5f01bfc95530a2dc91::smart_chef\n管理员多重签名地址: 0xd97268666bad31a7299cc80c1bca26face32718630c5498544fe8e9bcc593d74\nAptos Explorer\n","title":"合约信息","titles":["Syrup Pools"]},"58":{"href":"/contracts-aptos/syrup-pools#类型","html":"\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>StakeToken</td><td><code>type address</code></td><td>池中质押代币的币种类型地址。</td></tr><tr><td>RewardToken</td><td><code>type address</code></td><td>池中奖励代币的币种类型地址。</td></tr><tr><td>UID</td><td><code>type address</code></td><td>池的 UID，可以在<a href=\"utils\">这里</a>找到。</td></tr></tbody></table>\n","isPage":false,"text":"\n名称类型描述StakeTokentype address池中质押代币的币种类型地址。RewardTokentype address池中奖励代币的币种类型地址。UIDtype address池的 UID，可以在这里找到。\n","title":"类型","titles":["Syrup Pools"]},"59":{"href":"/contracts-aptos/syrup-pools#资源","html":"\n","isPage":false,"text":"\n","title":"资源","titles":["Syrup Pools"]},"60":{"href":"/contracts-aptos/syrup-pools#smartchefmetadata","html":"\n<p>模块的元数据。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> SmartChefMetadata</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> has key {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    signer_cap</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> account</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SignerCapability</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    admin</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> address,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    uid</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    create_pool_event</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> EventHandle</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CreatePoolEvent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>signer_cap</td><td><code>account::SignerCapablity</code></td><td>资源账户的签名能力。</td></tr><tr><td>admin</td><td><code>address</code></td><td>模块管理员的地址。</td></tr><tr><td>uid</td><td><code>u64</code></td><td>最新池的最新 id。</td></tr><tr><td>create_pool_event</td><td><code>EventHandle</code></td><td>新池创建时触发的事件。</td></tr></tbody></table>\n","isPage":false,"text":"\n模块的元数据。\nstruct SmartChefMetadata has key {\n    signer_cap: account::SignerCapability,\n    admin: address,\n    uid: u64,\n    create_pool_event: EventHandle&lt;CreatePoolEvent&gt;\n}\n名称类型描述signer_capaccount::SignerCapablity资源账户的签名能力。adminaddress模块管理员的地址。uidu64最新池的最新 id。create_pool_eventEventHandle新池创建时触发的事件。\n","title":"SmartChefMetadata","titles":["Syrup Pools","资源"]},"61":{"href":"/contracts-aptos/syrup-pools#poolinfo","html":"\n<p>每个池的信息。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> PoolInfo</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;phantom </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">StakeToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, phantom </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RewardToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, phantom </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">UID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt; has key {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    total_staked_token</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> coin</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Coin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">StakeToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    total_reward_token</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> coin</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Coin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RewardToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    reward_per_second</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    start_timestamp</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    end_timestamp</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    last_reward_timestamp</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    seconds_for_user_limit</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    pool_limit_per_user</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    acc_token_per_share</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u128</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    precision_factor</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u128</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    emergency_withdraw_reward_event</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> EventHandle</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">EmergencyWithdrawRewardEvent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">StakeToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RewardToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">UID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;&gt;,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    stop_reward_event</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> EventHandle</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">StopRewardEvent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">StakeToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RewardToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">UID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;&gt;,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    new_pool_limit_event</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> EventHandle</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">NewPoolLimitEvent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">StakeToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RewardToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">UID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;&gt;,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    new_reward_per_second_event</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> EventHandle</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">NewRewardPerSecondEvent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">StakeToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RewardToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">UID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;&gt;,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    new_start_and_end_timestamp_event</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> EventHandle</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">NewStartAndEndTimestampEvent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">StakeToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RewardToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">UID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;&gt;,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>total_staked_token</td><td><code>coin::Coin</code></td><td>池中质押代币的总量。</td></tr><tr><td>total_reward_token</td><td><code>coin::Coin</code></td><td>池中奖励代币的总量。</td></tr><tr><td>reward_per_second</td><td><code>u64</code></td><td>每秒钟发放的奖励。</td></tr><tr><td>start_timestamp</td><td><code>u64</code></td><td>开始时间（秒）。</td></tr><tr><td>end_timestamp</td><td><code>u64</code></td><td>结束时间（秒）。</td></tr><tr><td>last_reward_timestamp</td><td><code>u64</code></td><td>最近一次发放奖励的时间。</td></tr><tr><td>seconds_for_user_limit</td><td><code>u64</code></td><td>开始时间后应用用户限制的时间。</td></tr><tr><td>pool_limit_per_user</td><td><code>u64</code></td><td>用户限制秒数内允许质押的代币数量。</td></tr><tr><td>acc_token_per_share</td><td><code>u128</code></td><td>每份的累积代币。</td></tr><tr><td>precision_factor</td><td><code>u128</code></td><td>用于计算的精度因子。</td></tr><tr><td>emergency_withdraw_reward_event</td><td><code>EventHandle</code></td><td>提取奖励时触发的事件。</td></tr><tr><td>stop_reward_event</td><td><code>EventHandle</code></td><td>管理员停止奖励时触发的事件。</td></tr><tr><td>new_pool_limit_event</td><td><code>EventHandle</code></td><td>管理员更新新池限制时触发的事件。</td></tr><tr><td>new_reward_per_second_event</td><td><code>EventHandle</code></td><td>管理员更新池每秒奖励时触发的事件。</td></tr><tr><td>new_start_and_end_timestamp_event</td><td><code>EventHandle</code></td><td>管理员更新池开始时间或结束时间时触发的事件。</td></tr></tbody></table>\n","isPage":false,"text":"\n每个池的信息。\nstruct PoolInfo&lt;phantom StakeToken, phantom RewardToken, phantom UID&gt; has key {\n    total_staked_token: coin::Coin&lt;StakeToken&gt;,\n    total_reward_token: coin::Coin&lt;RewardToken&gt;,\n    reward_per_second: u64,\n    start_timestamp: u64,\n    end_timestamp: u64,\n    last_reward_timestamp: u64,\n    seconds_for_user_limit: u64,\n    pool_limit_per_user: u64,\n    acc_token_per_share: u128,\n    precision_factor: u128,\n    emergency_withdraw_reward_event: EventHandle&lt;EmergencyWithdrawRewardEvent&lt;StakeToken, RewardToken, UID&gt;&gt;,\n    stop_reward_event: EventHandle&lt;StopRewardEvent&lt;StakeToken, RewardToken, UID&gt;&gt;,\n    new_pool_limit_event: EventHandle&lt;NewPoolLimitEvent&lt;StakeToken, RewardToken, UID&gt;&gt;,\n    new_reward_per_second_event: EventHandle&lt;NewRewardPerSecondEvent&lt;StakeToken, RewardToken, UID&gt;&gt;,\n    new_start_and_end_timestamp_event: EventHandle&lt;NewStartAndEndTimestampEvent&lt;StakeToken, RewardToken, UID&gt;&gt;,\n}\n名称类型描述total_staked_tokencoin::Coin池中质押代币的总量。total_reward_tokencoin::Coin池中奖励代币的总量。reward_per_secondu64每秒钟发放的奖励。start_timestampu64开始时间（秒）。end_timestampu64结束时间（秒）。last_reward_timestampu64最近一次发放奖励的时间。seconds_for_user_limitu64开始时间后应用用户限制的时间。pool_limit_per_useru64用户限制秒数内允许质押的代币数量。acc_token_per_shareu128每份的累积代币。precision_factoru128用于计算的精度因子。emergency_withdraw_reward_eventEventHandle提取奖励时触发的事件。stop_reward_eventEventHandle管理员停止奖励时触发的事件。new_pool_limit_eventEventHandle管理员更新新池限制时触发的事件。new_reward_per_second_eventEventHandle管理员更新池每秒奖励时触发的事件。new_start_and_end_timestamp_eventEventHandle管理员更新池开始时间或结束时间时触发的事件。\n","title":"PoolInfo","titles":["Syrup Pools","资源"]},"62":{"href":"/contracts-aptos/syrup-pools#入口函数","html":"\n","isPage":false,"text":"\n","title":"入口函数","titles":["Syrup Pools"]},"63":{"href":"/contracts-aptos/syrup-pools#deposit","html":"\n<p>将质押代币存入池中。如果有任何奖励代币，将转移给用户。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">public entry fun deposit&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">StakeToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RewardToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">UID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    account</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">signer,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    amount</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>account</td><td><code>signer</code></td><td>调用函数时发送者的签名者。</td></tr><tr><td>amount</td><td><code>u64</code></td><td>将要存入的质押代币数量。</td></tr></tbody></table>\n","isPage":false,"text":"\n将质押代币存入池中。如果有任何奖励代币，将转移给用户。\npublic entry fun deposit&lt;StakeToken, RewardToken, UID&gt;(\n    account: &amp;signer,\n    amount: u64\n)\n名称类型描述accountsigner调用函数时发送者的签名者。amountu64将要存入的质押代币数量。\n","title":"Deposit","titles":["Syrup Pools","入口函数"]},"64":{"href":"/contracts-aptos/syrup-pools#withdraw","html":"\n<p>从池中提取质押代币。如果有任何奖励代币，将转移给用户。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>public entry fun withdraw&lt;StakeToken, RewardToken, UID&gt;(</span></span>\n<span class=\"line\"><span>    account: &amp;signer,</span></span>\n<span class=\"line\"><span>    amount: u64,</span></span>\n<span class=\"line\"><span>)</span></span></code></pre>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>account</td><td><code>signer</code></td><td>调用函数时发送者的签名者。</td></tr><tr><td>amount</td><td><code>u64</code></td><td>将要提取的质押代币数量。</td></tr></tbody></table>\n","isPage":false,"text":"\n从池中提取质押代币。如果有任何奖励代币，将转移给用户。\npublic entry fun withdraw&lt;StakeToken, RewardToken, UID&gt;(\n    account: &amp;signer,\n    amount: u64,\n)\n名称类型描述accountsigner调用函数时发送者的签名者。amountu64将要提取的质押代币数量。\n","title":"Withdraw","titles":["Syrup Pools","入口函数"]},"65":{"href":"/contracts-aptos/syrup-pools#emergency-withdraw","html":"\n<p>无论任何奖励情况，从池中提取质押代币。 </p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">public entry fun emergency_withdraw&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">StakeToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RewardToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">UID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;(account</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">signer)</span></span></code></pre>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>account</td><td><code>signer</code></td><td>调用函数时发送者的签名者。</td></tr></tbody></table>\n","isPage":false,"text":"\n无论任何奖励情况，从池中提取质押代币。 \npublic entry fun emergency_withdraw&lt;StakeToken, RewardToken, UID&gt;(account: &amp;signer)\n名称类型描述accountsigner调用函数时发送者的签名者。\n","title":"Emergency Withdraw","titles":["Syrup Pools","入口函数"]},"66":{"href":"/contracts-aptos/syrup-pools#公共函数","html":"\n","isPage":false,"text":"\n","title":"公共函数","titles":["Syrup Pools"]},"67":{"href":"/contracts-aptos/syrup-pools#获取池信息","html":"\n<p>获取池的详细信息。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">public fun get_pool_info&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">StakeToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RewardToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">UID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\n获取池的详细信息。\npublic fun get_pool_info&lt;StakeToken, RewardToken, UID&gt;(): (u64, u64, u64, u64, u64, u64, u64)\n","title":"获取池信息","titles":["Syrup Pools","公共函数"]},"68":{"href":"/contracts-aptos/syrup-pools#返回值","html":"\n<table><thead><tr><th>位置</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>0</td><td><code>u64</code></td><td>池中质押代币的总量。</td></tr><tr><td>1</td><td><code>u64</code></td><td>池中奖励代币的总量。</td></tr><tr><td>2</td><td><code>u64</code></td><td>每秒钟发放的奖励。</td></tr><tr><td>3</td><td><code>u64</code></td><td>开始时间（秒）。</td></tr><tr><td>4</td><td><code>u64</code></td><td>结束时间（秒）。</td></tr><tr><td>5</td><td><code>u64</code></td><td>开始时间后应用用户限制的时间。</td></tr><tr><td>6</td><td><code>u64</code></td><td>用户限制秒数内允许质押的代币数量。</td></tr></tbody></table>\n","isPage":false,"text":"\n位置类型描述0u64池中质押代币的总量。1u64池中奖励代币的总量。2u64每秒钟发放的奖励。3u64开始时间（秒）。4u64结束时间（秒）。5u64开始时间后应用用户限制的时间。6u64用户限制秒数内允许质押的代币数量。\n","title":"返回值","titles":["Syrup Pools","公共函数","获取池信息"]},"69":{"href":"/contracts-aptos/syrup-pools#获取用户质押数量","html":"\n<p>获取用户在池中的质押量。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">public fun get_user_stake_amount&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">StakeToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RewardToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">UID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;(account</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> address)</span></span></code></pre>\n","isPage":false,"text":"\n获取用户在池中的质押量。\npublic fun get_user_stake_amount&lt;StakeToken, RewardToken, UID&gt;(account: address)\n","title":"获取用户质押数量","titles":["Syrup Pools","公共函数"]},"70":{"href":"/contracts-aptos/syrup-pools#输入值","html":"\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>account</td><td><code>address</code></td><td>质押者地址。</td></tr></tbody></table>\n","isPage":false,"text":"\n名称类型描述accountaddress质押者地址。\n","title":"输入值","titles":["Syrup Pools","公共函数","获取用户质押数量"]},"71":{"href":"/contracts-aptos/syrup-pools#返回值-1","html":"\n<table><thead><tr><th>类型</th><th>描述</th></tr></thead><tbody><tr><td><code>u64</code></td><td>用户在池中质押的代币总量。</td></tr></tbody></table>\n","isPage":false,"text":"\n类型描述u64用户在池中质押的代币总量。\n","title":"返回值","titles":["Syrup Pools","公共函数","获取用户质押数量"]},"72":{"href":"/contracts-aptos/syrup-pools#获取待领取奖励","html":"\n<p>获取质押者在池中的待领取奖励。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">public fun get_pending_reward&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">StakeToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RewardToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">UID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;(account</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> address)</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span></span></code></pre>\n","isPage":false,"text":"\n获取质押者在池中的待领取奖励。\npublic fun get_pending_reward&lt;StakeToken, RewardToken, UID&gt;(account: address): u64\n","title":"获取待领取奖励","titles":["Syrup Pools","公共函数"]},"73":{"href":"/contracts-aptos/syrup-pools#输入值-1","html":"\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>account</td><td><code>address</code></td><td>质押者地址。</td></tr></tbody></table>\n","isPage":false,"text":"\n名称类型描述accountaddress质押者地址。\n","title":"输入值","titles":["Syrup Pools","公共函数","获取待领取奖励"]},"74":{"href":"/contracts-aptos/syrup-pools#返回值-2","html":"\n<table><thead><tr><th>类型</th><th>描述</th></tr></thead><tbody><tr><td><code>u64</code></td><td>质押者在池中有资格领取的奖励代币数量。</td></tr></tbody></table>\n","isPage":false,"text":"\n类型描述u64质押者在池中有资格领取的奖励代币数量。\n","title":"返回值","titles":["Syrup Pools","公共函数","获取待领取奖励"]},"75":{"href":"/contracts-aptos/syrup-pools#审计","html":"\n<p><a href=\"https://github.com/Zellic/publications/blob/master/PancakeSwap%20Aptos%20-%20Zellic%20Audit%20Report.pdf\">Zellic 对 PancakeSwap Aptos Syrup Pool 的安全审计</a></p>","isPage":false,"text":"\nZellic 对 PancakeSwap Aptos Syrup Pool 的安全审计","title":"审计","titles":["Syrup Pools"]},"76":{"href":"/contracts-aptos/utils#utils","html":"</header>\n","isPage":true,"text":"\n","title":"Utils","titles":[]},"77":{"href":"/contracts-aptos/utils#合约信息","html":"\n<p><strong>合约名称</strong>: <br/>\npancake_phantom_types::uints<br/>\n<strong>合约地址:</strong> 0x9936836587ca33240d3d3f91844651b16cb07802faf5e34514ed6f78580deb0a::uints</p>\n<p><a href=\"https://explorer.aptoslabs.com/account/0x9936836587ca33240d3d3f91844651b16cb07802faf5e34514ed6f78580deb0a/modules\">Aptos Explorer</a></p>\n","isPage":false,"text":"\n合约名称: \npancake_phantom_types::uints\n合约地址: 0x9936836587ca33240d3d3f91844651b16cb07802faf5e34514ed6f78580deb0a::uints\nAptos Explorer\n","title":"合约信息","titles":["Utils"]},"78":{"href":"/contracts-aptos/utils#函数","html":"\n","isPage":false,"text":"\n","title":"函数","titles":["Utils"]},"79":{"href":"/contracts-aptos/utils#类型","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> U0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {}   </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// U0 结构体</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> U1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {}   </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// U1 结构体</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> U2</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {}   </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// U2 结构体</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">...</span></span></code></pre>","isPage":false,"text":"\nstruct U0 {}   // U0 结构体\n \nstruct U1 {}   // U1 结构体\n \nstruct U2 {}   // U2 结构体\n...","title":"类型","titles":["Utils","函数"]},"80":{"href":"/contracts/exchange/index#pancakeswap-交易所","html":"</header>\n<p><a href=\"v2/\">v2-contracts</a></p>\n<p><a href=\"stableswap/\">stableswap</a></p>","isPage":true,"text":"\nv2-contracts\nstableswap","title":"PancakeSwap 交易所","titles":[]},"81":{"href":"/contracts/cake/cross-chain-cake-bridging#跨链-cake-桥接","html":"</header>\n","isPage":true,"text":"\n","title":"跨链 CAKE 桥接","titles":[]},"82":{"href":"/contracts/cake/cross-chain-cake-bridging#合约信息","html":"\n","isPage":false,"text":"\n","title":"合约信息","titles":["跨链 CAKE 桥接"]},"83":{"href":"/contracts/cake/cross-chain-cake-bridging#cake-桥接合约","html":"\n<p><strong>合约名称：</strong> CakeProxyOFT<br/>\n<strong>合约地址：</strong> <a href=\"https://bscscan.com/address/0xb274202daBA6AE180c665B4fbE59857b7c3a8091#code\">0xb274202daBA6AE180c665B4fbE59857b7c3a8091</a></p>\n<p><a href=\"https://bscscan.com/address/0xb274202daBA6AE180c665B4fbE59857b7c3a8091#code\">在 BscScan 上查看</a></p>\n","isPage":false,"text":"\n合约名称： CakeProxyOFT\n合约地址： 0xb274202daBA6AE180c665B4fbE59857b7c3a8091\n在 BscScan 上查看\n","title":"CAKE 桥接合约","titles":["跨链 CAKE 桥接","合约信息",null]},"84":{"href":"/contracts/cake/cross-chain-cake-bridging#cake-桥接到-aptos-的示例","html":"\n<strong>sendFrom</strong>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> sendFrom</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _from, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint16</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _dstChainId, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">bytes32</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _toAddress, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _amount, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _minAmount, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">LzCallParams</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> calldata</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _callParams) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> payable</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span></code></pre>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>_from</td><td>address</td><td>发起地址。这个地址应为调用 CakeProxyOFT 的地址</td></tr><tr><td>_dstChainId</td><td>uint16</td><td>Aptos 主网的链 ID 为 <code>108</code></td></tr><tr><td>_toAddress</td><td>bytes32</td><td>Aptos 上的目标地址</td></tr><tr><td>_amount</td><td>uint256</td><td>CAKE 的数量，以 WEI 为单位。请注意，小于 1e-8 的数量会被忽略</td></tr><tr><td>_minAmount</td><td>uint256</td><td>最低接收金额。我们不收取任何 CAKE 费用。但是，在四舍五入到 8 个小数点后，不应大于 <code>_amount</code></td></tr><tr><td>_callParams</td><td>tuple</td><td>用于定义桥接行为的一组调用参数。继续阅读以了解更多详细信息。</td></tr></tbody></table>\n<aside data-callout=\"info\"><p><code>sendFrom</code> 是一个可以支付的函数。您需要支付大约 0.005-0.01 的 BNB 作为目标空投的燃料费用。此值会根据 BNB/APT 的价格而变化。</p><p>请注意，如果您定义了额外的空投燃料到您的目标地址，您需要增加这个数值，否则交易将因 <code>not enough natives for fees</code> 而失败。</p></aside>\n<strong>如何构建 `_callParams`</strong>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    refundAddress,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    zroPaymentAddress,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    adapterParams</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>refundAddress</td><td>address</td><td>过剩的费用 (BNB) 将返回到该地址</td></tr><tr><td>zroPaymentAddress</td><td>address</td><td><code>0x0000000000000000000000000000000000000000</code></td></tr><tr><td>adapterParams</td><td>bytes</td><td>一组用于定义目标燃料空投的参数。继续阅读以了解更多详细信息。</td></tr></tbody></table>\n<strong>如何构建 `adapterParams`</strong>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    version,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    dstGasLimit,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    dstNativeGasTransferAmount,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    dstNativeGasTransferAddress</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td><code>version</code></td><td>uint16</td><td>默认为 2</td></tr><tr><td>dstGasLimit</td><td>uint</td><td>默认为 <code>200000</code></td></tr><tr><td>dstNativeGasTransferAmount</td><td>uint</td><td>目标原生燃料代币的空投数量。如果您不需要桥接将 BNB 转换并空投给您 APT，则使用 <code>0</code></td></tr><tr><td>dstNativeGasTransferAddress</td><td>bytes</td><td>目标链上接收原生燃料代币的地址。</td></tr></tbody></table>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> adapterParams</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">solidityPack</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    [</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;uint16&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;uint&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;uint&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;bytes&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">],</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    [</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">2</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">200000</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0xYourAptosAddress&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nsendFrom\nfunction sendFrom(address _from, uint16 _dstChainId, bytes32 _toAddress, uint _amount, uint _minAmount, LzCallParams calldata _callParams) external payable;\n名称类型描述_fromaddress发起地址。这个地址应为调用 CakeProxyOFT 的地址_dstChainIduint16Aptos 主网的链 ID 为 108_toAddressbytes32Aptos 上的目标地址_amountuint256CAKE 的数量，以 WEI 为单位。请注意，小于 1e-8 的数量会被忽略_minAmountuint256最低接收金额。我们不收取任何 CAKE 费用。但是，在四舍五入到 8 个小数点后，不应大于 _amount_callParamstuple用于定义桥接行为的一组调用参数。继续阅读以了解更多详细信息。\nsendFrom 是一个可以支付的函数。您需要支付大约 0.005-0.01 的 BNB 作为目标空投的燃料费用。此值会根据 BNB/APT 的价格而变化。请注意，如果您定义了额外的空投燃料到您的目标地址，您需要增加这个数值，否则交易将因 not enough natives for fees 而失败。\n如何构建 `_callParams`\n{\n    refundAddress,\n    zroPaymentAddress,\n    adapterParams\n}\n名称类型描述refundAddressaddress过剩的费用 (BNB) 将返回到该地址zroPaymentAddressaddress0x0000000000000000000000000000000000000000adapterParamsbytes一组用于定义目标燃料空投的参数。继续阅读以了解更多详细信息。\n如何构建 `adapterParams`\n{\n    version,\n    dstGasLimit,\n    dstNativeGasTransferAmount,\n    dstNativeGasTransferAddress\n}\n名称类型描述versionuint16默认为 2dstGasLimituint默认为 200000dstNativeGasTransferAmountuint目标原生燃料代币的空投数量。如果您不需要桥接将 BNB 转换并空投给您 APT，则使用 0dstNativeGasTransferAddressbytes目标链上接收原生燃料代币的地址。\nconst adapterParams = utils.solidityPack(\n    [&quot;uint16&quot;, &quot;uint&quot;, &quot;uint&quot;, &quot;bytes&quot;],\n    [2, 200000, 0, &quot;0xYourAptosAddress&quot;]\n)\n","title":"CAKE 桥接到 Aptos 的示例","titles":["跨链 CAKE 桥接"]},"85":{"href":"/contracts/cake/cross-chain-cake-bridging#实用工具","html":"\n<ul>\n<li><a href=\"https://bridge.pancakeswap.finance/aptos\">GUI - CAKE - Aptos PancakeBridge</a></li>\n<li><a href=\"https://layerzeroscan.com/\">LayerZeroScan - 跟踪您的跨链交易</a></li>\n<li><a href=\"https://layerzero.gitbook.io/docs/\">LayerZero Docs</a></li>\n</ul>\n","isPage":false,"text":"\n\nGUI - CAKE - Aptos PancakeBridge\nLayerZeroScan - 跟踪您的跨链交易\nLayerZero Docs\n\n","title":"实用工具","titles":["跨链 CAKE 桥接"]},"86":{"href":"/contracts/cake/cross-chain-cake-bridging#审计","html":"\n<p><a href=\"/contracts-aptos#audit\">OtterSec 对 PancakeSwap CAKE OFT (桥接) 的安全审计</a></p>","isPage":false,"text":"\nOtterSec 对 PancakeSwap CAKE OFT (桥接) 的安全审计","title":"审计","titles":["跨链 CAKE 桥接"]},"87":{"href":"/contracts/cake/index#cake-地址","html":"</header>\n<p>PancakeSwap 使用 LayerZero v1 OFT 标准在链间桥接。通过 UI 在 <a href=\"https://bridge.pancakeswap.finance/\">https://bridge.pancakeswap.finance/</a> 桥接，或查看更多 <a href=\"/contracts/cake/cross-chain-cake-bridging\">这里</a></p>\n<strong>主网</strong>\n<table><thead><tr><th>链</th><th>地址</th></tr></thead><tbody><tr><td>BSC</td><td>0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82</td></tr><tr><td>ETH</td><td>0x152649eA73beAb28c5b49B26eb48f7EAD6d4c898</td></tr><tr><td>Arbitrum</td><td>0x1b896893dfc86bb67Cf57767298b9073D2c1bA2c</td></tr><tr><td>Base</td><td>0x3055913c90Fcc1A6CE9a358911721eEb942013A1</td></tr><tr><td>Linea</td><td>0x0D1E753a25eBda689453309112904807625bEFBe</td></tr><tr><td>opBNB</td><td>0x2779106e4F4A8A28d77A24c18283651a2AE22D1C</td></tr><tr><td>zkEVM</td><td>0x0D1E753a25eBda689453309112904807625bEFBe</td></tr><tr><td>zkSync</td><td>0x3A287a06c66f9E95a56327185cA2BDF5f031cEcD</td></tr></tbody></table>\n<strong>测试网</strong>\n<table><thead><tr><th>链</th><th>地址</th></tr></thead><tbody><tr><td>BSC 测试网</td><td>0x8d008B313C1d6C7fE2982F62d32Da7507cF43551</td></tr><tr><td>ETH Goerli</td><td>0xc2C3eAbE0368a2Ea97f485b03D1098cdD7d0c081</td></tr><tr><td>Base Goerli</td><td>0x052a99849Ef2e13a5CB28275862991671D4b6fF5</td></tr><tr><td>Linea Goerli</td><td>0x2B3C5df29F73dbF028BA82C33e0A5A6e5800F75e</td></tr><tr><td>opBNB</td><td>0xa11B290B038C35711eB309268a2460754f730921</td></tr><tr><td>zkEVM</td><td>0x2B3C5df29F73dbF028BA82C33e0A5A6e5800F75e</td></tr></tbody></table>","isPage":true,"text":"\nPancakeSwap 使用 LayerZero v1 OFT 标准在链间桥接。通过 UI 在 https://bridge.pancakeswap.finance/ 桥接，或查看更多 这里\n主网\n链地址BSC0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82ETH0x152649eA73beAb28c5b49B26eb48f7EAD6d4c898Arbitrum0x1b896893dfc86bb67Cf57767298b9073D2c1bA2cBase0x3055913c90Fcc1A6CE9a358911721eEb942013A1Linea0x0D1E753a25eBda689453309112904807625bEFBeopBNB0x2779106e4F4A8A28d77A24c18283651a2AE22D1CzkEVM0x0D1E753a25eBda689453309112904807625bEFBezkSync0x3A287a06c66f9E95a56327185cA2BDF5f031cEcD\n测试网\n链地址BSC 测试网0x8d008B313C1d6C7fE2982F62d32Da7507cF43551ETH Goerli0xc2C3eAbE0368a2Ea97f485b03D1098cdD7d0c081Base Goerli0x052a99849Ef2e13a5CB28275862991671D4b6fF5Linea Goerli0x2B3C5df29F73dbF028BA82C33e0A5A6e5800F75eopBNB0xa11B290B038C35711eB309268a2460754f730921zkEVM0x2B3C5df29F73dbF028BA82C33e0A5A6e5800F75e","title":"Cake 地址","titles":[]},"88":{"href":"/contracts/affiliate-program/overview#affiliate-program","html":"</header>\n","isPage":true,"text":"\n","title":"Affiliate Program","titles":[]},"89":{"href":"/contracts/affiliate-program/overview#contract-info","html":"\n","isPage":false,"text":"\n","title":"Contract info","titles":["Affiliate Program"]},"90":{"href":"/contracts/affiliate-program/overview#introduction","html":"\n<p>联署计划合同用于领取奖励。我们的后端会生成一个签名作为用户领取奖励的凭证。合同需要不时地补充 CAKE。</p>\n","isPage":false,"text":"\n联署计划合同用于领取奖励。我们的后端会生成一个签名作为用户领取奖励的凭证。合同需要不时地补充 CAKE。\n","title":"Introduction","titles":["Affiliate Program","Contract info"]},"91":{"href":"/contracts/affiliate-program/overview#binance-智能链","html":"\n<p>联署计划合同: <code>0x92C73D90F709DFf7e5E7307e8F2EE20e39396b12</code></p>\n<p>查看 <a href=\"https://bscscan.com/address/0x92c73d90f709dff7e5e7307e8f2ee20e39396b12\">PancakeSwap: 联署计划合同在 BscScan 上的详情</a></p>","isPage":false,"text":"\n联署计划合同: 0x92C73D90F709DFf7e5E7307e8F2EE20e39396b12\n查看 PancakeSwap: 联署计划合同在 BscScan 上的详情","title":"Binance 智能链","titles":["Affiliate Program","Contract info"]},"92":{"href":"/contracts/lottery-v2/lottery-contract#lottery-contract","html":"</header>\n","isPage":true,"text":"\n","title":"Lottery Contract","titles":[]},"93":{"href":"/contracts/lottery-v2/lottery-contract#合约角色","html":"\n<table><thead><tr><th>角色</th><th>描述</th></tr></thead><tbody><tr><td>injectorAddress (onlyInjector)</td><td>Injector 是用于定期注资彩票的地址</td></tr><tr><td>operatorAddress (onlyOperator)</td><td>用于运行常规操作的彩票调度账户</td></tr><tr><td>treasuryAddress (onlyTreasury)</td><td>接收销毁资产的地址</td></tr><tr><td>Owner (onlyOwner)</td><td>合约拥有者</td></tr></tbody></table>\n","isPage":false,"text":"\n角色描述injectorAddress (onlyInjector)Injector 是用于定期注资彩票的地址operatorAddress (onlyOperator)用于运行常规操作的彩票调度账户treasuryAddress (onlyTreasury)接收销毁资产的地址Owner (onlyOwner)合约拥有者\n","title":"合约角色：","titles":["Lottery Contract"]},"94":{"href":"/contracts/lottery-v2/lottery-contract#owner","html":"\n<p><code>0xad9d97fc7bf0ac6dc68d478dcb3709454519b358</code></p>\n<p>由 gnosis 多重签名合约控制，阈值为 3/6</p>\n","isPage":false,"text":"\n0xad9d97fc7bf0ac6dc68d478dcb3709454519b358\n由 gnosis 多重签名合约控制，阈值为 3/6\n","title":"Owner","titles":["Lottery Contract","合约角色："]},"95":{"href":"/contracts/lottery-v2/lottery-contract#operator-address","html":"\n<p><code>0x566a7e38b300E903dE71389C2b801AcDBA5268dB</code></p>\n<p>调度地址 - 全自动化且无人参与。不在多重签名范围内，没有访问敏感合约操作的权限。</p>\n","isPage":false,"text":"\n0x566a7e38b300E903dE71389C2b801AcDBA5268dB\n调度地址 - 全自动化且无人参与。不在多重签名范围内，没有访问敏感合约操作的权限。\n","title":"Operator Address","titles":["Lottery Contract","合约角色："]},"96":{"href":"/contracts/lottery-v2/lottery-contract#treasury-address","html":"\n<p><code>0xe2086f890e7bd20e07fc0036a437dc4813e88b09</code></p>\n<p>由 gnosis 多重签名合约控制，阈值为 3/6</p>\n","isPage":false,"text":"\n0xe2086f890e7bd20e07fc0036a437dc4813e88b09\n由 gnosis 多重签名合约控制，阈值为 3/6\n","title":"Treasury Address","titles":["Lottery Contract","合约角色："]},"97":{"href":"/contracts/lottery-v2/lottery-contract#injector-address-目前与-owner-相同","html":"\n<p><code>0xaD9d97fc7BF0ac6dC68d478dcB3709454519b358</code></p>\n<p>由 gnosis 多重签名合约控制，阈值为 3/6</p>\n","isPage":false,"text":"\n0xaD9d97fc7BF0ac6dC68d478dcB3709454519b358\n由 gnosis 多重签名合约控制，阈值为 3/6\n","title":"Injector Address （目前与 Owner 相同）","titles":["Lottery Contract","合约角色："]},"98":{"href":"/contracts/lottery-v2/lottery-contract#函数","html":"\n","isPage":false,"text":"\n","title":"函数","titles":["Lottery Contract"]},"99":{"href":"/contracts/lottery-v2/lottery-contract#injectfunds---injector-和-owner","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> injectFunds</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> _lotteryId</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> _amount</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">external</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> override</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> onlyOwnerOrInjector</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    require</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(_lotteries[_lotteryId].status </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> Status.Open, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Lottery not open&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    cakeToken.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">safeTransferFrom</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(msg.sender), </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">this</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">), _amount);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    _lotteries[_lotteryId].amountCollectedInCake </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _amount;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    emit </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">LotteryInjection</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(_lotteryId, _amount);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<p><strong>Injector</strong> 或 <strong>Owner</strong> 可以调用此函数向指定的 <em>lotteryId</em> 注入特定数量的 <em>CAKE</em>。</p>\n","isPage":false,"text":"\nfunction injectFunds(uint256 _lotteryId, uint256 _amount) external override onlyOwnerOrInjector {\n    require(_lotteries[_lotteryId].status == Status.Open, &quot;Lottery not open&quot;);\n \n    cakeToken.safeTransferFrom(address(msg.sender), address(this), _amount);\n    _lotteries[_lotteryId].amountCollectedInCake += _amount;\n \n    emit LotteryInjection(_lotteryId, _amount);\n}\nInjector 或 Owner 可以调用此函数向指定的 lotteryId 注入特定数量的 CAKE。\n","title":"injectFunds - Injector 和 Owner","titles":["Lottery Contract","函数"]},"100":{"href":"/contracts/lottery-v2/lottery-contract#startlottery---operator","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> startLottery</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#E36209;--shiki-dark:#F69D50\">    uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> _endTime</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#E36209;--shiki-dark:#F69D50\">    uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> _priceTicketInCake</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#E36209;--shiki-dark:#F69D50\">    uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> _discountDivisor</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#E36209;--shiki-dark:#F69D50\">    uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">6</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">] </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">calldata</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> _rewardsBreakdown</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#E36209;--shiki-dark:#F69D50\">    uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> _treasuryFee</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">external</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> override</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> onlyOperator</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    require</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        (currentLotteryId </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">||</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (_lotteries[currentLotteryId].status </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> Status.Claimable),</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;Not time to start lottery&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    );</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    require</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ((_endTime </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> block.timestamp) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> MIN_LENGTH_LOTTERY</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;&amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ((_endTime </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> block.timestamp) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> MAX_LENGTH_LOTTERY</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;Lottery length outside of range&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    );</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    require</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        (_priceTicketInCake </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> minPriceTicketInCake) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;&amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (_priceTicketInCake </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> maxPriceTicketInCake),</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;Outside of limits&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    );</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    require</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(_discountDivisor </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> MIN_DISCOUNT_DIVISOR</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Discount divisor too low&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    require</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(_treasuryFee </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> MAX_TREASURY_FEE</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Treasury fee too high&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    require</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        (_rewardsBreakdown[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            _rewardsBreakdown[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            _rewardsBreakdown[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">2</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            _rewardsBreakdown[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">3</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            _rewardsBreakdown[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">4</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            _rewardsBreakdown[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">5</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 10000</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;Rewards must equal 10000&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    );</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    currentLotteryId</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">++</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    _lotteries[currentLotteryId] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> Lottery</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        status: Status.Open,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        startTime: block.timestamp,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        endTime: _endTime,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        priceTicketInCake: _priceTicketInCake,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        discountDivisor: _discountDivisor,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        rewardsBreakdown: _rewardsBreakdown,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        treasuryFee: _treasuryFee,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        cakePerBracket: [</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">), </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">), </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">), </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">), </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">), </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)],</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        countWinnersPerBracket: [</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">), </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">), </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">), </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">), </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">), </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)],</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        firstTicketId: currentTicketId,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        firstTicketIdNextLottery: currentTicketId,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        amountCollectedInCake: pendingInjectionNextLottery,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        finalNumber: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    });</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    emit </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">LotteryOpen</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        currentLotteryId,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        block.timestamp,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        _endTime,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        _priceTicketInCake,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        currentTicketId,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        pendingInjectionNextLottery</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    );</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    pendingInjectionNextLottery </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<p><code>startLottery</code> 函数仅供 <strong>Operator</strong> 调用，以启动新的彩票轮次。</p>\n","isPage":false,"text":"\nfunction startLottery(\n    uint256 _endTime,\n    uint256 _priceTicketInCake,\n    uint256 _discountDivisor,\n    uint256[6] calldata _rewardsBreakdown,\n    uint256 _treasuryFee\n) external override onlyOperator {\n    require(\n        (currentLotteryId == 0) || (_lotteries[currentLotteryId].status == Status.Claimable),\n        &quot;Not time to start lottery&quot;\n    );\n \n    require(\n        ((_endTime - block.timestamp) &gt; MIN_LENGTH_LOTTERY) &amp;&amp; ((_endTime - block.timestamp) &lt; MAX_LENGTH_LOTTERY),\n        &quot;Lottery length outside of range&quot;\n    );\n \n    require(\n        (_priceTicketInCake &gt;= minPriceTicketInCake) &amp;&amp; (_priceTicketInCake &lt;= maxPriceTicketInCake),\n        &quot;Outside of limits&quot;\n    );\n \n    require(_discountDivisor &gt;= MIN_DISCOUNT_DIVISOR, &quot;Discount divisor too low&quot;);\n    require(_treasuryFee &lt;= MAX_TREASURY_FEE, &quot;Treasury fee too high&quot;);\n \n    require(\n        (_rewardsBreakdown[0] +\n            _rewardsBreakdown[1] +\n            _rewardsBreakdown[2] +\n            _rewardsBreakdown[3] +\n            _rewardsBreakdown[4] +\n            _rewardsBreakdown[5]) == 10000,\n        &quot;Rewards must equal 10000&quot;\n    );\n \n    currentLotteryId++;\n \n    _lotteries[currentLotteryId] = Lottery({\n        status: Status.Open,\n        startTime: block.timestamp,\n        endTime: _endTime,\n        priceTicketInCake: _priceTicketInCake,\n        discountDivisor: _discountDivisor,\n        rewardsBreakdown: _rewardsBreakdown,\n        treasuryFee: _treasuryFee,\n        cakePerBracket: [uint256(0), uint256(0), uint256(0), uint256(0), uint256(0), uint256(0)],\n        countWinnersPerBracket: [uint256(0), uint256(0), uint256(0), uint256(0), uint256(0), uint256(0)],\n        firstTicketId: currentTicketId,\n        firstTicketIdNextLottery: currentTicketId,\n        amountCollectedInCake: pendingInjectionNextLottery,\n        finalNumber: 0\n    });\n \n    emit LotteryOpen(\n        currentLotteryId,\n        block.timestamp,\n        _endTime,\n        _priceTicketInCake,\n        currentTicketId,\n        pendingInjectionNextLottery\n    );\n \n    pendingInjectionNextLottery = 0;\n}\nstartLottery 函数仅供 Operator 调用，以启动新的彩票轮次。\n","title":"startLottery - Operator","titles":["Lottery Contract","函数"]},"101":{"href":"/contracts/lottery-v2/lottery-contract#closelottery---operator","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> closeLottery</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> _lotteryId</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">external</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> override</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> onlyOperator</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> nonReentrant</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    require</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(_lotteries[_lotteryId].status </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> Status.Open, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Lottery not open&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    require</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(block.timestamp </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _lotteries[_lotteryId].endTime, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Lottery not over&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    _lotteries[_lotteryId].firstTicketIdNextLottery </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> currentTicketId;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // 根据种子请求生成器生成随机数</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    randomGenerator.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getRandomNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">keccak256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(abi.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">encodePacked</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(_lotteryId, currentTicketId))));</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    _lotteries[_lotteryId].status </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> Status.Close;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    emit </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">LotteryClose</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(_lotteryId, currentTicketId);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<p>由 <strong>Operator</strong> 调用以结束彩票轮次。</p>\n","isPage":false,"text":"\nfunction closeLottery(uint256 _lotteryId) external override onlyOperator nonReentrant {\n    require(_lotteries[_lotteryId].status == Status.Open, &quot;Lottery not open&quot;);\n    require(block.timestamp &gt; _lotteries[_lotteryId].endTime, &quot;Lottery not over&quot;);\n    _lotteries[_lotteryId].firstTicketIdNextLottery = currentTicketId;\n \n    // 根据种子请求生成器生成随机数\n    randomGenerator.getRandomNumber(uint256(keccak256(abi.encodePacked(_lotteryId, currentTicketId))));\n \n    _lotteries[_lotteryId].status = Status.Close;\n \n    emit LotteryClose(_lotteryId, currentTicketId);\n}\n由 Operator 调用以结束彩票轮次。\n","title":"closeLottery - Operator","titles":["Lottery Contract","函数"]},"102":{"href":"/contracts/lottery-v2/lottery-contract#drawfinalnumberandmakelotteryclaimable---operator","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> drawFinalNumberAndMakeLotteryClaimable</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> _lotteryId</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">bool</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> _autoInjection</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    external</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    override</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    onlyOperator</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    nonReentrant</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    require</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(_lotteries[_lotteryId].status </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> Status.Close, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Lottery not close&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    require</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(_lotteryId </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> randomGenerator.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">viewLatestLotteryId</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Numbers not drawn&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // 基于 ChainLink 的随机生成器计算 finalNumber</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    uint32 finalNumber </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> randomGenerator.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">viewRandomResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">();</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // 初始化一个计数前一个等级地址数量的变量</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    uint256 numberAddressesInPreviousBracket;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // 计算扣除 Treasury 费用后的分配金额</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    uint256 </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">amountToShareToWinners</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ((_lotteries[_lotteryId].amountCollectedInCake) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10000</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> -</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _lotteries[_lotteryId].treasuryFee))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">/</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 10000</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // 初始化提取到 Treasury 的金额</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    uint256 amountToWithdrawToTreasury;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // 从最高等级开始计算每个等级的 CAKE 奖金</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (uint32 i </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">; i </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 6</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">; i</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">++</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        uint32 j </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 5</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> -</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> i;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        uint32 transformedWinningNumber </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _bracketCalculator[j] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (finalNumber </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">%</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">uint32</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">**</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(j </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)));</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        _lotteries[_lotteryId].countWinnersPerBracket[j] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            _numberTicketsPerLotteryId[_lotteryId][transformedWinningNumber] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">-</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            numberAddressesInPreviousBracket;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // A. 如果该等级的用户数量大于 0</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            (_numberTicketsPerLotteryId[_lotteryId][transformedWinningNumber] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> numberAddressesInPreviousBracket) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">            0</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // B. 如果该等级的奖励 &gt; 0，进行计算；否则，报告前级地址数</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (_lotteries[_lotteryId].rewardsBreakdown[j] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                _lotteries[_lotteryId].cakePerBracket[j] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    ((_lotteries[_lotteryId].rewardsBreakdown[j] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> amountToShareToWinners) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">/</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                        (_numberTicketsPerLotteryId[_lotteryId][transformedWinningNumber] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">-</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                            numberAddressesInPreviousBracket)) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">/</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">                    10000</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">                // 更新前级地址数量</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                numberAddressesInPreviousBracket </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _numberTicketsPerLotteryId[_lotteryId][transformedWinningNumber];</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // A. 没有 CAKE 分发，将其加入提取到 Treasury 的金额</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">else</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            _lotteries[_lotteryId].cakePerBracket[j] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            amountToWithdrawToTreasury </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+=</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                (_lotteries[_lotteryId].rewardsBreakdown[j] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> amountToShareToWinners) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">/</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">                10000</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // 更新彩票的内部状态</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    _lotteries[_lotteryId].finalNumber </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> finalNumber;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    _lotteries[_lotteryId].status </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> Status.Claimable;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (_autoInjection) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        pendingInjectionNextLottery </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> amountToWithdrawToTreasury;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        amountToWithdrawToTreasury </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    amountToWithdrawToTreasury </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (_lotteries[_lotteryId].amountCollectedInCake </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> amountToShareToWinners);</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // 将 CAKE 转移到 Treasury 地址</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    cakeToken.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">safeTransfer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(treasuryAddress, amountToWithdrawToTreasury);</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    emit </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">LotteryNumberDrawn</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(currentLotteryId, finalNumber, numberAddressesInPreviousBracket);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<p><strong>Operator</strong> 使用 ChainLink VRF 函数进行最终号码抽奖。</p>\n","isPage":false,"text":"\nfunction drawFinalNumberAndMakeLotteryClaimable(uint256 _lotteryId, bool _autoInjection)\n    external\n    override\n    onlyOperator\n    nonReentrant\n{\n    require(_lotteries[_lotteryId].status == Status.Close, &quot;Lottery not close&quot;);\n    require(_lotteryId == randomGenerator.viewLatestLotteryId(), &quot;Numbers not drawn&quot;);\n \n    // 基于 ChainLink 的随机生成器计算 finalNumber\n    uint32 finalNumber = randomGenerator.viewRandomResult();\n \n    // 初始化一个计数前一个等级地址数量的变量\n    uint256 numberAddressesInPreviousBracket;\n \n    // 计算扣除 Treasury 费用后的分配金额\n    uint256 amountToShareToWinners = (\n        ((_lotteries[_lotteryId].amountCollectedInCake) * (10000 - _lotteries[_lotteryId].treasuryFee))\n    ) / 10000;\n \n    // 初始化提取到 Treasury 的金额\n    uint256 amountToWithdrawToTreasury;\n \n    // 从最高等级开始计算每个等级的 CAKE 奖金\n    for (uint32 i = 0; i &lt; 6; i++) {\n        uint32 j = 5 - i;\n        uint32 transformedWinningNumber = _bracketCalculator[j] + (finalNumber % (uint32(10)**(j + 1)));\n \n        _lotteries[_lotteryId].countWinnersPerBracket[j] =\n            _numberTicketsPerLotteryId[_lotteryId][transformedWinningNumber] -\n            numberAddressesInPreviousBracket;\n \n        // A. 如果该等级的用户数量大于 0\n        if (\n            (_numberTicketsPerLotteryId[_lotteryId][transformedWinningNumber] - numberAddressesInPreviousBracket) !=\n            0\n        ) {\n            // B. 如果该等级的奖励 &gt; 0，进行计算；否则，报告前级地址数\n            if (_lotteries[_lotteryId].rewardsBreakdown[j] != 0) {\n                _lotteries[_lotteryId].cakePerBracket[j] =\n                    ((_lotteries[_lotteryId].rewardsBreakdown[j] * amountToShareToWinners) /\n                        (_numberTicketsPerLotteryId[_lotteryId][transformedWinningNumber] -\n                            numberAddressesInPreviousBracket)) /\n                    10000;\n \n                // 更新前级地址数量\n                numberAddressesInPreviousBracket = _numberTicketsPerLotteryId[_lotteryId][transformedWinningNumber];\n            }\n            // A. 没有 CAKE 分发，将其加入提取到 Treasury 的金额\n        } else {\n            _lotteries[_lotteryId].cakePerBracket[j] = 0;\n \n            amountToWithdrawToTreasury +=\n                (_lotteries[_lotteryId].rewardsBreakdown[j] * amountToShareToWinners) /\n                10000;\n        }\n    }\n \n    // 更新彩票的内部状态\n    _lotteries[_lotteryId].finalNumber = finalNumber;\n    _lotteries[_lotteryId].status = Status.Claimable;\n \n    if (_autoInjection) {\n        pendingInjectionNextLottery = amountToWithdrawToTreasury;\n        amountToWithdrawToTreasury = 0;\n    }\n \n    amountToWithdrawToTreasury += (_lotteries[_lotteryId].amountCollectedInCake - amountToShareToWinners);\n \n    // 将 CAKE 转移到 Treasury 地址\n    cakeToken.safeTransfer(treasuryAddress, amountToWithdrawToTreasury);\n \n    emit LotteryNumberDrawn(currentLotteryId, finalNumber, numberAddressesInPreviousBracket);\n}\nOperator 使用 ChainLink VRF 函数进行最终号码抽奖。\n","title":"drawFinalNumberAndMakeLotteryClaimable - Operator","titles":["Lottery Contract","函数"]},"103":{"href":"/contracts/lottery-v2/lottery-contract#recoverwrongtokens---owner","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> recoverWrongTokens</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> _tokenAddress</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> _tokenAmount</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">external</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> onlyOwner</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    require</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(_tokenAddress </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(cakeToken), </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Cannot be CAKE token&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    IERC20</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(_tokenAddress).</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">safeTransfer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(msg.sender), _tokenAmount);</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    emit </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AdminTokenRecovery</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(_tokenAddress, _tokenAmount);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<p>如果错误地将非 CAKE 代币发送到彩票合约，<strong>Owner</strong> 可以使用此函数找回。</p>\n<hr/>\n","isPage":false,"text":"\nfunction recoverWrongTokens(address _tokenAddress, uint256 _tokenAmount) external onlyOwner {\n    require(_tokenAddress != address(cakeToken), &quot;Cannot be CAKE token&quot;);\n \n    IERC20(_tokenAddress).safeTransfer(address(msg.sender), _tokenAmount);\n \n    emit AdminTokenRecovery(_tokenAddress, _tokenAmount);\n}\n如果错误地将非 CAKE 代币发送到彩票合约，Owner 可以使用此函数找回。\n\n","title":"recoverWrongTokens - Owner","titles":["Lottery Contract","函数"]},"104":{"href":"/contracts/lottery-v2/lottery-contract#setminandmaxticketpriceincake---owner","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> setMinAndMaxTicketPriceInCake</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> _minPriceTicketInCake</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> _maxPriceTicketInCake</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    external</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    onlyOwner</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    require</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(_minPriceTicketInCake </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _maxPriceTicketInCake, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;minPrice must be &lt; maxPrice&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    minPriceTicketInCake </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _minPriceTicketInCake;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    maxPriceTicketInCake </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _maxPriceTicketInCake;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<p>防止 <strong>Operator</strong> 在闪崩/闪涨事件期间将票价设置为任意价格。</p>\n","isPage":false,"text":"\nfunction setMinAndMaxTicketPriceInCake(uint256 _minPriceTicketInCake, uint256 _maxPriceTicketInCake)\n    external\n    onlyOwner\n{\n    require(_minPriceTicketInCake &lt;= _maxPriceTicketInCake, &quot;minPrice must be &lt; maxPrice&quot;);\n \n    minPriceTicketInCake = _minPriceTicketInCake;\n    maxPriceTicketInCake = _maxPriceTicketInCake;\n}\n防止 Operator 在闪崩/闪涨事件期间将票价设置为任意价格。\n","title":"setMinAndMaxTicketPriceInCake - Owner","titles":["Lottery Contract","函数"]},"105":{"href":"/contracts/lottery-v2/lottery-contract#setmaxnumberticketsperbuy---owner","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> setMaxNumberTicketsPerBuy</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> _maxNumberTicketsPerBuy</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">external</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> onlyOwner</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    require</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(_maxNumberTicketsPerBuy </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Must be &gt; 0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    maxNumberTicketsPerBuyOrClaim </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _maxNumberTicketsPerBuy;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<p><strong>Owner</strong> 可以修改每笔交易的最大票数。当 BSC 区块大小增加或减少时可能需要进行调整。</p>\n","isPage":false,"text":"\nfunction setMaxNumberTicketsPerBuy(uint256 _maxNumberTicketsPerBuy) external onlyOwner {\n    require(_maxNumberTicketsPerBuy != 0, &quot;Must be &gt; 0&quot;);\n    maxNumberTicketsPerBuyOrClaim = _maxNumberTicketsPerBuy;\n}\nOwner 可以修改每笔交易的最大票数。当 BSC 区块大小增加或减少时可能需要进行调整。\n","title":"setMaxNumberTicketsPerBuy - Owner","titles":["Lottery Contract","函数"]},"106":{"href":"/contracts/lottery-v2/lottery-contract#setoperatorandtreasuryandinjectoraddresses---owner","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> setOperatorAndTreasuryAndInjectorAddresses</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#E36209;--shiki-dark:#F69D50\">    address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> _operatorAddress</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#E36209;--shiki-dark:#F69D50\">    address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> _treasuryAddress</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#E36209;--shiki-dark:#F69D50\">    address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> _injectorAddress</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">external</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> onlyOwner</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    require</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(_operatorAddress </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">), </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Cannot be zero address&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    require</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(_treasuryAddress </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">), </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Cannot be zero address&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    require</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(_injectorAddress </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">), </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Cannot be zero address&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    operatorAddress </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _operatorAddress;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    treasuryAddress </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _treasuryAddress;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    injectorAddress </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _injectorAddress;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    emit </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewOperatorAndTreasuryAndInjectorAddresses</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(_operatorAddress, _treasuryAddress, _injectorAddress);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<p>设置 <strong>Operator</strong>、<strong>Treasury</strong> 和 <strong>Injector</strong> 地址的函数。</p>\n","isPage":false,"text":"\nfunction setOperatorAndTreasuryAndInjectorAddresses(\n    address _operatorAddress,\n    address _treasuryAddress,\n    address _injectorAddress\n) external onlyOwner {\n    require(_operatorAddress != address(0), &quot;Cannot be zero address&quot;);\n    require(_treasuryAddress != address(0), &quot;Cannot be zero address&quot;);\n    require(_injectorAddress != address(0), &quot;Cannot be zero address&quot;);\n \n    operatorAddress = _operatorAddress;\n    treasuryAddress = _treasuryAddress;\n    injectorAddress = _injectorAddress;\n \n    emit NewOperatorAndTreasuryAndInjectorAddresses(_operatorAddress, _treasuryAddress, _injectorAddress);\n}\n设置 Operator、Treasury 和 Injector 地址的函数。\n","title":"setOperatorAndTreasuryAndInjectorAddresses - Owner","titles":["Lottery Contract","函数"]},"107":{"href":"/contracts/lottery-v2/lottery-contract#changerandomgenerator---owner","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> changeRandomGenerator</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> _randomGeneratorAddress</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">external</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> onlyOwner</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    require</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        (currentLotteryId </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">||</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (_lotteries[currentLotteryId].status </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> Status.Claimable),</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;Lottery not in claimable&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    );</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // 根据种子请求生成器生成随机数</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    IRandomNumberGenerator</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(_randomGeneratorAddress).</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getRandomNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">keccak256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(abi.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">encodePacked</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(currentLotteryId, currentTicketId)))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    );</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // 基于 ChainLink 的随机生成器计算 finalNumber</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    IRandomNumberGenerator</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(_randomGeneratorAddress).</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">viewRandomResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">();</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    randomGenerator </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> IRandomNumberGenerator</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(_randomGeneratorAddress);</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    emit </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewRandomGenerator</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(_randomGeneratorAddress);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<p>由 <strong>Owner</strong> 更新 RandomNumberGenerator 合约，以在需要更新抽奖逻辑或发布更新时使用。</p>","isPage":false,"text":"\nfunction changeRandomGenerator(address _randomGeneratorAddress) external onlyOwner {\n    require(\n        (currentLotteryId == 0) || (_lotteries[currentLotteryId].status == Status.Claimable),\n        &quot;Lottery not in claimable&quot;\n    );\n \n    // 根据种子请求生成器生成随机数\n    IRandomNumberGenerator(_randomGeneratorAddress).getRandomNumber(\n        uint256(keccak256(abi.encodePacked(currentLotteryId, currentTicketId)))\n    );\n \n    // 基于 ChainLink 的随机生成器计算 finalNumber\n    IRandomNumberGenerator(_randomGeneratorAddress).viewRandomResult();\n \n    randomGenerator = IRandomNumberGenerator(_randomGeneratorAddress);\n \n    emit NewRandomGenerator(_randomGeneratorAddress);\n}\n由 Owner 更新 RandomNumberGenerator 合约，以在需要更新抽奖逻辑或发布更新时使用。","title":"changeRandomGenerator - Owner","titles":["Lottery Contract","函数"]},"108":{"href":"/contracts/permit2/addresses#pancakeswap-permit2-地址","html":"</header>\n<strong>主网</strong>\n<table><thead><tr><th>链</th><th>地址</th></tr></thead><tbody><tr><td>BSC</td><td>0x31c2F6fcFf4F8759b3Bd5Bf0e1084A055615c768</td></tr><tr><td>ETH</td><td>0x31c2F6fcFf4F8759b3Bd5Bf0e1084A055615c768</td></tr><tr><td>Arbitrum</td><td>0x31c2F6fcFf4F8759b3Bd5Bf0e1084A055615c768</td></tr><tr><td>Base</td><td>0x31c2F6fcFf4F8759b3Bd5Bf0e1084A055615c768</td></tr><tr><td>Linea</td><td>0x31c2F6fcFf4F8759b3Bd5Bf0e1084A055615c768</td></tr><tr><td>opBNB</td><td>0x31c2F6fcFf4F8759b3Bd5Bf0e1084A055615c768</td></tr><tr><td>zkEVM</td><td>0x31c2F6fcFf4F8759b3Bd5Bf0e1084A055615c768</td></tr><tr><td>Scroll</td><td>0x31c2F6fcFf4F8759b3Bd5Bf0e1084A055615c768</td></tr><tr><td>zkSync</td><td>0x686FD50007EaA636F01154d660b96110B6bFe351</td></tr></tbody></table>\n<strong>测试网</strong>\n<table><thead><tr><th>链</th><th>地址</th></tr></thead><tbody><tr><td>BSC 测试网</td><td>0x31c2F6fcFf4F8759b3Bd5Bf0e1084A055615c768</td></tr><tr><td>Sepolia, Goerli</td><td>0x31c2F6fcFf4F8759b3Bd5Bf0e1084A055615c768</td></tr><tr><td>Arbitrum Sepolia, Arbitrum Goerli</td><td>0x31c2F6fcFf4F8759b3Bd5Bf0e1084A055615c768</td></tr><tr><td>Base Sepolia, Base 测试网</td><td>0x31c2F6fcFf4F8759b3Bd5Bf0e1084A055615c768</td></tr><tr><td>Linea</td><td>0x31c2F6fcFf4F8759b3Bd5Bf0e1084A055615c768</td></tr><tr><td>opBNB</td><td>0x31c2F6fcFf4F8759b3Bd5Bf0e1084A055615c768</td></tr><tr><td>zkEVM</td><td>0x31c2F6fcFf4F8759b3Bd5Bf0e1084A055615c768</td></tr><tr><td>Scroll Sepolia</td><td>0x31c2F6fcFf4F8759b3Bd5Bf0e1084A055615c768</td></tr><tr><td>zkSync</td><td>0xaf321b731E65715DdbFDa73A066E00BB28345709</td></tr></tbody></table>","isPage":true,"text":"\n主网\n链地址BSC0x31c2F6fcFf4F8759b3Bd5Bf0e1084A055615c768ETH0x31c2F6fcFf4F8759b3Bd5Bf0e1084A055615c768Arbitrum0x31c2F6fcFf4F8759b3Bd5Bf0e1084A055615c768Base0x31c2F6fcFf4F8759b3Bd5Bf0e1084A055615c768Linea0x31c2F6fcFf4F8759b3Bd5Bf0e1084A055615c768opBNB0x31c2F6fcFf4F8759b3Bd5Bf0e1084A055615c768zkEVM0x31c2F6fcFf4F8759b3Bd5Bf0e1084A055615c768Scroll0x31c2F6fcFf4F8759b3Bd5Bf0e1084A055615c768zkSync0x686FD50007EaA636F01154d660b96110B6bFe351\n测试网\n链地址BSC 测试网0x31c2F6fcFf4F8759b3Bd5Bf0e1084A055615c768Sepolia, Goerli0x31c2F6fcFf4F8759b3Bd5Bf0e1084A055615c768Arbitrum Sepolia, Arbitrum Goerli0x31c2F6fcFf4F8759b3Bd5Bf0e1084A055615c768Base Sepolia, Base 测试网0x31c2F6fcFf4F8759b3Bd5Bf0e1084A055615c768Linea0x31c2F6fcFf4F8759b3Bd5Bf0e1084A055615c768opBNB0x31c2F6fcFf4F8759b3Bd5Bf0e1084A055615c768zkEVM0x31c2F6fcFf4F8759b3Bd5Bf0e1084A055615c768Scroll Sepolia0x31c2F6fcFf4F8759b3Bd5Bf0e1084A055615c768zkSync0xaf321b731E65715DdbFDa73A066E00BB28345709","title":"PancakeSwap Permit2 地址","titles":[]},"109":{"href":"/contracts/permit2/index#简介","html":"</header>\n<p>Permit2 引入了一种低开销的新一代 token 批准/元交易系统，使得 token 批准在各种应用中变得更容易、更安全和更一致。</p>\n<header>","isPage":true,"text":"\nPermit2 引入了一种低开销的新一代 token 批准/元交易系统，使得 token 批准在各种应用中变得更容易、更安全和更一致。\n","title":"简介","titles":[]},"110":{"href":"/contracts/permit2/index#功能","html":"</header>\n<ul>\n<li>\n<p><strong>基于签名的批准</strong>：任何 ERC20 代币，即使是不支持 <a href=\"https://eips.ethereum.org/EIPS/eip-2612\">EIP-2612</a> 的代币，现在也可以使用 permit 样式的批准。这允许应用程序通过在使用 Permit2 集成合约时，发送一个 permit 签名和交易数据来实现单一交易流程。</p>\n</li>\n<li>\n<p><strong>批量代币批准</strong>：通过一个签名设置不同代币对不同使用者的权限。</p>\n</li>\n<li>\n<p><strong>基于签名的代币转账</strong>：所有者可以签署消息直接将代币转移到指定的使用者，绕过设置任何许可。这意味着应用程序接收代币时不需要批准，并且使用这种方法时永远不会有悬挂的批准。签名仅在执行交易的过程中有效。</p>\n</li>\n<li>\n<p><strong>批量代币转账</strong>：通过一个签名将不同的代币转移给不同的接收者。</p>\n</li>\n<li>\n<p><strong>安全任意数据验证</strong>：通过传递一个 witness 哈希和 witness 类型来验证任何额外数据。类型字符串必须遵循 <a href=\"https://eips.ethereum.org/EIPS/eip-712\">EIP-712</a> 标准。</p>\n</li>\n<li>\n<p><strong>合同的签名验证</strong>：所有签名验证支持 <a href=\"https://eips.ethereum.org/EIPS/eip-1271\">EIP-1271</a>，因此合约可以通过签名批准和转移代币。</p>\n</li>\n<li>\n<p><strong>非单调重放保护</strong>：基于签名的转移使用无序、非单调的 nonce，因此已签署的许可无需按特定顺序执行交易。</p>\n</li>\n<li>\n<p><strong>过期批准</strong>：批准可以是有时间限制的，从而消除对钱包整个代币余额悬挂的批准的安全担忧。这也意味着撤销批准不一定需要一笔新交易，因为过期的批准将不再有效。</p>\n</li>\n<li>\n<p><strong>批量撤销许可</strong>：在一次交易中移除任何数量的代币和授权者的许可。</p>\n</li>\n</ul>\n<header>","isPage":false,"text":"\n\n\n基于签名的批准：任何 ERC20 代币，即使是不支持 EIP-2612 的代币，现在也可以使用 permit 样式的批准。这允许应用程序通过在使用 Permit2 集成合约时，发送一个 permit 签名和交易数据来实现单一交易流程。\n\n\n批量代币批准：通过一个签名设置不同代币对不同使用者的权限。\n\n\n基于签名的代币转账：所有者可以签署消息直接将代币转移到指定的使用者，绕过设置任何许可。这意味着应用程序接收代币时不需要批准，并且使用这种方法时永远不会有悬挂的批准。签名仅在执行交易的过程中有效。\n\n\n批量代币转账：通过一个签名将不同的代币转移给不同的接收者。\n\n\n安全任意数据验证：通过传递一个 witness 哈希和 witness 类型来验证任何额外数据。类型字符串必须遵循 EIP-712 标准。\n\n\n合同的签名验证：所有签名验证支持 EIP-1271，因此合约可以通过签名批准和转移代币。\n\n\n非单调重放保护：基于签名的转移使用无序、非单调的 nonce，因此已签署的许可无需按特定顺序执行交易。\n\n\n过期批准：批准可以是有时间限制的，从而消除对钱包整个代币余额悬挂的批准的安全担忧。这也意味着撤销批准不一定需要一笔新交易，因为过期的批准将不再有效。\n\n\n批量撤销许可：在一次交易中移除任何数量的代币和授权者的许可。\n\n\n","title":"功能","titles":[]},"111":{"href":"/contracts/permit2/index#流程","html":"</header>\n<p><img src=\"/pancake-developer/permit2/flow.png\" alt=\"flow\"/></p>\n<ol>\n<li>\n<p>Alice 在一个 ERC20 上调用 <code>approve()</code>，为规范的 Permit2 合约授予无限许可。</p>\n</li>\n<li>\n<p>Alice 签署一个链下的 “permit2” 消息，表明协议合约被允许代表她转移代币。</p>\n</li>\n<li>\n<p>Alice 在协议合约上调用交互函数，并将签署的 permit2 消息作为参数传递。</p>\n</li>\n<li>\n<p>协议合约在 Permit2 合约上调用 <code>permitTransferFrom()</code>，后者使用其在步骤 1 中授予的许可调用 ERC20 合约上的 <code>transferFrom()</code>，从而转移 Alice 所持有的代币。</p>\n</li>\n</ol>\n<p>可能会觉得要求用户首先授予显式许可是一种退步。然而，与其直接授予协议许可，用户将其授予规范的 Permit2 合约。这意味着如果用户之前已经为某个集成 Permit2 的协议这样做过，那么每个其他协议都可以跳过这一步。</p>\n<p>协议将调用规范 Permit2 合约的 permitTransferFrom() 而不是直接调用 ERC20 代币的 transferFrom() 以执行转账。Permit2 位于协议和 ERC20 代币之间，跟踪和验证 permit2 消息，然后最终使用其授予的许可直接在 ERC20 上执行 transferFrom() 调用。这样的间接方式使 Permit2 能够将 EIP-2612 类的好处扩展到每个现有的 ERC20 代币中。</p>\n<p>此外，如同 EIP-2612 permit 消息，permit2 消息也会过期，以限制漏洞的攻击窗口。</p>","isPage":false,"text":"\n\n\n\nAlice 在一个 ERC20 上调用 approve()，为规范的 Permit2 合约授予无限许可。\n\n\nAlice 签署一个链下的 “permit2” 消息，表明协议合约被允许代表她转移代币。\n\n\nAlice 在协议合约上调用交互函数，并将签署的 permit2 消息作为参数传递。\n\n\n协议合约在 Permit2 合约上调用 permitTransferFrom()，后者使用其在步骤 1 中授予的许可调用 ERC20 合约上的 transferFrom()，从而转移 Alice 所持有的代币。\n\n\n可能会觉得要求用户首先授予显式许可是一种退步。然而，与其直接授予协议许可，用户将其授予规范的 Permit2 合约。这意味着如果用户之前已经为某个集成 Permit2 的协议这样做过，那么每个其他协议都可以跳过这一步。\n协议将调用规范 Permit2 合约的 permitTransferFrom() 而不是直接调用 ERC20 代币的 transferFrom() 以执行转账。Permit2 位于协议和 ERC20 代币之间，跟踪和验证 permit2 消息，然后最终使用其授予的许可直接在 ERC20 上执行 transferFrom() 调用。这样的间接方式使 Permit2 能够将 EIP-2612 类的好处扩展到每个现有的 ERC20 代币中。\n此外，如同 EIP-2612 permit 消息，permit2 消息也会过期，以限制漏洞的攻击窗口。","title":"流程","titles":[]},"112":{"href":"/contracts/stableswap/overview#稳定交换","html":"</header>\n","isPage":true,"text":"\n","title":"稳定交换","titles":[]},"113":{"href":"/contracts/stableswap/overview#合约信息","html":"\n","isPage":false,"text":"\n","title":"合约信息","titles":["稳定交换"]},"114":{"href":"/contracts/stableswap/overview#binance-智能链","html":"\n<p>Stableswap Factory 合约地址: <code>0x36bBb126e75351C0DfB651e39b38fe0BC436FFD2</code></p>\n<p>查看 <a href=\"https://bscscan.com/address/0x36bBb126e75351C0DfB651e39b38fe0BC436FFD2\">PancakeSwap: Stableswap Factory 合约在 BscScan 上</a></p>\n","isPage":false,"text":"\nStableswap Factory 合约地址: 0x36bBb126e75351C0DfB651e39b38fe0BC436FFD2\n查看 PancakeSwap: Stableswap Factory 合约在 BscScan 上\n","title":"Binance 智能链","titles":["稳定交换","合约信息"]},"115":{"href":"/contracts/stableswap/overview#智能路由","html":"\n<p>合约地址: <code>0xC6665d98Efd81f47B03801187eB46cbC63F328B0</code></p>\n<p>查看 <a href=\"https://bscscan.com/address/0xc6665d98efd81f47b03801187eb46cbc63f328b0\">PancakeSwap: Smart Router 合约在 BscScan 上</a></p>","isPage":false,"text":"\n合约地址: 0xC6665d98Efd81f47B03801187eB46cbC63F328B0\n查看 PancakeSwap: Smart Router 合约在 BscScan 上","title":"智能路由","titles":["稳定交换","合约信息"]},"116":{"href":"/contracts/stableswap/stableswap-pools#稳定币交换池","html":"</header>\n<p>当前稳定币交换的 LP 地址和代币如下：</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">    pid</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">135</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">    lpSymbol</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">&#x27;USDT-USDC</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\"> LP&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// LP 代币符号</span></span>\n<span class=\"line\"><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">    lpAddress</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">&#x27;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">xee</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">bcc</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">9</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">F</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1692E81</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">A</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">281</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">b</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">3</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">a</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">302</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">a</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">4</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">b</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">67890</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">BA</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">4</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">be</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">76</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// LP 地址</span></span>\n<span class=\"line\"><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">    token</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">bscTokens.usdt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// 代币</span></span>\n<span class=\"line\"><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">    quoteToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">bscTokens.usdc</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// 计价代币</span></span>\n<span class=\"line\"><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">    stableSwapAddress</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">&#x27;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">x</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">3</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">EFebC</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">418</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">efB</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">585248</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">A</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">D</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">2140</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">cfb</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">87</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">aFcc</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">2</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">C</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">63</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">DD&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// 稳定币交换地址</span></span>\n<span class=\"line\"><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">    infoStableSwapAddress</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">&#x27;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">xa</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">680</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">d</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">27</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">f</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">63</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">Fa</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">5E213</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">C</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">502</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">d</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">B</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">3</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">Ca</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">EB</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">6</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">a</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">3</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">C</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">b</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">31</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">D</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">6</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// 稳定币交换信息地址</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  {</span></span>\n<span class=\"line\"><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">    pid</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">134</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">    lpSymbol</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">&#x27;USDC-BUSD</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\"> LP&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">    lpAddress</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">&#x27;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">x</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">A</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">77</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">C</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">359</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">D</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0019</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">cD</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">8</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">F</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">4</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">d</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">36</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">b</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">7</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">CDf</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">5</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">a</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">88043</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">D</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">801072</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">    token</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">bscTokens.usdc</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">    quoteToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">bscTokens.busd</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">    stableSwapAddress</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">&#x27;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">xc</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">2</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">F</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">5</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">B</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">9</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">a</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">3</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">d</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">9138</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">ab</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">2</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">B</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">74</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">d</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">581</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">fC</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">11346219</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">eBf</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">43</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">Fe&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">    infoStableSwapAddress</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">&#x27;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">xa</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">680</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">d</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">27</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">f</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">63</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">Fa</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">5E213</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">C</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">502</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">d</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">B</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">3</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">Ca</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">EB</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">6</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">a</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">3</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">C</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">b</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">31</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">D</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">6</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  {</span></span>\n<span class=\"line\"><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">    pid</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">133</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">    lpSymbol</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">&#x27;USDT-BUSD</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\"> LP&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">    lpAddress</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">&#x27;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">x</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">36842</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">F</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">8</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">fb</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">99</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">D</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">55477</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">C</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">Da</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">638</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">aF</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">5</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">ceb</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">6</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">bBf</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">86</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">aA</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">98</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">    token</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">bscTokens.usdt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">    quoteToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">bscTokens.busd</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">    stableSwapAddress</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">&#x27;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">x</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">169</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">F</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">653</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">A</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">54</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">ACD</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">441</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">aB</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">34</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">B</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">73</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">dA</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">9946e2</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">C</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">451787</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">EF&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">    infoStableSwapAddress</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">&#x27;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">xa</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">680</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">d</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">27</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">f</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">63</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">Fa</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">5E213</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">C</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">502</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">d</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">B</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">3</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">Ca</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">EB</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">6</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">a</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">3</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">C</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">b</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">31</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">D</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">6</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  },</span></span></code></pre>","isPage":true,"text":"\n当前稳定币交换的 LP 地址和代币如下：\n {\n    pid: 135,\n    lpSymbol: &#x27;USDT-USDC LP&#x27;, // LP 代币符号\n    lpAddress: &#x27;0xee1bcc9F1692E81A281b3a302a4b67890BA4be76&#x27;, // LP 地址\n    token: bscTokens.usdt, // 代币\n    quoteToken: bscTokens.usdc, // 计价代币\n    stableSwapAddress: &#x27;0x3EFebC418efB585248A0D2140cfb87aFcc2C63DD&#x27;, // 稳定币交换地址\n    infoStableSwapAddress: &#x27;0xa680d27f63Fa5E213C502d1B3Ca1EB6a3C1b31D6&#x27;, // 稳定币交换信息地址\n  },\n  {\n    pid: 134,\n    lpSymbol: &#x27;USDC-BUSD LP&#x27;,\n    lpAddress: &#x27;0x1A77C359D0019cD8F4d36b7CDf5a88043D801072&#x27;,\n    token: bscTokens.usdc,\n    quoteToken: bscTokens.busd,\n    stableSwapAddress: &#x27;0xc2F5B9a3d9138ab2B74d581fC11346219eBf43Fe&#x27;,\n    infoStableSwapAddress: &#x27;0xa680d27f63Fa5E213C502d1B3Ca1EB6a3C1b31D6&#x27;,\n  },\n  {\n    pid: 133,\n    lpSymbol: &#x27;USDT-BUSD LP&#x27;,\n    lpAddress: &#x27;0x36842F8fb99D55477C0Da638aF5ceb6bBf86aA98&#x27;,\n    token: bscTokens.usdt,\n    quoteToken: bscTokens.busd,\n    stableSwapAddress: &#x27;0x169F653A54ACD441aB34B73dA9946e2C451787EF&#x27;,\n    infoStableSwapAddress: &#x27;0xa680d27f63Fa5E213C502d1B3Ca1EB6a3C1b31D6&#x27;,\n  },","title":"稳定币交换池","titles":[]},"117":{"href":"/contracts/stableswap/stableswap-router#smart-router","html":"</header>\n<p><strong>Binance smart chain</strong><br/>\n合约地址 <strong>:</strong> 0xC6665d98Efd81f47B03801187eB46cbC63F328B0<br/>\n在 <a href=\"https://bscscan.com/address/0xc6665d98efd81f47b03801187eb46cbc63f328b0\">BscScan 上查看 PancakeSwap: Smart Router 合约</a></p>","isPage":true,"text":"\nBinance smart chain\n合约地址 : 0xC6665d98Efd81f47B03801187eB46cbC63F328B0\n在 BscScan 上查看 PancakeSwap: Smart Router 合约","title":"Smart Router","titles":[]},"118":{"href":"/contracts/masterchef/addresses#masterchef","html":"</header>\n","isPage":true,"text":"\n","title":"MasterChef","titles":[]},"119":{"href":"/contracts/masterchef/addresses#合约信息","html":"\n","isPage":false,"text":"\n","title":"合约信息","titles":["MasterChef"]},"120":{"href":"/contracts/masterchef/addresses#masterchef-1","html":"\n<p>合约地址:<code>0x73feaa1eE314F8c655E354234017bE2193C9E24E</code></p>\n<p>查看 <a href=\"https://bscscan.com/address/0x73feaa1ee314f8c655e354234017be2193c9e24e\">PancakeSwap: 在 BscScan 上的主抵押合约</a>.</p>\n","isPage":false,"text":"\n合约地址:0x73feaa1eE314F8c655E354234017bE2193C9E24E\n查看 PancakeSwap: 在 BscScan 上的主抵押合约.\n","title":"MasterChef","titles":["MasterChef","合约信息"]},"121":{"href":"/contracts/masterchef/addresses#masterchef-v2","html":"\n<p>合约地址: <code>0xa5f8C5Dbd5F286960b9d90548680aE5ebFf07652</code></p>\n<p><a href=\"https://bscscan.com/address/0xa5f8C5Dbd5F286960b9d90548680aE5ebFf07652\">查看 PancakeSwap: 在 BscScan 上的主抵押合约 v2</a></p>\n","isPage":false,"text":"\n合约地址: 0xa5f8C5Dbd5F286960b9d90548680aE5ebFf07652\n查看 PancakeSwap: 在 BscScan 上的主抵押合约 v2\n","title":"MasterChef v2","titles":["MasterChef","合约信息"]},"122":{"href":"/contracts/masterchef/addresses#masterchef-v3","html":"\n<p><a href=\"/contracts/v3/addresses#masterchefv3\">合约地址</a></p>\n","isPage":false,"text":"\n合约地址\n","title":"MasterChef v3","titles":["MasterChef","合约信息"]},"123":{"href":"/contracts/masterchef/addresses#审计报告","html":"\n<p><a href=\"https://github.com/peckshield/publications/tree/master/audit_reports/PeckShield-Audit-Report-PancakeSwap-MasterChefV2-v1.0.pdf\">Pecksheild 的新 MasterChef 安全审计</a></p>\n<p><a href=\"https://github.com/slowmist/Knowledge-Base/blob/master/open-report-V2/smart-contract/SlowMist%20Audit%20Report%20-%20MasterChef%20v2_en-us.pdf\">Slowmist 的新 MasterChef 安全审计</a></p>","isPage":false,"text":"\nPecksheild 的新 MasterChef 安全审计\nSlowmist 的新 MasterChef 安全审计","title":"审计报告","titles":["MasterChef"]},"124":{"href":"/contracts/masterchef/masterchef-v3#masterchef-v3","html":"</header>\n","isPage":true,"text":"\n","title":"MasterChef V3","titles":[]},"125":{"href":"/contracts/masterchef/masterchef-v3#solidity-api","html":"\n<p>MasterChefV3 用于向 PancakeSwapV3 池提供 CAKE 发行。</p>\n","isPage":false,"text":"\nMasterChefV3 用于向 PancakeSwapV3 池提供 CAKE 发行。\n","title":"Solidity API","titles":["MasterChef V3"]},"126":{"href":"/contracts/masterchef/masterchef-v3#poolinfo","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> PoolInfo</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> allocPoint;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  contract</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> IPancakeV3Pool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> v3Pool;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> token0;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> token1;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint24</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fee;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> totalLiquidity;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> totalBoostLiquidity;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nstruct PoolInfo {\n  uint256 allocPoint;\n  contract IPancakeV3Pool v3Pool;\n  address token0;\n  address token1;\n  uint24 fee;\n  uint256 totalLiquidity;\n  uint256 totalBoostLiquidity;\n}\n","title":"PoolInfo","titles":["MasterChef V3","Solidity API"]},"127":{"href":"/contracts/masterchef/masterchef-v3#userpositioninfo","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> UserPositionInfo</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint128</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> liquidity;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint128</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> boostLiquidity;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  int24</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tickLower;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  int24</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tickUpper;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rewardGrowthInside;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> reward;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> user;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> pid;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> boostMultiplier;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nstruct UserPositionInfo {\n  uint128 liquidity;\n  uint128 boostLiquidity;\n  int24 tickLower;\n  int24 tickUpper;\n  uint256 rewardGrowthInside;\n  uint256 reward;\n  address user;\n  uint256 pid;\n  uint256 boostMultiplier;\n}\n","title":"UserPositionInfo","titles":["MasterChef V3","Solidity API"]},"128":{"href":"/contracts/masterchef/masterchef-v3#poollength","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> poolLength</span></span></code></pre>\n","isPage":false,"text":"\nuint256 poolLength\n","title":"poolLength","titles":["MasterChef V3","Solidity API"]},"129":{"href":"/contracts/masterchef/masterchef-v3#poolinfo-1","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">mapping</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> struct MasterChefV3.PoolInfo) poolInfo</span></span></code></pre>\n<p>每个 MCV3 池的信息。</p>\n","isPage":false,"text":"\nmapping(uint256 =&gt; struct MasterChefV3.PoolInfo) poolInfo\n每个 MCV3 池的信息。\n","title":"poolInfo","titles":["MasterChef V3","Solidity API"]},"130":{"href":"/contracts/masterchef/masterchef-v3#userpositioninfos","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">mapping</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> struct MasterChefV3.UserPositionInfo) userPositionInfos</span></span></code></pre>\n<p>userPositionInfos[tokenId] =&gt; UserPositionInfo</p>\n<p><em>tokenId 是唯一的，我们可以通过 tokenId 查询 pid。</em></p>\n","isPage":false,"text":"\nmapping(uint256 =&gt; struct MasterChefV3.UserPositionInfo) userPositionInfos\nuserPositionInfos[tokenId] =&gt; UserPositionInfo\ntokenId 是唯一的，我们可以通过 tokenId 查询 pid。\n","title":"userPositionInfos","titles":["MasterChef V3","Solidity API"]},"131":{"href":"/contracts/masterchef/masterchef-v3#v3poolpid","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">mapping</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =&gt;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> mapping</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =&gt;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> mapping</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint24</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =&gt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">))) v3PoolPid</span></span></code></pre>\n<p>v3PoolPid[token0][token1][fee] =&gt; pid</p>\n","isPage":false,"text":"\nmapping(address =&gt; mapping(address =&gt; mapping(uint24 =&gt; uint256))) v3PoolPid\nv3PoolPid[token0][token1][fee] =&gt; pid\n","title":"v3PoolPid","titles":["MasterChef V3","Solidity API"]},"132":{"href":"/contracts/masterchef/masterchef-v3#v3pooladdresspid","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">mapping</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =&gt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) v3PoolAddressPid</span></span></code></pre>\n<p>v3PoolAddressPid[v3PoolAddress] =&gt; pid</p>\n","isPage":false,"text":"\nmapping(address =&gt; uint256) v3PoolAddressPid\nv3PoolAddressPid[v3PoolAddress] =&gt; pid\n","title":"v3PoolAddressPid","titles":["MasterChef V3","Solidity API"]},"133":{"href":"/contracts/masterchef/masterchef-v3#cake","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">contract</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> IERC20</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> CAKE</span></span></code></pre>\n<p>CAKE 合约地址。</p>\n","isPage":false,"text":"\ncontract IERC20 CAKE\nCAKE 合约地址。\n","title":"CAKE","titles":["MasterChef V3","Solidity API"]},"134":{"href":"/contracts/masterchef/masterchef-v3#weth","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> WETH</span></span></code></pre>\n<p>WETH 合约地址。</p>\n","isPage":false,"text":"\naddress WETH\nWETH 合约地址。\n","title":"WETH","titles":["MasterChef V3","Solidity API"]},"135":{"href":"/contracts/masterchef/masterchef-v3#receiver","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> receiver</span></span></code></pre>\n<p>接收者合约地址。</p>\n","isPage":false,"text":"\naddress receiver\n接收者合约地址。\n","title":"receiver","titles":["MasterChef V3","Solidity API"]},"136":{"href":"/contracts/masterchef/masterchef-v3#nonfungiblepositionmanager","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">contract</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> INonfungiblePositionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> nonfungiblePositionManager</span></span></code></pre>\n","isPage":false,"text":"\ncontract INonfungiblePositionManager nonfungiblePositionManager\n","title":"nonfungiblePositionManager","titles":["MasterChef V3","Solidity API"]},"137":{"href":"/contracts/masterchef/masterchef-v3#lmpooldeployer","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">contract</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ILMPoolDeployer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> LMPoolDeployer</span></span></code></pre>\n<p>流动性挖矿池部署者合约地址。</p>\n","isPage":false,"text":"\ncontract ILMPoolDeployer LMPoolDeployer\n流动性挖矿池部署者合约地址。\n","title":"LMPoolDeployer","titles":["MasterChef V3","Solidity API"]},"138":{"href":"/contracts/masterchef/masterchef-v3#farm_booster","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">contract</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> IFarmBooster</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> FARM_BOOSTER</span></span></code></pre>\n<p>农场加速器合约地址。</p>\n","isPage":false,"text":"\ncontract IFarmBooster FARM_BOOSTER\n农场加速器合约地址。\n","title":"FARM_BOOSTER","titles":["MasterChef V3","Solidity API"]},"139":{"href":"/contracts/masterchef/masterchef-v3#emergency","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> emergency</span></span></code></pre>\n<p>仅用于紧急情况。</p>\n","isPage":false,"text":"\nbool emergency\n仅用于紧急情况。\n","title":"emergency","titles":["MasterChef V3","Solidity API"]},"140":{"href":"/contracts/masterchef/masterchef-v3#totalallocpoint","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> totalAllocPoint</span></span></code></pre>\n<p>总分配点数。必须是所有池的分配点数之和。</p>\n","isPage":false,"text":"\nuint256 totalAllocPoint\n总分配点数。必须是所有池的分配点数之和。\n","title":"totalAllocPoint","titles":["MasterChef V3","Solidity API"]},"141":{"href":"/contracts/masterchef/masterchef-v3#latestperiodnumber","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> latestPeriodNumber</span></span></code></pre>\n","isPage":false,"text":"\nuint256 latestPeriodNumber\n","title":"latestPeriodNumber","titles":["MasterChef V3","Solidity API"]},"142":{"href":"/contracts/masterchef/masterchef-v3#latestperiodstarttime","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> latestPeriodStartTime</span></span></code></pre>\n","isPage":false,"text":"\nuint256 latestPeriodStartTime\n","title":"latestPeriodStartTime","titles":["MasterChef V3","Solidity API"]},"143":{"href":"/contracts/masterchef/masterchef-v3#latestperiodendtime","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> latestPeriodEndTime</span></span></code></pre>\n","isPage":false,"text":"\nuint256 latestPeriodEndTime\n","title":"latestPeriodEndTime","titles":["MasterChef V3","Solidity API"]},"144":{"href":"/contracts/masterchef/masterchef-v3#latestperiodcakepersecond","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> latestPeriodCakePerSecond</span></span></code></pre>\n","isPage":false,"text":"\nuint256 latestPeriodCakePerSecond\n","title":"latestPeriodCakePerSecond","titles":["MasterChef V3","Solidity API"]},"145":{"href":"/contracts/masterchef/masterchef-v3#operatoraddress","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> operatorAddress</span></span></code></pre>\n<p>运营者地址。</p>\n","isPage":false,"text":"\naddress operatorAddress\n运营者地址。\n","title":"operatorAddress","titles":["MasterChef V3","Solidity API"]},"146":{"href":"/contracts/masterchef/masterchef-v3#period_duration","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> PERIOD_DURATION</span></span></code></pre>\n<p>默认的周期时长。</p>\n","isPage":false,"text":"\nuint256 PERIOD_DURATION\n默认的周期时长。\n","title":"PERIOD_DURATION","titles":["MasterChef V3","Solidity API"]},"147":{"href":"/contracts/masterchef/masterchef-v3#max_duration","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> MAX_DURATION</span></span></code></pre>\n","isPage":false,"text":"\nuint256 MAX_DURATION\n","title":"MAX_DURATION","titles":["MasterChef V3","Solidity API"]},"148":{"href":"/contracts/masterchef/masterchef-v3#min_duration","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> MIN_DURATION</span></span></code></pre>\n","isPage":false,"text":"\nuint256 MIN_DURATION\n","title":"MIN_DURATION","titles":["MasterChef V3","Solidity API"]},"149":{"href":"/contracts/masterchef/masterchef-v3#precision","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> PRECISION</span></span></code></pre>\n","isPage":false,"text":"\nuint256 PRECISION\n","title":"PRECISION","titles":["MasterChef V3","Solidity API"]},"150":{"href":"/contracts/masterchef/masterchef-v3#boost_precision","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> BOOST_PRECISION</span></span></code></pre>\n<p>基本的加速因子，未加速用户的加速因子。</p>\n","isPage":false,"text":"\nuint256 BOOST_PRECISION\n基本的加速因子，未加速用户的加速因子。\n","title":"BOOST_PRECISION","titles":["MasterChef V3","Solidity API"]},"151":{"href":"/contracts/masterchef/masterchef-v3#max_boost_precision","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> MAX_BOOST_PRECISION</span></span></code></pre>\n<p>最大加速因子的硬限制，必须大于 BOOST_PRECISION。</p>\n","isPage":false,"text":"\nuint256 MAX_BOOST_PRECISION\n最大加速因子的硬限制，必须大于 BOOST_PRECISION。\n","title":"MAX_BOOST_PRECISION","titles":["MasterChef V3","Solidity API"]},"152":{"href":"/contracts/masterchef/masterchef-v3#q128","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> Q128</span></span></code></pre>\n","isPage":false,"text":"\nuint256 Q128\n","title":"Q128","titles":["MasterChef V3","Solidity API"]},"153":{"href":"/contracts/masterchef/masterchef-v3#max_u256","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> MAX_U256</span></span></code></pre>\n","isPage":false,"text":"\nuint256 MAX_U256\n","title":"MAX_U256","titles":["MasterChef V3","Solidity API"]},"154":{"href":"/contracts/masterchef/masterchef-v3#cakeamountbelongtomc","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> cakeAmountBelongToMC</span></span></code></pre>\n<p>记录属于 MasterChefV3 的 CAKE 数量。</p>\n","isPage":false,"text":"\nuint256 cakeAmountBelongToMC\n记录属于 MasterChefV3 的 CAKE 数量。\n","title":"cakeAmountBelongToMC","titles":["MasterChef V3","Solidity API"]},"155":{"href":"/contracts/masterchef/masterchef-v3#zeroaddress","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ZeroAddress</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span></code></pre>\n","isPage":false,"text":"\nerror ZeroAddress()\n","title":"ZeroAddress","titles":["MasterChef V3","Solidity API"]},"156":{"href":"/contracts/masterchef/masterchef-v3#notowneroroperator","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> NotOwnerOrOperator</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span></code></pre>\n","isPage":false,"text":"\nerror NotOwnerOrOperator()\n","title":"NotOwnerOrOperator","titles":["MasterChef V3","Solidity API"]},"157":{"href":"/contracts/masterchef/masterchef-v3#nobalance","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> NoBalance</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span></code></pre>\n","isPage":false,"text":"\nerror NoBalance()\n","title":"NoBalance","titles":["MasterChef V3","Solidity API"]},"158":{"href":"/contracts/masterchef/masterchef-v3#notpancakenft","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> NotPancakeNFT</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span></code></pre>\n","isPage":false,"text":"\nerror NotPancakeNFT()\n","title":"NotPancakeNFT","titles":["MasterChef V3","Solidity API"]},"159":{"href":"/contracts/masterchef/masterchef-v3#invalidnft","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> InvalidNFT</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span></code></pre>\n","isPage":false,"text":"\nerror InvalidNFT()\n","title":"InvalidNFT","titles":["MasterChef V3","Solidity API"]},"160":{"href":"/contracts/masterchef/masterchef-v3#notowner","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> NotOwner</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span></code></pre>\n","isPage":false,"text":"\nerror NotOwner()\n","title":"NotOwner","titles":["MasterChef V3","Solidity API"]},"161":{"href":"/contracts/masterchef/masterchef-v3#noliquidity","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> NoLiquidity</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span></code></pre>\n","isPage":false,"text":"\nerror NoLiquidity()\n","title":"NoLiquidity","titles":["MasterChef V3","Solidity API"]},"162":{"href":"/contracts/masterchef/masterchef-v3#invalidperiodduration","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> InvalidPeriodDuration</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span></code></pre>\n","isPage":false,"text":"\nerror InvalidPeriodDuration()\n","title":"InvalidPeriodDuration","titles":["MasterChef V3","Solidity API"]},"163":{"href":"/contracts/masterchef/masterchef-v3#nolmpool","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> NoLMPool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span></code></pre>\n","isPage":false,"text":"\nerror NoLMPool()\n","title":"NoLMPool","titles":["MasterChef V3","Solidity API"]},"164":{"href":"/contracts/masterchef/masterchef-v3#invalidpid","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> InvalidPid</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span></code></pre>\n","isPage":false,"text":"\nerror InvalidPid()\n","title":"InvalidPid","titles":["MasterChef V3","Solidity API"]},"165":{"href":"/contracts/masterchef/masterchef-v3#duplicatedpool","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> DuplicatedPool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> pid)</span></span></code></pre>\n","isPage":false,"text":"\nerror DuplicatedPool(uint256 pid)\n","title":"DuplicatedPool","titles":["MasterChef V3","Solidity API"]},"166":{"href":"/contracts/masterchef/masterchef-v3#notempty","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> NotEmpty</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span></code></pre>\n","isPage":false,"text":"\nerror NotEmpty()\n","title":"NotEmpty","titles":["MasterChef V3","Solidity API"]},"167":{"href":"/contracts/masterchef/masterchef-v3#wrongreceiver","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> WrongReceiver</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span></code></pre>\n","isPage":false,"text":"\nerror WrongReceiver()\n","title":"WrongReceiver","titles":["MasterChef V3","Solidity API"]},"168":{"href":"/contracts/masterchef/masterchef-v3#inconsistentamount","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> InconsistentAmount</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span></code></pre>\n","isPage":false,"text":"\nerror InconsistentAmount()\n","title":"InconsistentAmount","titles":["MasterChef V3","Solidity API"]},"169":{"href":"/contracts/masterchef/masterchef-v3#insufficientamount","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> InsufficientAmount</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span></code></pre>\n","isPage":false,"text":"\nerror InsufficientAmount()\n","title":"InsufficientAmount","titles":["MasterChef V3","Solidity API"]},"170":{"href":"/contracts/masterchef/masterchef-v3#init","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">event</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Init</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span></code></pre>\n","isPage":false,"text":"\nevent Init()\n","title":"Init","titles":["MasterChef V3","Solidity API"]},"171":{"href":"/contracts/masterchef/masterchef-v3#addpool","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">event</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> AddPool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> pid</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> allocPoint</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">contract</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> IPancakeV3Pool</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> v3Pool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">contract</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> ILMPool</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> lmPool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nevent AddPool(uint256 pid, uint256 allocPoint, contract IPancakeV3Pool v3Pool, contract ILMPool lmPool)\n","title":"AddPool","titles":["MasterChef V3","Solidity API"]},"172":{"href":"/contracts/masterchef/masterchef-v3#setpool","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">event</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> SetPool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> pid</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> allocPoint</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nevent SetPool(uint256 pid, uint256 allocPoint)\n","title":"SetPool","titles":["MasterChef V3","Solidity API"]},"173":{"href":"/contracts/masterchef/masterchef-v3#deposit","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">event</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Deposit</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> from</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> pid</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> tokenId</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> liquidity</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">int24</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> tickLower</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">int24</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> tickUpper</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nevent Deposit(address from, uint256 pid, uint256 tokenId, uint256 liquidity, int24 tickLower, int24 tickUpper)\n","title":"Deposit","titles":["MasterChef V3","Solidity API"]},"174":{"href":"/contracts/masterchef/masterchef-v3#withdraw","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">event</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Withdraw</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> from</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> to</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> pid</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> tokenId</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nevent Withdraw(address from, address to, uint256 pid, uint256 tokenId)\n","title":"Withdraw","titles":["MasterChef V3","Solidity API"]},"175":{"href":"/contracts/masterchef/masterchef-v3#updateliquidity","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">event</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> UpdateLiquidity</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> from</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> pid</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> tokenId</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">int128</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> liquidity</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">int24</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> tickLower</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">int24</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> tickUpper</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nevent UpdateLiquidity(address from, uint256 pid, uint256 tokenId, int128 liquidity, int24 tickLower, int24 tickUpper)\n","title":"UpdateLiquidity","titles":["MasterChef V3","Solidity API"]},"176":{"href":"/contracts/masterchef/masterchef-v3#newoperatoraddress","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">event</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> NewOperatorAddress</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> operator</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nevent NewOperatorAddress(address operator)\n","title":"NewOperatorAddress","titles":["MasterChef V3","Solidity API"]},"177":{"href":"/contracts/masterchef/masterchef-v3#newlmpooldeployeraddress","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">event</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> NewLMPoolDeployerAddress</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> deployer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nevent NewLMPoolDeployerAddress(address deployer)\n","title":"NewLMPoolDeployerAddress","titles":["MasterChef V3","Solidity API"]},"178":{"href":"/contracts/masterchef/masterchef-v3#newreceiver","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">event</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> NewReceiver</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> receiver</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nevent NewReceiver(address receiver)\n","title":"NewReceiver","titles":["MasterChef V3","Solidity API"]},"179":{"href":"/contracts/masterchef/masterchef-v3#newperiodduration","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">event</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> NewPeriodDuration</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> periodDuration</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nevent NewPeriodDuration(uint256 periodDuration)\n","title":"NewPeriodDuration","titles":["MasterChef V3","Solidity API"]},"180":{"href":"/contracts/masterchef/masterchef-v3#harvest","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">event</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Harvest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> sender</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> to</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> pid</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> tokenId</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> reward</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nevent Harvest(address sender, address to, uint256 pid, uint256 tokenId, uint256 reward)\n","title":"Harvest","titles":["MasterChef V3","Solidity API"]},"181":{"href":"/contracts/masterchef/masterchef-v3#newupkeepperiod","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">event</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> NewUpkeepPeriod</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> periodNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> startTime</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> endTime</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> cakePerSecond</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> cakeAmount</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nevent NewUpkeepPeriod(uint256 periodNumber, uint256 startTime, uint256 endTime, uint256 cakePerSecond, uint256 cakeAmount)\n","title":"NewUpkeepPeriod","titles":["MasterChef V3","Solidity API"]},"182":{"href":"/contracts/masterchef/masterchef-v3#updateupkeepperiod","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">event</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> UpdateUpkeepPeriod</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> periodNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> oldEndTime</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> newEndTime</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> remainingCake</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nevent UpdateUpkeepPeriod(uint256 periodNumber, uint256 oldEndTime, uint256 newEndTime, uint256 remainingCake)\n","title":"UpdateUpkeepPeriod","titles":["MasterChef V3","Solidity API"]},"183":{"href":"/contracts/masterchef/masterchef-v3#updatefarmboostcontract","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">event</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> UpdateFarmBoostContract</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> farmBoostContract</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nevent UpdateFarmBoostContract(address farmBoostContract)\n","title":"UpdateFarmBoostContract","titles":["MasterChef V3","Solidity API"]},"184":{"href":"/contracts/masterchef/masterchef-v3#setemergency","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">event</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> SetEmergency</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">bool</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> emergency</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nevent SetEmergency(bool emergency)\n","title":"SetEmergency","titles":["MasterChef V3","Solidity API"]},"185":{"href":"/contracts/masterchef/masterchef-v3#onlyowneroroperator","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">modifier</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> onlyOwnerOrOperator</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span></code></pre>\n","isPage":false,"text":"\nmodifier onlyOwnerOrOperator()\n","title":"onlyOwnerOrOperator","titles":["MasterChef V3","Solidity API"]},"186":{"href":"/contracts/masterchef/masterchef-v3#onlyvalidpid","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">modifier</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> onlyValidPid</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _pid)</span></span></code></pre>\n","isPage":false,"text":"\nmodifier onlyValidPid(uint256 _pid)\n","title":"onlyValidPid","titles":["MasterChef V3","Solidity API"]},"187":{"href":"/contracts/masterchef/masterchef-v3#onlyreceiver","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">modifier</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> onlyReceiver</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span></code></pre>\n","isPage":false,"text":"\nmodifier onlyReceiver()\n","title":"onlyReceiver","titles":["MasterChef V3","Solidity API"]},"188":{"href":"/contracts/masterchef/masterchef-v3#onlyboostcontract","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">modifier</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> onlyBoostContract</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span></code></pre>\n<p><em>调用方不是加速合约时抛出。</em></p>\n","isPage":false,"text":"\nmodifier onlyBoostContract()\n调用方不是加速合约时抛出。\n","title":"onlyBoostContract","titles":["MasterChef V3","Solidity API"]},"189":{"href":"/contracts/masterchef/masterchef-v3#constructor","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">constructor</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">contract</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> IERC20</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _CAKE, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">contract</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> INonfungiblePositionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _nonfungiblePositionManager, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _WETH) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">public</span></span></code></pre>\n<strong>参数</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>_CAKE</td><td>contract IERC20</td><td>CAKE 代币合约地址</td></tr><tr><td>_nonfungiblePositionManager</td><td>contract INonfungiblePositionManager</td><td>NFT 头寸管理器合约地址</td></tr><tr><td>_WETH</td><td>address</td><td></td></tr></tbody></table>\n","isPage":false,"text":"\nconstructor(contract IERC20 _CAKE, contract INonfungiblePositionManager _nonfungiblePositionManager, address _WETH) public\n参数\n名称类型描述_CAKEcontract IERC20CAKE 代币合约地址_nonfungiblePositionManagercontract INonfungiblePositionManagerNFT 头寸管理器合约地址_WETHaddress\n","title":"constructor","titles":["MasterChef V3","Solidity API"]},"190":{"href":"/contracts/masterchef/masterchef-v3#getlatestperiodinfobypid","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getLatestPeriodInfoByPid</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _pid) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">public</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> view</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> cakePerSecond</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> endTime</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<p>返回每秒的 cake 数量，周期结束时间。</p>\n<strong>参数</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>_pid</td><td>uint256</td><td>池的 pid。</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction getLatestPeriodInfoByPid(uint256 _pid) public view returns (uint256 cakePerSecond, uint256 endTime)\n返回每秒的 cake 数量，周期结束时间。\n参数\n名称类型描述_piduint256池的 pid。\n","title":"getLatestPeriodInfoByPid","titles":["MasterChef V3","Solidity API"]},"191":{"href":"/contracts/masterchef/masterchef-v3#getlatestperiodinfo","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getLatestPeriodInfo</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _v3Pool) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">public</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> view</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> cakePerSecond</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> endTime</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<p>返回每秒的 cake 数量，周期结束时间。适用于流动性挖矿池。</p>\n<strong>参数</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>_v3Pool</td><td>address</td><td>V3 池的地址。</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction getLatestPeriodInfo(address _v3Pool) public view returns (uint256 cakePerSecond, uint256 endTime)\n返回每秒的 cake 数量，周期结束时间。适用于流动性挖矿池。\n参数\n名称类型描述_v3PooladdressV3 池的地址。\n","title":"getLatestPeriodInfo","titles":["MasterChef V3","Solidity API"]},"192":{"href":"/contracts/masterchef/masterchef-v3#pendingcake","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> pendingCake</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _tokenId) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> view</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> reward</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<p>查看待领取的 CAKE 奖励。</p>\n<p><em>待领取的 cake 数量基于 LMPool 的最后状态。实际数量将在流动性变化或收获时发生。</em></p>\n<strong>参数</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>_tokenId</td><td>uint256</td><td>NFT 的 Token Id。</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction pendingCake(uint256 _tokenId) external view returns (uint256 reward)\n查看待领取的 CAKE 奖励。\n待领取的 cake 数量基于 LMPool 的最后状态。实际数量将在流动性变化或收获时发生。\n参数\n名称类型描述_tokenIduint256NFT 的 Token Id。\n","title":"pendingCake","titles":["MasterChef V3","Solidity API"]},"193":{"href":"/contracts/masterchef/masterchef-v3#setemergency-1","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> setEmergency</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _emergency) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span></span></code></pre>\n<p>仅用于紧急情况。</p>\n","isPage":false,"text":"\nfunction setEmergency(bool _emergency) external\n仅用于紧急情况。\n","title":"setEmergency","titles":["MasterChef V3","Solidity API"]},"194":{"href":"/contracts/masterchef/masterchef-v3#setreceiver","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> setReceiver</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _receiver) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span></span></code></pre>\n","isPage":false,"text":"\nfunction setReceiver(address _receiver) external\n","title":"setReceiver","titles":["MasterChef V3","Solidity API"]},"195":{"href":"/contracts/masterchef/masterchef-v3#setlmpooldeployer","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> setLMPoolDeployer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">contract</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> ILMPoolDeployer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _LMPoolDeployer) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span></span></code></pre>\n","isPage":false,"text":"\nfunction setLMPoolDeployer(contract ILMPoolDeployer _LMPoolDeployer) external\n","title":"setLMPoolDeployer","titles":["MasterChef V3","Solidity API"]},"196":{"href":"/contracts/masterchef/masterchef-v3#add","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> add</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _allocPoint, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">contract</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> IPancakeV3Pool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _v3Pool, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _withUpdate) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span></span></code></pre>\n<p>添加一个新的池。仅允许所有者调用。一个 v3 池只能创建一个池。</p>\n<strong>参数</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>_allocPoint</td><td>uint256</td><td>新池的分配点数</td></tr><tr><td>_v3Pool</td><td>contract IPancakeV3Pool</td><td>V3 池的地址。</td></tr><tr><td>_withUpdate</td><td>bool</td><td>是否调用 “massUpdatePools” 操作。</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction add(uint256 _allocPoint, contract IPancakeV3Pool _v3Pool, bool _withUpdate) external\n添加一个新的池。仅允许所有者调用。一个 v3 池只能创建一个池。\n参数\n名称类型描述_allocPointuint256新池的分配点数_v3Poolcontract IPancakeV3PoolV3 池的地址。_withUpdatebool是否调用 “massUpdatePools” 操作。\n","title":"add","titles":["MasterChef V3","Solidity API"]},"197":{"href":"/contracts/masterchef/masterchef-v3#set","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> set</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _pid, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _allocPoint, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _withUpdate) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span></span></code></pre>\n<p>更新指定池的 CAKE 分配点数。只能由所有者调用。</p>\n<strong>参数</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>_pid</td><td>uint256</td><td>池的 id。见 <code>poolInfo</code>。</td></tr><tr><td>_allocPoint</td><td>uint256</td><td>池的新分配点数</td></tr><tr><td>_withUpdate</td><td>bool</td><td>是否调用 “massUpdatePools” 操作。</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction set(uint256 _pid, uint256 _allocPoint, bool _withUpdate) external\n更新指定池的 CAKE 分配点数。只能由所有者调用。\n参数\n名称类型描述_piduint256池的 id。见 poolInfo。_allocPointuint256池的新分配点数_withUpdatebool是否调用 “massUpdatePools” 操作。\n","title":"set","titles":["MasterChef V3","Solidity API"]},"198":{"href":"/contracts/masterchef/masterchef-v3#depositcache","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> DepositCache</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> token0;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> token1;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint24</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fee;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  int24</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tickLower;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  int24</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tickUpper;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint128</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> liquidity;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nstruct DepositCache {\n  address token0;\n  address token1;\n  uint24 fee;\n  int24 tickLower;\n  int24 tickUpper;\n  uint128 liquidity;\n}\n","title":"DepositCache","titles":["MasterChef V3","Solidity API"]},"199":{"href":"/contracts/masterchef/masterchef-v3#onerc721received","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> onERC721Received</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _from, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _tokenId, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">bytes</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">bytes4</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<p>接收到 ERC721 时</p>\n","isPage":false,"text":"\nfunction onERC721Received(address, address _from, uint256 _tokenId, bytes) external returns (bytes4)\n接收到 ERC721 时\n","title":"onERC721Received","titles":["MasterChef V3","Solidity API"]},"200":{"href":"/contracts/masterchef/masterchef-v3#harvest-1","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> harvest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _tokenId, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _to) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> reward</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<p>从池中收获 CAKE。</p>\n<strong>参数</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>_tokenId</td><td>uint256</td><td>NFT 的 Token Id。</td></tr><tr><td>_to</td><td>address</td><td>接收地址。</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction harvest(uint256 _tokenId, address _to) external returns (uint256 reward)\n从池中收获 CAKE。\n参数\n名称类型描述_tokenIduint256NFT 的 Token Id。_toaddress接收地址。\n","title":"harvest","titles":["MasterChef V3","Solidity API"]},"201":{"href":"/contracts/masterchef/masterchef-v3#harvestoperation","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> harvestOperation</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">struct</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> MasterChefV3</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">UserPositionInfo</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> positionInfo</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _tokenId, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _to) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">internal</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> reward</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nfunction harvestOperation(struct MasterChefV3.UserPositionInfo positionInfo, uint256 _tokenId, address _to) internal returns (uint256 reward)\n","title":"harvestOperation","titles":["MasterChef V3","Solidity API"]},"202":{"href":"/contracts/masterchef/masterchef-v3#withdraw-1","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> withdraw</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _tokenId, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _to) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> reward</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<p>从池中提取 LP 代币。</p>\n<strong>参数</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>_tokenId</td><td>uint256</td><td>要存入的 NFT 的 Token Id。</td></tr><tr><td>_to</td><td>address</td><td>提取 NFT 代币的接收地址。</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction withdraw(uint256 _tokenId, address _to) external returns (uint256 reward)\n从池中提取 LP 代币。\n参数\n名称类型描述_tokenIduint256要存入的 NFT 的 Token Id。_toaddress提取 NFT 代币的接收地址。\n","title":"withdraw","titles":["MasterChef V3","Solidity API"]},"203":{"href":"/contracts/masterchef/masterchef-v3#updateliquidity-1","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> updateLiquidity</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _tokenId) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span></span></code></pre>\n<p>更新 NFT 头寸的流动性。</p>\n<strong>参数</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>_tokenId</td><td>uint256</td><td>要更新的 NFT 的 Token Id。</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction updateLiquidity(uint256 _tokenId) external\n更新 NFT 头寸的流动性。\n参数\n名称类型描述_tokenIduint256要更新的 NFT 的 Token Id。\n","title":"updateLiquidity","titles":["MasterChef V3","Solidity API"]},"204":{"href":"/contracts/masterchef/masterchef-v3#updateboostmultiplier","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> updateBoostMultiplier</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _tokenId, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _newMultiplier) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span></span></code></pre>\n<p>更新 NFT 头寸的农场加速倍数。</p>\n<strong>参数</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>_tokenId</td><td>uint256</td><td>要更新的 NFT 的 Token Id。</td></tr><tr><td>_newMultiplier</td><td>uint256</td><td>新的加速倍数。</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction updateBoostMultiplier(uint256 _tokenId, uint256 _newMultiplier) external\n更新 NFT 头寸的农场加速倍数。\n参数\n名称类型描述_tokenIduint256要更新的 NFT 的 Token Id。_newMultiplieruint256新的加速倍数。\n","title":"updateBoostMultiplier","titles":["MasterChef V3","Solidity API"]},"205":{"href":"/contracts/masterchef/masterchef-v3#updateliquidityoperation","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> updateLiquidityOperation</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">struct</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> MasterChefV3</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">UserPositionInfo</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> positionInfo</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _tokenId, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _newMultiplier) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">internal</span></span></code></pre>\n","isPage":false,"text":"\nfunction updateLiquidityOperation(struct MasterChefV3.UserPositionInfo positionInfo, uint256 _tokenId, uint256 _newMultiplier) internal\n","title":"updateLiquidityOperation","titles":["MasterChef V3","Solidity API"]},"206":{"href":"/contracts/masterchef/masterchef-v3#increaseliquidity","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> increaseLiquidity</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">struct</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> INonfungiblePositionManagerStruct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">IncreaseLiquidityParams</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> params</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> payable</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint128</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> liquidity</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amount0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amount1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<p>增加头寸中的流动性，代币由 <code>msg.sender</code> 支付。</p>\n<strong>参数</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>params</td><td>struct INonfungiblePositionManagerStruct.IncreaseLiquidityParams</td><td>tokenId 液增加流动性的 Token 的 ID，amount0Desired 花费的 token0 的期望数量，amount1Desired 花费的 token1 的期望数量，amount0Min 花费的 token0 的最小数量，作为滑点检查，amount1Min 花费的 token1 的最小数量，作为滑点检查，deadline 交易必须包含以生效的时间截止日期</td></tr></tbody></table>\n<strong>返回值</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>liquidity</td><td>uint128</td><td>增加后的流动性数量</td></tr><tr><td>amount0</td><td>uint256</td><td>获取增加后的流动性所需的 token0 数量</td></tr><tr><td>amount1</td><td>uint256</td><td>获取增加后的流动性所需的 token1 数量</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction increaseLiquidity(struct INonfungiblePositionManagerStruct.IncreaseLiquidityParams params) external payable returns (uint128 liquidity, uint256 amount0, uint256 amount1)\n增加头寸中的流动性，代币由 msg.sender 支付。\n参数\n名称类型描述paramsstruct INonfungiblePositionManagerStruct.IncreaseLiquidityParamstokenId 液增加流动性的 Token 的 ID，amount0Desired 花费的 token0 的期望数量，amount1Desired 花费的 token1 的期望数量，amount0Min 花费的 token0 的最小数量，作为滑点检查，amount1Min 花费的 token1 的最小数量，作为滑点检查，deadline 交易必须包含以生效的时间截止日期\n返回值\n名称类型描述liquidityuint128增加后的流动性数量amount0uint256获取增加后的流动性所需的 token0 数量amount1uint256获取增加后的流动性所需的 token1 数量\n","title":"increaseLiquidity","titles":["MasterChef V3","Solidity API"]},"207":{"href":"/contracts/masterchef/masterchef-v3#pay","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> pay</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _token, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _amount) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">internal</span></span></code></pre>\n<p>支付。</p>\n<strong>参数</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>_token</td><td>address</td><td>要支付的代币</td></tr><tr><td>_amount</td><td>uint256</td><td>要支付的数量</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction pay(address _token, uint256 _amount) internal\n支付。\n参数\n名称类型描述_tokenaddress要支付的代币_amountuint256要支付的数量\n","title":"pay","titles":["MasterChef V3","Solidity API"]},"208":{"href":"/contracts/masterchef/masterchef-v3#refund","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> refund</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _token, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _amount) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">internal</span></span></code></pre>\n<p>退款。</p>\n<strong>参数</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>_token</td><td>address</td><td>要退款的代币</td></tr><tr><td>_amount</td><td>uint256</td><td>要退款的数量</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction refund(address _token, uint256 _amount) internal\n退款。\n参数\n名称类型描述_tokenaddress要退款的代币_amountuint256要退款的数量\n","title":"refund","titles":["MasterChef V3","Solidity API"]},"209":{"href":"/contracts/masterchef/masterchef-v3#decreaseliquidity","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> decreaseLiquidity</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">struct</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> INonfungiblePositionManagerStruct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">DecreaseLiquidityParams</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> params</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amount0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amount1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<p>减少头寸中的流动性，并将其计入该头寸。</p>\n<strong>参数</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>params</td><td>struct INonfungiblePositionManagerStruct.DecreaseLiquidityParams</td><td>tokenId 流动性减少的 Token 的 ID，amount 将减少的流动性数量，amount0Min 为烧毁的流动性账户最小数量的 token0，amount1Min 为烧毁的流动性账户最小数量的 token1，deadline 交易必须包含以生效的时间截止日期。</td></tr></tbody></table>\n<strong>返回值</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>amount0</td><td>uint256</td><td>计入该头寸应得的 token0 数量</td></tr><tr><td>amount1</td><td>uint256</td><td>计入该头寸应得的 token1 数量</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction decreaseLiquidity(struct INonfungiblePositionManagerStruct.DecreaseLiquidityParams params) external returns (uint256 amount0, uint256 amount1)\n减少头寸中的流动性，并将其计入该头寸。\n参数\n名称类型描述paramsstruct INonfungiblePositionManagerStruct.DecreaseLiquidityParamstokenId 流动性减少的 Token 的 ID，amount 将减少的流动性数量，amount0Min 为烧毁的流动性账户最小数量的 token0，amount1Min 为烧毁的流动性账户最小数量的 token1，deadline 交易必须包含以生效的时间截止日期。\n返回值\n名称类型描述amount0uint256计入该头寸应得的 token0 数量amount1uint256计入该头寸应得的 token1 数量\n","title":"decreaseLiquidity","titles":["MasterChef V3","Solidity API"]},"210":{"href":"/contracts/masterchef/masterchef-v3#collect","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> collect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">struct</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> INonfungiblePositionManagerStruct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">CollectParams</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> params</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amount0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amount1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<p>收集指定头寸中最多的费用到接收者。</p>\n<p><em>警告!!! 请确保在设置接收者地址为(0)时使用 multicall 调用 unwrapWETH9 或 sweepToken，否则你将丢失资金。amount0Max 收集的 token0 的最大数量，amount1Max 收集的 token1 的最大数量</em></p>\n<strong>参数</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>params</td><td>struct INonfungiblePositionManagerStruct.CollectParams</td><td>tokenId 正在收集的 NFT 的 ID，recipient 应接收代币的账户</td></tr></tbody></table>\n<strong>返回值</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>amount0</td><td>uint256</td><td>收集的 token0 的费用数量</td></tr><tr><td>amount1</td><td>uint256</td><td>收集的 token1 的费用数量</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction collect(struct INonfungiblePositionManagerStruct.CollectParams params) external returns (uint256 amount0, uint256 amount1)\n收集指定头寸中最多的费用到接收者。\n警告!!! 请确保在设置接收者地址为(0)时使用 multicall 调用 unwrapWETH9 或 sweepToken，否则你将丢失资金。amount0Max 收集的 token0 的最大数量，amount1Max 收集的 token1 的最大数量\n参数\n名称类型描述paramsstruct INonfungiblePositionManagerStruct.CollectParamstokenId 正在收集的 NFT 的 ID，recipient 应接收代币的账户\n返回值\n名称类型描述amount0uint256收集的 token0 的费用数量amount1uint256收集的 token1 的费用数量\n","title":"collect","titles":["MasterChef V3","Solidity API"]},"211":{"href":"/contracts/masterchef/masterchef-v3#collectto","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> collectTo</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">struct</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> INonfungiblePositionManagerStruct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">CollectParams</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> params</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> to</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amount0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amount1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<p>收集费用和退款。</p>\n","isPage":false,"text":"\nfunction collectTo(struct INonfungiblePositionManagerStruct.CollectParams params, address to) external returns (uint256 amount0, uint256 amount1)\n收集费用和退款。\n","title":"collectTo","titles":["MasterChef V3","Solidity API"]},"212":{"href":"/contracts/masterchef/masterchef-v3#transfertoken","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> transferToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _token, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _to) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">internal</span></span></code></pre>\n<p>从 MasterChef V3 转移 token。</p>\n<strong>参数</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>_token</td><td>address</td><td>要转移的代币。</td></tr><tr><td>_to</td><td>address</td><td>接收地址。</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction transferToken(address _token, address _to) internal\n从 MasterChef V3 转移 token。\n参数\n名称类型描述_tokenaddress要转移的代币。_toaddress接收地址。\n","title":"transferToken","titles":["MasterChef V3","Solidity API"]},"213":{"href":"/contracts/masterchef/masterchef-v3#unwrapweth9","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> unwrapWETH9</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountMinimum</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> recipient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span></span></code></pre>\n<p>将合约中的 WETH9 解包并作为 ETH 发送给接收者。</p>\n<p><em>amountMinimum 参数防止恶意合约窃取用户的 WETH9。</em></p>\n<strong>参数</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>amountMinimum</td><td>uint256</td><td>要解包的 WETH9 最小数量</td></tr><tr><td>recipient</td><td>address</td><td>接收 ETH 的地址</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction unwrapWETH9(uint256 amountMinimum, address recipient) external\n将合约中的 WETH9 解包并作为 ETH 发送给接收者。\namountMinimum 参数防止恶意合约窃取用户的 WETH9。\n参数\n名称类型描述amountMinimumuint256要解包的 WETH9 最小数量recipientaddress接收 ETH 的地址\n","title":"unwrapWETH9","titles":["MasterChef V3","Solidity API"]},"214":{"href":"/contracts/masterchef/masterchef-v3#sweeptoken","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> sweepToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> token</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountMinimum</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> recipient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span></span></code></pre>","isPage":false,"text":"\nfunction sweepToken(address token, uint256 amountMinimum, address recipient) external","title":"sweepToken","titles":["MasterChef V3","Solidity API"]},"215":{"href":"/contracts/syrup-pools/index#syrup-池","html":"</header>\n","isPage":true,"text":"\n","title":"Syrup 池","titles":[]},"216":{"href":"/contracts/syrup-pools/index#合约信息","html":"\n<p>每个 Syrup 池都有其自己的智能合约。你可以在 <a href=\"https://pancakeswap.finance/pools\">Syrup Pools</a> 页面下，找到每个池子的 UI 下的 BscScan 链接来获取合约地址。</p>\n<p>另外，你也可以通过其部署者来追踪每个 Syrup 池。</p>\n","isPage":false,"text":"\n每个 Syrup 池都有其自己的智能合约。你可以在 Syrup Pools 页面下，找到每个池子的 UI 下的 BscScan 链接来获取合约地址。\n另外，你也可以通过其部署者来追踪每个 Syrup 池。\n","title":"合约信息","titles":["Syrup 池"]},"217":{"href":"/contracts/syrup-pools/index#syrup-池部署者","html":"\n<p>最新的: </p>\n<ul>\n<li><a href=\"https://bscscan.com/address/0xFfF5812C35eC100dF51D5C9842e8cC3fe60f9ad7#events\">0xFfF5812C35eC100dF51D5C9842e8cC3fe60f9ad7</a></li>\n</ul>\n<p>之前使用的:</p>\n<ul>\n<li>0x927158Be21Fe3D4da7E96931bb27Fd5059A8CbC2</li>\n<li>0xe2aECF96D23575b11624d0891C0828E767c8cb8B </li>\n</ul>","isPage":false,"text":"\n最新的: \n\n0xFfF5812C35eC100dF51D5C9842e8cC3fe60f9ad7\n\n之前使用的:\n\n0x927158Be21Fe3D4da7E96931bb27Fd5059A8CbC2\n0xe2aECF96D23575b11624d0891C0828E767c8cb8B \n","title":"Syrup 池部署者","titles":["Syrup 池","合约信息",null]},"218":{"href":"/contracts/syrup-pools/pooldeployer#pooldeployer","html":"</header>","isPage":true,"text":"","title":"PoolDeployer","titles":[]},"219":{"href":"/contracts/syrup-pools/smartchefinitializable#smartchefinitializable","html":"</header>\n","isPage":true,"text":"\n","title":"SmartChefInitializable","titles":[]},"220":{"href":"/contracts/syrup-pools/smartchefinitializable#合约角色","html":"\n<table><thead><tr><th>角色</th><th>描述</th></tr></thead><tbody><tr><td>合约拥有者 (onlyOwner)</td><td>合约的拥有者</td></tr></tbody></table>\n","isPage":false,"text":"\n角色描述合约拥有者 (onlyOwner)合约的拥有者\n","title":"合约角色","titles":["SmartChefInitializable"]},"221":{"href":"/contracts/syrup-pools/smartchefinitializable#合约拥有者","html":"\n<p>地址因池子不同而可能不同，但通常是 <code>0xad9d97fc7bf0ac6dc68d478dcb3709454519b358</code></p>\n<p>这个地址由阈值 3/6 的 Gnosis 多签合约控制</p>\n","isPage":false,"text":"\n地址因池子不同而可能不同，但通常是 0xad9d97fc7bf0ac6dc68d478dcb3709454519b358\n这个地址由阈值 3/6 的 Gnosis 多签合约控制\n","title":"合约拥有者","titles":["SmartChefInitializable","合约角色"]},"222":{"href":"/contracts/syrup-pools/smartchefinitializable#函数","html":"\n","isPage":false,"text":"\n","title":"函数","titles":["SmartChefInitializable"]},"223":{"href":"/contracts/syrup-pools/smartchefinitializable#emergencyrewardwithdraw---合约拥有者","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> emergencyRewardWithdraw</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> _amount</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">external</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> onlyOwner</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        rewardToken.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">safeTransfer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(msg.sender), _amount);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span></code></pre>\n<p>在紧急情况下，<strong>合约拥有者</strong>可以从池子合约中提取奖励。</p>\n","isPage":false,"text":"\n    function emergencyRewardWithdraw(uint256 _amount) external onlyOwner {\n        rewardToken.safeTransfer(address(msg.sender), _amount);\n    }\n在紧急情况下，合约拥有者可以从池子合约中提取奖励。\n","title":"emergencyRewardWithdraw - 合约拥有者","titles":["SmartChefInitializable","函数"]},"224":{"href":"/contracts/syrup-pools/smartchefinitializable#recoverwrongtokens---合约拥有者","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\"> function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> recoverWrongTokens</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> _tokenAddress</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> _tokenAmount</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">external</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> onlyOwner</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        require</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(_tokenAddress </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(stakedToken), </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Cannot be staked token&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        require</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(_tokenAddress </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(rewardToken), </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Cannot be reward token&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        IBEP20</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(_tokenAddress).</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">safeTransfer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(msg.sender), _tokenAmount);</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        emit </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AdminTokenRecovery</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(_tokenAddress, _tokenAmount)</span></span></code></pre>\n<p><strong>合约拥有者</strong>可以使用该函数回收误发送到合约中的非 <code>stakedToken</code> 和 <code>rewardToken</code> 代币。</p>\n","isPage":false,"text":"\n function recoverWrongTokens(address _tokenAddress, uint256 _tokenAmount) external onlyOwner {\n        require(_tokenAddress != address(stakedToken), &quot;Cannot be staked token&quot;);\n        require(_tokenAddress != address(rewardToken), &quot;Cannot be reward token&quot;);\n \n        IBEP20(_tokenAddress).safeTransfer(address(msg.sender), _tokenAmount);\n \n        emit AdminTokenRecovery(_tokenAddress, _tokenAmount)\n合约拥有者可以使用该函数回收误发送到合约中的非 stakedToken 和 rewardToken 代币。\n","title":"recoverWrongTokens - 合约拥有者","titles":["SmartChefInitializable","函数"]},"225":{"href":"/contracts/syrup-pools/smartchefinitializable#stoprewards---合约拥有者","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> stopReward</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">external</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> onlyOwner</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        bonusEndBlock </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> block.number;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span></code></pre>\n<p>如果需要在奖励分发结束前停止奖励分发，<strong>合约拥有者</strong>可以调用此函数。</p>\n","isPage":false,"text":"\n    function stopReward() external onlyOwner {\n        bonusEndBlock = block.number;\n    }\n如果需要在奖励分发结束前停止奖励分发，合约拥有者可以调用此函数。\n","title":"stopRewards - 合约拥有者","titles":["SmartChefInitializable","函数"]},"226":{"href":"/contracts/syrup-pools/smartchefinitializable#updatepoollimitperuser---合约拥有者","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> updatePoolLimitPerUser</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">bool</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> _hasUserLimit</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> _poolLimitPerUser</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">external</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> onlyOwner</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        require</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(hasUserLimit, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Must be set&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (_hasUserLimit) {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">            require</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(_poolLimitPerUser </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> poolLimitPerUser, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;New limit must be higher&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            poolLimitPerUser </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _poolLimitPerUser;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">else</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            hasUserLimit </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _hasUserLimit;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            poolLimitPerUser </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        emit </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewPoolLimit</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(poolLimitPerUser);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span></code></pre>\n<p><strong>合约拥有者</strong>可以调用此函数更新每个池子的质押限制。质押限制只能增加，不能减少。这确保了没有用户质押数量超过质押限制。</p>\n","isPage":false,"text":"\nfunction updatePoolLimitPerUser(bool _hasUserLimit, uint256 _poolLimitPerUser) external onlyOwner {\n        require(hasUserLimit, &quot;Must be set&quot;);\n        if (_hasUserLimit) {\n            require(_poolLimitPerUser &gt; poolLimitPerUser, &quot;New limit must be higher&quot;);\n            poolLimitPerUser = _poolLimitPerUser;\n        } else {\n            hasUserLimit = _hasUserLimit;\n            poolLimitPerUser = 0;\n        }\n        emit NewPoolLimit(poolLimitPerUser);\n    }\n合约拥有者可以调用此函数更新每个池子的质押限制。质押限制只能增加，不能减少。这确保了没有用户质押数量超过质押限制。\n","title":"updatePoolLimitPerUser - 合约拥有者","titles":["SmartChefInitializable","函数"]},"227":{"href":"/contracts/syrup-pools/smartchefinitializable#updaterewardperblock---合约拥有者","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\"> function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> updateRewardPerBlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> _rewardPerBlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">external</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> onlyOwner</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        require</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(block.number </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> startBlock, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Pool has started&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        rewardPerBlock </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _rewardPerBlock;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        emit </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewRewardPerBlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(_rewardPerBlock);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span></code></pre>\n<p>可以由 <strong>合约拥有者</strong> 调用，但只能在池子开始前调用。一旦池子开始，这个参数不能再修改。</p>\n","isPage":false,"text":"\n function updateRewardPerBlock(uint256 _rewardPerBlock) external onlyOwner {\n        require(block.number &lt; startBlock, &quot;Pool has started&quot;);\n        rewardPerBlock = _rewardPerBlock;\n        emit NewRewardPerBlock(_rewardPerBlock);\n    }\n可以由 合约拥有者 调用，但只能在池子开始前调用。一旦池子开始，这个参数不能再修改。\n","title":"UpdateRewardPerBlock - 合约拥有者","titles":["SmartChefInitializable","函数"]},"228":{"href":"/contracts/syrup-pools/smartchefinitializable#updatestartandendblocks---合约拥有者","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">   function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> updateStartAndEndBlocks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> _startBlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> _bonusEndBlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">external</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> onlyOwner</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        require</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(block.number </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> startBlock, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Pool has started&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        require</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(_startBlock </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _bonusEndBlock, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;New startBlock must be lower than new endBlock&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        require</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(block.number </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _startBlock, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;New startBlock must be higher than current block&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        startBlock </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _startBlock;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        bonusEndBlock </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _bonusEndBlock;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Set the lastRewardBlock as the startBlock</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        lastRewardBlock </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> startBlock;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        emit </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStartAndEndBlocks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(_startBlock, _bonusEndBlock);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span></code></pre>\n<p>可以由 <strong>合约拥有者</strong> 调用，但只能在池子开始前调用。一旦池子开始，这个参数不能再修改。</p>\n","isPage":false,"text":"\n   function updateStartAndEndBlocks(uint256 _startBlock, uint256 _bonusEndBlock) external onlyOwner {\n        require(block.number &lt; startBlock, &quot;Pool has started&quot;);\n        require(_startBlock &lt; _bonusEndBlock, &quot;New startBlock must be lower than new endBlock&quot;);\n        require(block.number &lt; _startBlock, &quot;New startBlock must be higher than current block&quot;);\n \n        startBlock = _startBlock;\n        bonusEndBlock = _bonusEndBlock;\n \n        // Set the lastRewardBlock as the startBlock\n        lastRewardBlock = startBlock;\n \n        emit NewStartAndEndBlocks(_startBlock, _bonusEndBlock);\n    }\n可以由 合约拥有者 调用，但只能在池子开始前调用。一旦池子开始，这个参数不能再修改。\n","title":"updateStartAndEndBlocks - 合约拥有者","titles":["SmartChefInitializable","函数"]},"229":{"href":"/contracts/syrup-pools/smartchefinitializable#transferownership---合约拥有者","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        transferOwnership</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(_admin);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span></code></pre>\n<p>如果 <strong>合约拥有者</strong> 需要更改合约的所有权，他们可以调用此函数。</p>","isPage":false,"text":"\n        transferOwnership(_admin);\n    }\n如果 合约拥有者 需要更改合约的所有权，他们可以调用此函数。","title":"transferOwnership - 合约拥有者","titles":["SmartChefInitializable","函数"]},"230":{"href":"/contracts/v2/factory-v2#factory-v2","html":"</header>\n<aside data-callout=\"warning\"><p>PancakeSwap 基于 Uniswap v2。请阅读 <a href=\"https://docs.uniswap.org/contracts/v2/overview\">Uniswap v2 文档</a>。<br/>\n有关核心合约逻辑的更深入信息，请阅读 <a href=\"https://uniswap.org/whitepaper.pdf\">Uniswap v2 核心白皮书</a>。</p></aside>\n","isPage":true,"text":"\nPancakeSwap 基于 Uniswap v2。请阅读 Uniswap v2 文档。\n有关核心合约逻辑的更深入信息，请阅读 Uniswap v2 核心白皮书。\n","title":"Factory v2","titles":[]},"231":{"href":"/contracts/v2/factory-v2#合约信息","html":"\n<p><strong>合约名称：</strong> PancakeFactory</p>\n<p>在 <a href=\"https://github.com/pancakeswap/pancake-contracts/blob/master/projects/exchange-protocol/contracts/PancakeFactory.sol\">GitHub 上查看 PancakeFactory.sol</a>。</p>\n<table><thead><tr><th>公链</th><th>地址</th></tr></thead><tbody><tr><td>BSC</td><td>0xcA143Ce32Fe78f1f7019d7d551a6402fC5350c73</td></tr><tr><td>ETH</td><td>0x1097053Fd2ea711dad45caCcc45EfF7548fCB362</td></tr><tr><td>zkEVM</td><td>0x02a84c1b3BBD7401a5f7fa98a384EBC70bB5749E</td></tr><tr><td>zkSync</td><td>0xd03D8D566183F0086d8D09A84E1e30b58Dd5619d</td></tr><tr><td>Arbitrum</td><td>0x02a84c1b3BBD7401a5f7fa98a384EBC70bB5749E</td></tr><tr><td>Linea</td><td>0x02a84c1b3BBD7401a5f7fa98a384EBC70bB5749E</td></tr><tr><td>Base</td><td>0x02a84c1b3BBD7401a5f7fa98a384EBC70bB5749E</td></tr><tr><td>opBNB</td><td>0x02a84c1b3BBD7401a5f7fa98a384EBC70bB5749E</td></tr></tbody></table>\n","isPage":false,"text":"\n合约名称： PancakeFactory\n在 GitHub 上查看 PancakeFactory.sol。\n公链地址BSC0xcA143Ce32Fe78f1f7019d7d551a6402fC5350c73ETH0x1097053Fd2ea711dad45caCcc45EfF7548fCB362zkEVM0x02a84c1b3BBD7401a5f7fa98a384EBC70bB5749EzkSync0xd03D8D566183F0086d8D09A84E1e30b58Dd5619dArbitrum0x02a84c1b3BBD7401a5f7fa98a384EBC70bB5749ELinea0x02a84c1b3BBD7401a5f7fa98a384EBC70bB5749EBase0x02a84c1b3BBD7401a5f7fa98a384EBC70bB5749EopBNB0x02a84c1b3BBD7401a5f7fa98a384EBC70bB5749E\n","title":"合约信息","titles":["Factory v2"]},"232":{"href":"/contracts/v2/factory-v2#读取函数","html":"\n","isPage":false,"text":"\n","title":"读取函数","titles":["Factory v2"]},"233":{"href":"/contracts/v2/factory-v2#getpair","html":"\n<p><code>function getPair(address tokenA, address tokenB) external view returns (address pair);</code></p>\n<p>传入 <code>tokenA</code> 和 <code>tokenB</code> 的地址，返回对应的配对合约地址（如果存在）。</p>\n<p><code>tokenA</code> 和 <code>tokenB</code> 的顺序可互换。</p>\n<p>如果不存在配对，返回 <code>0x0000000000000000000000000000000000000000</code> 地址。</p>\n","isPage":false,"text":"\nfunction getPair(address tokenA, address tokenB) external view returns (address pair);\n传入 tokenA 和 tokenB 的地址，返回对应的配对合约地址（如果存在）。\ntokenA 和 tokenB 的顺序可互换。\n如果不存在配对，返回 0x0000000000000000000000000000000000000000 地址。\n","title":"getPair","titles":["Factory v2","读取函数"]},"234":{"href":"/contracts/v2/factory-v2#allpairs","html":"\n<p><code>function allPairs(uint) external view returns (address pair);</code></p>\n<p>返回由工厂合约创建的第 <code>n</code> 个配对 (<code>0</code> 索引)。</p>\n<p>如果配对尚未创建，返回 <code>0x0000000000000000000000000000000000000000</code>。</p>\n<p>第一个创建的配对索引从 <code>0</code> 开始。</p>\n","isPage":false,"text":"\nfunction allPairs(uint) external view returns (address pair);\n返回由工厂合约创建的第 n 个配对 (0 索引)。\n如果配对尚未创建，返回 0x0000000000000000000000000000000000000000。\n第一个创建的配对索引从 0 开始。\n","title":"allPairs","titles":["Factory v2","读取函数"]},"235":{"href":"/contracts/v2/factory-v2#allpairslength","html":"\n<p><code>function allPairsLength() external view returns (uint);</code></p>\n<p>显示当前通过工厂合约创建的配对数量，以整数形式返回。</p>\n","isPage":false,"text":"\nfunction allPairsLength() external view returns (uint);\n显示当前通过工厂合约创建的配对数量，以整数形式返回。\n","title":"allPairsLength","titles":["Factory v2","读取函数"]},"236":{"href":"/contracts/v2/factory-v2#feeto","html":"\n<p><code>function feeTo() external view returns (address);</code></p>\n<p>非 LP 持有人费用的接收地址。</p>\n","isPage":false,"text":"\nfunction feeTo() external view returns (address);\n非 LP 持有人费用的接收地址。\n","title":"feeTo","titles":["Factory v2","读取函数"]},"237":{"href":"/contracts/v2/factory-v2#feetosetter","html":"\n<p><code>function feeToSetter() external view returns (address);</code></p>\n<p>有权限设置 <code>feeTo</code> 地址的人。</p>\n","isPage":false,"text":"\nfunction feeToSetter() external view returns (address);\n有权限设置 feeTo 地址的人。\n","title":"feeToSetter","titles":["Factory v2","读取函数"]},"238":{"href":"/contracts/v2/factory-v2#写入函数","html":"\n","isPage":false,"text":"\n","title":"写入函数","titles":["Factory v2"]},"239":{"href":"/contracts/v2/factory-v2#createpair","html":"\n<p><code>function createPair(address tokenA, address tokenB) external returns (address pair);</code></p>\n<p>为 <code>tokenA</code> 和 <code>tokenB</code> 创建配对（如果配对不存在）。</p>\n<p><code>tokenA</code> 和 <code>tokenB</code> 的顺序可互换。</p>\n<p>触发 <code>PairCreated</code> 事件（见事件）。</p>\n","isPage":false,"text":"\nfunction createPair(address tokenA, address tokenB) external returns (address pair);\n为 tokenA 和 tokenB 创建配对（如果配对不存在）。\ntokenA 和 tokenB 的顺序可互换。\n触发 PairCreated 事件（见事件）。\n","title":"createPair","titles":["Factory v2","写入函数"]},"240":{"href":"/contracts/v2/factory-v2#setfeeto","html":"\n<p>设置 <code>feeTo</code> 地址。</p>\n","isPage":false,"text":"\n设置 feeTo 地址。\n","title":"setFeeTo","titles":["Factory v2","写入函数"]},"241":{"href":"/contracts/v2/factory-v2#setfeetosetter","html":"\n<p>设置有权限调整 <code>feeTo</code> 的地址。</p>\n","isPage":false,"text":"\n设置有权限调整 feeTo 的地址。\n","title":"setFeeToSetter","titles":["Factory v2","写入函数"]},"242":{"href":"/contracts/v2/factory-v2#事件","html":"\n","isPage":false,"text":"\n","title":"事件","titles":["Factory v2"]},"243":{"href":"/contracts/v2/factory-v2#paircreated","html":"\n<p><code>event PairCreated(address indexed token0, address indexed token1, address pair, uint);</code></p>\n<p>当 <code>createPair</code> 创建新配对时触发。</p>\n<p><code>token0</code> 将在排序顺序中位于 <code>token1</code> 之前。</p>\n<p>最终的 <code>uint</code> 日志值将是第一个创建的配对为 <code>1</code>，第二个为 <code>2</code>，依此类推。</p>\n","isPage":false,"text":"\nevent PairCreated(address indexed token0, address indexed token1, address pair, uint);\n当 createPair 创建新配对时触发。\ntoken0 将在排序顺序中位于 token1 之前。\n最终的 uint 日志值将是第一个创建的配对为 1，第二个为 2，依此类推。\n","title":"PairCreated","titles":["Factory v2","事件"]},"244":{"href":"/contracts/v2/factory-v2#接口","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@uniswap/v2-core/contracts/interfaces/IPancakeFactory.sol&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">pragma</span><span style=\"color:#22863A;--shiki-dark:#8DDB8C\"> solidity</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> =0.5.16</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> IPancakeFactory</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    event</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> PairCreated</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> indexed</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> token0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> indexed</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> token1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> pair</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> feeTo</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> view</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> feeToSetter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> view</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getPair</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> tokenA</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> tokenB</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> view</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> pair</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> allPairs</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> view</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> pair</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> allPairsLength</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> view</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> createPair</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> tokenA</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> tokenB</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> pair</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> setFeeTo</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> setFeeToSetter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>","isPage":false,"text":"\nimport &#x27;@uniswap/v2-core/contracts/interfaces/IPancakeFactory.sol&#x27;;\npragma solidity =0.5.16;\n \n \ninterface IPancakeFactory {\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\n \n    function feeTo() external view returns (address);\n    function feeToSetter() external view returns (address);\n \n    function getPair(address tokenA, address tokenB) external view returns (address pair);\n    function allPairs(uint) external view returns (address pair);\n    function allPairsLength() external view returns (uint);\n \n    function createPair(address tokenA, address tokenB) external returns (address pair);\n \n    function setFeeTo(address) external;\n    function setFeeToSetter(address) external;\n}","title":"接口","titles":["Factory v2"]},"245":{"href":"/contracts/v2/index#v2-合约","html":"</header>\n<p><a href=\"factory-v2\">factory-v2.md</a></p>\n<p><a href=\"router-v2\">router-v2.md</a></p>","isPage":true,"text":"\nfactory-v2.md\nrouter-v2.md","title":"v2 合约","titles":[]},"246":{"href":"/contracts/v2/router-v2#router-v2","html":"</header>\n<aside data-callout=\"warning\"><p>PancakeSwap 基于 Uniswap v2。阅读 <a href=\"https://docs.uniswap.org/contracts/v2/overview\">Uniswap v2 文档</a>。<br/>\n有关核心合约逻辑的更深入信息，请阅读 <a href=\"https://github.com/Uniswap/docs/blob/main/static/whitepaper.pdf\">Uniswap v2 核心白皮书</a>。</p></aside>\n","isPage":true,"text":"\nPancakeSwap 基于 Uniswap v2。阅读 Uniswap v2 文档。\n有关核心合约逻辑的更深入信息，请阅读 Uniswap v2 核心白皮书。\n","title":"Router v2","titles":[]},"247":{"href":"/contracts/v2/router-v2#合约信息","html":"\n<p><strong>合约名称:</strong> PancakeRouter</p>\n<p>查看 <a href=\"https://github.com/pancakeswap/pancake-smart-contracts/blob/master/projects/exchange-protocol/contracts/PancakeRouter.sol\">PancakeRouter.sol on GitHub</a>。</p>\n<table><thead><tr><th>链</th><th>地址</th></tr></thead><tbody><tr><td>BSC</td><td>0x10ED43C718714eb63d5aA57B78B54704E256024E</td></tr><tr><td>ETH</td><td>0xEfF92A263d31888d860bD50809A8D171709b7b1c</td></tr><tr><td>zkEVM</td><td>0x8cFe327CEc66d1C090Dd72bd0FF11d690C33a2Eb</td></tr><tr><td>zkSync</td><td>0x5aEaF2883FBf30f3D62471154eDa3C0c1b05942d</td></tr><tr><td>Arbitrum</td><td>0x8cFe327CEc66d1C090Dd72bd0FF11d690C33a2Eb</td></tr><tr><td>Linea</td><td>0x8cFe327CEc66d1C090Dd72bd0FF11d690C33a2Eb</td></tr><tr><td>Base</td><td>0x8cFe327CEc66d1C090Dd72bd0FF11d690C33a2Eb</td></tr><tr><td>opBNB</td><td>0x8cFe327CEc66d1C090Dd72bd0FF11d690C33a2Eb</td></tr></tbody></table>\n","isPage":false,"text":"\n合约名称: PancakeRouter\n查看 PancakeRouter.sol on GitHub。\n链地址BSC0x10ED43C718714eb63d5aA57B78B54704E256024EETH0xEfF92A263d31888d860bD50809A8D171709b7b1czkEVM0x8cFe327CEc66d1C090Dd72bd0FF11d690C33a2EbzkSync0x5aEaF2883FBf30f3D62471154eDa3C0c1b05942dArbitrum0x8cFe327CEc66d1C090Dd72bd0FF11d690C33a2EbLinea0x8cFe327CEc66d1C090Dd72bd0FF11d690C33a2EbBase0x8cFe327CEc66d1C090Dd72bd0FF11d690C33a2EbopBNB0x8cFe327CEc66d1C090Dd72bd0FF11d690C33a2Eb\n","title":"合约信息","titles":["Router v2"]},"248":{"href":"/contracts/v2/router-v2#读取函数","html":"\n","isPage":false,"text":"\n","title":"读取函数","titles":["Router v2"]},"249":{"href":"/contracts/v2/router-v2#weth","html":"\n<p><code>function WETH() external pure returns (address);</code></p>\n<p>返回 <a href=\"https://bscscan.com/address/0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c\">Binance: WBNB token</a> 的标准地址（WETH 源自以太坊网络）。</p>\n","isPage":false,"text":"\nfunction WETH() external pure returns (address);\n返回 Binance: WBNB token 的标准地址（WETH 源自以太坊网络）。\n","title":"WETH","titles":["Router v2","读取函数"]},"250":{"href":"/contracts/v2/router-v2#factory","html":"\n<p><code>function factory() external pure returns (address);</code></p>\n<p>返回 <a href=\"https://bscscan.com/address/0xca143ce32fe78f1f7019d7d551a6402fc5350c73\">PancakeFactory</a> 的标准地址。</p>\n<aside data-callout=\"warning\"><p>相关内容说明，请查看 <a href=\"https://uniswap.org/docs/v2/smart-contracts/library/#internal-functions\">Uniswap v2 内部函数文档</a>。</p></aside>\n","isPage":false,"text":"\nfunction factory() external pure returns (address);\n返回 PancakeFactory 的标准地址。\n相关内容说明，请查看 Uniswap v2 内部函数文档。\n","title":"factory","titles":["Router v2","读取函数"]},"251":{"href":"/contracts/v2/router-v2#getamountout","html":"\n<p><code>function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) internal pure returns (uint amountOut);</code></p>\n","isPage":false,"text":"\nfunction getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) internal pure returns (uint amountOut);\n","title":"getAmountOut","titles":["Router v2","读取函数"]},"252":{"href":"/contracts/v2/router-v2#getamountin","html":"\n<p><code>function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) internal pure returns (uint amountIn);</code></p>\n","isPage":false,"text":"\nfunction getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) internal pure returns (uint amountIn);\n","title":"getAmountIn","titles":["Router v2","读取函数"]},"253":{"href":"/contracts/v2/router-v2#getamountsout","html":"\n<p><code>function getAmountsOut(uint amountIn, address[] memory path) internal view returns (uint[] memory amounts);</code></p>\n","isPage":false,"text":"\nfunction getAmountsOut(uint amountIn, address[] memory path) internal view returns (uint[] memory amounts);\n","title":"getAmountsOut","titles":["Router v2","读取函数"]},"254":{"href":"/contracts/v2/router-v2#getamountsin","html":"\n<p><code>function getAmountsIn(uint amountOut, address[] memory path) internal view returns (uint[] memory amounts);</code></p>\n","isPage":false,"text":"\nfunction getAmountsIn(uint amountOut, address[] memory path) internal view returns (uint[] memory amounts);\n","title":"getAmountsIn","titles":["Router v2","读取函数"]},"255":{"href":"/contracts/v2/router-v2#quote","html":"\n<p><code>function quote(uint amountA, uint reserveA, uint reserveB) internal pure returns (uint amountB);</code></p>\n","isPage":false,"text":"\nfunction quote(uint amountA, uint reserveA, uint reserveB) internal pure returns (uint amountB);\n","title":"quote","titles":["Router v2","读取函数"]},"256":{"href":"/contracts/v2/router-v2#写入函数","html":"\n","isPage":false,"text":"\n","title":"写入函数","titles":["Router v2"]},"257":{"href":"/contracts/v2/router-v2#addliquidity","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> addLiquidity</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> tokenA</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> tokenB</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountADesired</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountBDesired</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountAMin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountBMin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> to</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> deadline</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountA</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountB</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> liquidity</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span></code></pre>\n<p>向 BEP20⇄BEP20 池中添加流动性。</p>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>tokenA</td><td><code>address</code></td><td>流动性对中其中一个代币的合约地址。</td></tr><tr><td>tokenB</td><td><code>address</code></td><td>流动性对中另一个代币的合约地址。</td></tr><tr><td>amountADesired</td><td><code>uint</code></td><td>你希望提供的 tokenA 数量。</td></tr><tr><td>amountBDesired</td><td><code>uint</code></td><td>你希望提供的 tokenB 数量。</td></tr><tr><td>amountAMin</td><td><code>uint</code></td><td>最少提供的 tokenA 数量（滑点影响）。</td></tr><tr><td>amountBMin</td><td><code>uint</code></td><td>最少提供的 tokenB 数量（滑点影响）。</td></tr><tr><td>to</td><td><code>address</code></td><td>LP 代币接收者的地址。</td></tr><tr><td>deadline</td><td><code>uint</code></td><td>交易确认的最后期限时间戳。</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction addLiquidity(\n  address tokenA,\n  address tokenB,\n  uint amountADesired,\n  uint amountBDesired,\n  uint amountAMin,\n  uint amountBMin,\n  address to,\n  uint deadline\n) external returns (uint amountA, uint amountB, uint liquidity);\n向 BEP20⇄BEP20 池中添加流动性。\n名称类型描述tokenAaddress流动性对中其中一个代币的合约地址。tokenBaddress流动性对中另一个代币的合约地址。amountADesireduint你希望提供的 tokenA 数量。amountBDesireduint你希望提供的 tokenB 数量。amountAMinuint最少提供的 tokenA 数量（滑点影响）。amountBMinuint最少提供的 tokenB 数量（滑点影响）。toaddressLP 代币接收者的地址。deadlineuint交易确认的最后期限时间戳。\n","title":"addLiquidity","titles":["Router v2","写入函数"]},"258":{"href":"/contracts/v2/router-v2#addliquidityeth","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> addLiquidityETH</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> token</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountTokenDesired</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountTokenMin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountETHMin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> to</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> deadline</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> payable</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountETH</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> liquidity</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span></code></pre>\n<p>向 BEP20⇄WBNB 池中添加流动性。</p>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>addLiquidityETH</td><td><code>uint</code></td><td>以 BNB 支付的金额。</td></tr><tr><td>token</td><td><code>address</code></td><td>添加流动性的代币合约地址。</td></tr><tr><td>amountTokenDesired</td><td><code>uint</code></td><td>你希望提供的代币数量。</td></tr><tr><td>amountTokenMin</td><td><code>uint</code></td><td>最少提供的代币数量（滑点影响）。</td></tr><tr><td>amountETHMin</td><td><code>uint</code></td><td>最少提供的 BNB 数量（滑点影响）。</td></tr><tr><td>to</td><td><code>address</code></td><td>LP 代币接收者的地址。</td></tr><tr><td>deadline</td><td><code>uint</code></td><td>交易确认的最后期限时间戳。</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction addLiquidityETH(\n  address token,\n  uint amountTokenDesired,\n  uint amountTokenMin,\n  uint amountETHMin,\n  address to,\n  uint deadline\n) external payable returns (uint amountToken, uint amountETH, uint liquidity);\n向 BEP20⇄WBNB 池中添加流动性。\n名称类型描述addLiquidityETHuint以 BNB 支付的金额。tokenaddress添加流动性的代币合约地址。amountTokenDesireduint你希望提供的代币数量。amountTokenMinuint最少提供的代币数量（滑点影响）。amountETHMinuint最少提供的 BNB 数量（滑点影响）。toaddressLP 代币接收者的地址。deadlineuint交易确认的最后期限时间戳。\n","title":"addLiquidityETH","titles":["Router v2","写入函数"]},"259":{"href":"/contracts/v2/router-v2#removeliquidity","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> removeLiquidity</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> tokenA</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> tokenB</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> liquidity</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountAMin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountBMin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> to</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> deadline</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountA</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountB</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span></code></pre>\n<p>从 BEP20⇄BEP20 池中移除流动性。</p>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>tokenA</td><td><code>address</code></td><td>流动性对中其中一个代币的合约地址。</td></tr><tr><td>tokenB</td><td><code>address</code></td><td>流动性对中另一个代币的合约地址。</td></tr><tr><td>liquidity</td><td><code>uint</code></td><td>要移除的 LP 代币数量。</td></tr><tr><td>amountAMin</td><td><code>uint</code></td><td>最少移除的 tokenA 数量（滑点影响）。</td></tr><tr><td>amountBMin</td><td><code>uint</code></td><td>最少移除的 tokenB 数量（滑点影响）。</td></tr><tr><td>to</td><td><code>address</code></td><td>LP 代币接收者的地址。</td></tr><tr><td>deadline</td><td><code>uint</code></td><td>交易确认的最后期限时间戳。</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction removeLiquidity(\n  address tokenA,\n  address tokenB,\n  uint liquidity,\n  uint amountAMin,\n  uint amountBMin,\n  address to,\n  uint deadline\n) external returns (uint amountA, uint amountB);\n从 BEP20⇄BEP20 池中移除流动性。\n名称类型描述tokenAaddress流动性对中其中一个代币的合约地址。tokenBaddress流动性对中另一个代币的合约地址。liquidityuint要移除的 LP 代币数量。amountAMinuint最少移除的 tokenA 数量（滑点影响）。amountBMinuint最少移除的 tokenB 数量（滑点影响）。toaddressLP 代币接收者的地址。deadlineuint交易确认的最后期限时间戳。\n","title":"removeLiquidity","titles":["Router v2","写入函数"]},"260":{"href":"/contracts/v2/router-v2#removeliquidityeth","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> removeLiquidityETH</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> token</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> liquidity</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountTokenMin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountETHMin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> to</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> deadline</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountETH</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span></code></pre>\n<p>从 BEP20⇄WBNB 池中移除流动性。</p>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>token</td><td><code>address</code></td><td>移除流动性的代币合约地址。</td></tr><tr><td>liquidity</td><td><code>uint</code></td><td>要移除的 LP 代币数量。</td></tr><tr><td>amountTokenMin</td><td><code>uint</code></td><td>最少移除的代币数量（滑点影响）。</td></tr><tr><td>amountETHMin</td><td><code>uint</code></td><td>最少移除的 BNB 数量（滑点影响）。</td></tr><tr><td>to</td><td><code>address</code></td><td>LP 代币接收者的地址。</td></tr><tr><td>deadline</td><td><code>uint</code></td><td>交易确认的最后期限时间戳。</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction removeLiquidityETH(\n  address token,\n  uint liquidity,\n  uint amountTokenMin,\n  uint amountETHMin,\n  address to,\n  uint deadline\n) external returns (uint amountToken, uint amountETH);\n从 BEP20⇄WBNB 池中移除流动性。\n名称类型描述tokenaddress移除流动性的代币合约地址。liquidityuint要移除的 LP 代币数量。amountTokenMinuint最少移除的代币数量（滑点影响）。amountETHMinuint最少移除的 BNB 数量（滑点影响）。toaddressLP 代币接收者的地址。deadlineuint交易确认的最后期限时间戳。\n","title":"removeLiquidityETH","titles":["Router v2","写入函数"]},"261":{"href":"/contracts/v2/router-v2#removeliquidityethsupportingfeeontransfertokens","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> removeLiquidityETHSupportingFeeOnTransferTokens</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> token</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> liquidity</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountTokenMin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountETHMin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> to</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> deadline</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountETH</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span></code></pre>\n<p>从对手续费的 BEP20⇄WBNB 池中移除流动性。</p>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>token</td><td><code>address</code></td><td>移除流动性的代币合约地址。</td></tr><tr><td>liquidity</td><td><code>uint</code></td><td>要移除的 LP 代币数量。</td></tr><tr><td>amountTokenMin</td><td><code>uint</code></td><td>最少移除的代币数量（滑点影响）。</td></tr><tr><td>amountETHMin</td><td><code>uint</code></td><td>最少移除的 BNB 数量（滑点影响）。</td></tr><tr><td>to</td><td><code>address</code></td><td>LP 代币接收者的地址。</td></tr><tr><td>deadline</td><td><code>uint</code></td><td>交易确认的最后期限时间戳。</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction removeLiquidityETHSupportingFeeOnTransferTokens(\n  address token,\n  uint liquidity,\n  uint amountTokenMin,\n  uint amountETHMin,\n  address to,\n  uint deadline\n) external returns (uint amountETH);\n从对手续费的 BEP20⇄WBNB 池中移除流动性。\n名称类型描述tokenaddress移除流动性的代币合约地址。liquidityuint要移除的 LP 代币数量。amountTokenMinuint最少移除的代币数量（滑点影响）。amountETHMinuint最少移除的 BNB 数量（滑点影响）。toaddressLP 代币接收者的地址。deadlineuint交易确认的最后期限时间戳。\n","title":"removeLiquidityETHSupportingFeeOnTransferTokens","titles":["Router v2","写入函数"]},"262":{"href":"/contracts/v2/router-v2#removeliquidityethwithpermit","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> removeLiquidityETHWithPermit</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> token</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> liquidity</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountTokenMin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountETHMin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> to</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> deadline</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  bool</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> approveMax</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint8</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> v</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">bytes32</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> r</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">bytes32</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> s</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountETH</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span></code></pre>\n<p>通过许可，从 BEP20⇄WBNB 中移除流动性并接收 BNB，无需预批准。。</p>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>token</td><td><code>address</code></td><td>移除流动性的代币合约地址。</td></tr><tr><td>liquidity</td><td><code>uint</code></td><td>要移除的 LP 代币数量。</td></tr><tr><td>amountTokenMin</td><td><code>uint</code></td><td>最少移除的代币数量（滑点影响）。</td></tr><tr><td>amountETHMin</td><td><code>uint</code></td><td>最少移除的 BNB 数量（滑点影响）。</td></tr><tr><td>to</td><td><code>address</code></td><td>LP 代币接收者的地址。</td></tr><tr><td>deadline</td><td><code>uint</code></td><td>交易确认的最后期限时间戳。</td></tr><tr><td>approveMax</td><td><code>bool</code></td><td>签名中的批准数量是否用于流动性或 <code>uint(-1)</code> 全额授权。</td></tr><tr><td>v</td><td><code>uint8</code></td><td>许可签名的 v 组件。</td></tr><tr><td>r</td><td><code>bytes32</code></td><td>许可签名的 r 组件。</td></tr><tr><td>s</td><td><code>bytes32</code></td><td>许可签名的 s 组件。</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction removeLiquidityETHWithPermit(\n  address token,\n  uint liquidity,\n  uint amountTokenMin,\n  uint amountETHMin,\n  address to,\n  uint deadline,\n  bool approveMax, uint8 v, bytes32 r, bytes32 s\n) external returns (uint amountToken, uint amountETH);\n通过许可，从 BEP20⇄WBNB 中移除流动性并接收 BNB，无需预批准。。\n名称类型描述tokenaddress移除流动性的代币合约地址。liquidityuint要移除的 LP 代币数量。amountTokenMinuint最少移除的代币数量（滑点影响）。amountETHMinuint最少移除的 BNB 数量（滑点影响）。toaddressLP 代币接收者的地址。deadlineuint交易确认的最后期限时间戳。approveMaxbool签名中的批准数量是否用于流动性或 uint(-1) 全额授权。vuint8许可签名的 v 组件。rbytes32许可签名的 r 组件。sbytes32许可签名的 s 组件。\n","title":"removeLiquidityETHWithPermit","titles":["Router v2","写入函数"]},"263":{"href":"/contracts/v2/router-v2#removeliquidityethwithpermitsupportingfeeontransfertokens","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> removeLiquidityETHWithPermitSupportingFeeOnTransferTokens</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> token</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> liquidity</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountTokenMin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountETHMin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> to</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> deadline</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  bool</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> approveMax</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint8</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> v</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">bytes32</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> r</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">bytes32</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> s</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountETH</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span></code></pre>\n<p>通过许可，从对手续费的 BEP20⇄WBNB 中移除流动性并接收 BNB。</p>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>token</td><td><code>address</code></td><td>移除流动性的代币合约地址。</td></tr><tr><td>liquidity</td><td><code>uint</code></td><td>要移除的 LP 代币数量。</td></tr><tr><td>amountTokenMin</td><td><code>uint</code></td><td>最少移除的代币数量（滑点影响）。</td></tr><tr><td>amountETHMin</td><td><code>uint</code></td><td>最少移除的 BNB 数量（滑点影响）。</td></tr><tr><td>to</td><td><code>address</code></td><td>LP 代币接收者的地址。</td></tr><tr><td>deadline</td><td><code>uint</code></td><td>交易确认的最后期限时间戳。</td></tr><tr><td>approveMax</td><td><code>bool</code></td><td>签名中的批准数量是否用于流动性或 <code>uint(-1)</code> 全额授权。</td></tr><tr><td>v</td><td><code>uint8</code></td><td>许可签名的 v 组件。</td></tr><tr><td>r</td><td><code>bytes32</code></td><td>许可签名的 r 组件。</td></tr><tr><td>s</td><td><code>bytes32</code></td><td>许可签名的 s 组件。</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\n  address token,\n  uint liquidity,\n  uint amountTokenMin,\n  uint amountETHMin,\n  address to,\n  uint deadline,\n  bool approveMax, uint8 v, bytes32 r, bytes32 s\n) external returns (uint amountETH);\n通过许可，从对手续费的 BEP20⇄WBNB 中移除流动性并接收 BNB。\n名称类型描述tokenaddress移除流动性的代币合约地址。liquidityuint要移除的 LP 代币数量。amountTokenMinuint最少移除的代币数量（滑点影响）。amountETHMinuint最少移除的 BNB 数量（滑点影响）。toaddressLP 代币接收者的地址。deadlineuint交易确认的最后期限时间戳。approveMaxbool签名中的批准数量是否用于流动性或 uint(-1) 全额授权。vuint8许可签名的 v 组件。rbytes32许可签名的 r 组件。sbytes32许可签名的 s 组件。\n","title":"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens","titles":["Router v2","写入函数"]},"264":{"href":"/contracts/v2/router-v2#removeliquiditywithpermit","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> removeLiquidityWithPermit</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> tokenA</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> tokenB</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> liquidity</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountAMin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountBMin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> to</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> deadline</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  bool</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> approveMax</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint8</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> v</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">bytes32</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> r</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">bytes32</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> s</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountA</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountB</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span></code></pre>\n<p>通过许可，从 BEP20⇄BEP20 移除流动性，无需预批准。</p>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>tokenA</td><td><code>address</code></td><td>流动性对中其中一个代币的合约地址。</td></tr><tr><td>tokenB</td><td><code>address</code></td><td>流动性对中另一个代币的合约地址。</td></tr><tr><td>liquidity</td><td><code>uint</code></td><td>要移除的 LP 代币数量。</td></tr><tr><td>amountTokenMin</td><td><code>uint</code></td><td>最少移除的代币数量（滑点影响）。</td></tr><tr><td>amountETHMin</td><td><code>uint</code></td><td>最少移除的 BNB 数量（滑点影响）。</td></tr><tr><td>to</td><td><code>address</code></td><td>LP 代币接收者的地址。</td></tr><tr><td>deadline</td><td><code>uint</code></td><td>交易确认的最后期限时间戳。</td></tr><tr><td>approveMax</td><td><code>bool</code></td><td>签名中的批准数量是否用于流动性或 <code>uint(-1)</code> 全额授权。</td></tr><tr><td>v</td><td><code>uint8</code></td><td>许可签名的 v 组件。</td></tr><tr><td>r</td><td><code>bytes32</code></td><td>许可签名的 r 组件。</td></tr><tr><td>s</td><td><code>bytes32</code></td><td>许可签名的 s 组件。</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction removeLiquidityWithPermit(\n  address tokenA,\n  address tokenB,\n  uint liquidity,\n  uint amountAMin,\n  uint amountBMin,\n  address to,\n  uint deadline,\n  bool approveMax, uint8 v, bytes32 r, bytes32 s\n) external returns (uint amountA, uint amountB);\n通过许可，从 BEP20⇄BEP20 移除流动性，无需预批准。\n名称类型描述tokenAaddress流动性对中其中一个代币的合约地址。tokenBaddress流动性对中另一个代币的合约地址。liquidityuint要移除的 LP 代币数量。amountTokenMinuint最少移除的代币数量（滑点影响）。amountETHMinuint最少移除的 BNB 数量（滑点影响）。toaddressLP 代币接收者的地址。deadlineuint交易确认的最后期限时间戳。approveMaxbool签名中的批准数量是否用于流动性或 uint(-1) 全额授权。vuint8许可签名的 v 组件。rbytes32许可签名的 r 组件。sbytes32许可签名的 s 组件。\n","title":"removeLiquidityWithPermit","titles":["Router v2","写入函数"]},"265":{"href":"/contracts/v2/router-v2#swapethforexacttokens","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> swapETHForExactTokens</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountOut</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">calldata</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> path</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> to</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> deadline</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  external</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  payable</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">memory</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amounts</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span></code></pre>\n<p>用尽可能少的 BNB 交换准确数量的输出代币。</p>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>swapETHForExactTokens</td><td><code>uint</code></td><td>支付的 BNB 数量。</td></tr><tr><td>amountOut</td><td><code>uint</code></td><td>要接收的代币数量。</td></tr><tr><td>path (address[])</td><td><code>address</code></td><td>一个代币地址数组。<code>path.length</code> 必须 &gt;= 2。每对连续地址的池必须存在且有流动性。</td></tr><tr><td>to</td><td><code>address</code></td><td>接收者地址。</td></tr><tr><td>deadline</td><td><code>uint</code></td><td>交易确认的最后期限时间戳。</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\n  external\n  payable\n  returns (uint[] memory amounts);\n用尽可能少的 BNB 交换准确数量的输出代币。\n名称类型描述swapETHForExactTokensuint支付的 BNB 数量。amountOutuint要接收的代币数量。path (address[])address一个代币地址数组。path.length 必须 &gt;= 2。每对连续地址的池必须存在且有流动性。toaddress接收者地址。deadlineuint交易确认的最后期限时间戳。\n","title":"swapETHForExactTokens","titles":["Router v2","写入函数"]},"266":{"href":"/contracts/v2/router-v2#swapexactethfortokens","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)</span></span>\n<span class=\"line\"><span>  external</span></span>\n<span class=\"line\"><span>  payable</span></span>\n<span class=\"line\"><span>  returns (uint[] memory amounts);</span></span></code></pre>\n<p>用固定数量的 BNB 尽可能多地交换输出代币。</p>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>swapExactETHForTokens</td><td><code>uint</code></td><td>支付的 BNB 数量。</td></tr><tr><td>amountOutMin</td><td><code>uint</code></td><td>最少接收的代币数量。</td></tr><tr><td>path (address[])</td><td><code>address</code></td><td>一个代币地址数组。<code>path.length</code> 必须 &gt;= 2。每对连续地址的池必须存在且有流动性。</td></tr><tr><td>to</td><td><code>address</code></td><td>接收者地址。</td></tr><tr><td>deadline</td><td><code>uint</code></td><td>交易确认的最后期限时间戳。</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\n  external\n  payable\n  returns (uint[] memory amounts);\n用固定数量的 BNB 尽可能多地交换输出代币。\n名称类型描述swapExactETHForTokensuint支付的 BNB 数量。amountOutMinuint最少接收的代币数量。path (address[])address一个代币地址数组。path.length 必须 &gt;= 2。每对连续地址的池必须存在且有流动性。toaddress接收者地址。deadlineuint交易确认的最后期限时间戳。\n","title":"swapExactETHForTokens","titles":["Router v2","写入函数"]},"267":{"href":"/contracts/v2/router-v2#swapexactethfortokenssupportingfeeontransfertokens","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> swapExactETHForTokensSupportingFeeOnTransferTokens</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountOutMin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">calldata</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> path</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> to</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> deadline</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> payable</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span></code></pre>\n<p>用固定数量的 BNB 尽可能多地交换输出代币。支持对手续费的代币。</p>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>swapExactETHForTokensSupportingFeeOnTransferTokens</td><td><code>uint</code></td><td>支付的 BNB 数量。</td></tr><tr><td>amountOutMin</td><td><code>uint</code></td><td>最少接收的代币数量。</td></tr><tr><td>path (address[])</td><td><code>address</code></td><td>一个代币地址数组。<code>path.length</code> 必须 &gt;= 2。每对连续地址的池必须存在且有流动性。</td></tr><tr><td>to</td><td><code>address</code></td><td>接收者地址。</td></tr><tr><td>deadline</td><td><code>uint</code></td><td>交易确认的最后期限时间戳。</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction swapExactETHForTokensSupportingFeeOnTransferTokens(\n  uint amountOutMin,\n  address[] calldata path,\n  address to,\n  uint deadline\n) external payable;\n用固定数量的 BNB 尽可能多地交换输出代币。支持对手续费的代币。\n名称类型描述swapExactETHForTokensSupportingFeeOnTransferTokensuint支付的 BNB 数量。amountOutMinuint最少接收的代币数量。path (address[])address一个代币地址数组。path.length 必须 &gt;= 2。每对连续地址的池必须存在且有流动性。toaddress接收者地址。deadlineuint交易确认的最后期限时间戳。\n","title":"swapExactETHForTokensSupportingFeeOnTransferTokens","titles":["Router v2","写入函数"]},"268":{"href":"/contracts/v2/router-v2#swapexacttokensforeth","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)</span></span>\n<span class=\"line\"><span>  external</span></span>\n<span class=\"line\"><span>  returns (uint[] memory amounts);</span></span></code></pre>\n<p>用固定数量的输入代币尽可能多地交换 BNB。</p>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>amountIn</td><td><code>uint</code></td><td>输入代币的固定金额。</td></tr><tr><td>amountOutMin</td><td><code>uint</code></td><td>最少接收的 BNB 数量。</td></tr><tr><td>path (address[])</td><td><code>address</code></td><td>一个代币地址数组。<code>path.length</code> 必须 &gt;= 2。每对连续地址的池必须存在且有流动性。</td></tr><tr><td>to</td><td><code>address</code></td><td>接收者地址。</td></tr><tr><td>deadline</td><td><code>uint</code></td><td>交易确认的最后期限时间戳。</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n  external\n  returns (uint[] memory amounts);\n用固定数量的输入代币尽可能多地交换 BNB。\n名称类型描述amountInuint输入代币的固定金额。amountOutMinuint最少接收的 BNB 数量。path (address[])address一个代币地址数组。path.length 必须 &gt;= 2。每对连续地址的池必须存在且有流动性。toaddress接收者地址。deadlineuint交易确认的最后期限时间戳。\n","title":"swapExactTokensForETH","titles":["Router v2","写入函数"]},"269":{"href":"/contracts/v2/router-v2#swapexacttokensforethsupportingfeeontransfertokens","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> swapExactTokensForETHSupportingFeeOnTransferTokens</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountIn</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountOutMin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">calldata</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> path</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> to</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> deadline</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span></code></pre>\n<p>用固定数量的代币尽可能多地交换 BNB。支持对手续费的代币。</p>\n<p>| 名称</p>","isPage":false,"text":"\nfunction swapExactTokensForETHSupportingFeeOnTransferTokens(\n  uint amountIn,\n  uint amountOutMin,\n  address[] calldata path,\n  address to,\n  uint deadline\n) external;\n用固定数量的代币尽可能多地交换 BNB。支持对手续费的代币。\n| 名称","title":"swapExactTokensForETHSupportingFeeOnTransferTokens","titles":["Router v2","写入函数"]},"270":{"href":"/contracts/universal-router/addresses#pancakeswap-通用路由器地址","html":"</header>\n<strong>主网</strong>\n<table><thead><tr><th>链</th><th>地址</th></tr></thead><tbody><tr><td>BSC</td><td>0x1A0A18AC4BECDDbd6389559687d1A73d8927E416</td></tr><tr><td>ETH</td><td>0x65b382653f7C31bC0Af67f188122035461ec9C76</td></tr><tr><td>Arbitrum</td><td>0xFE6508f0015C778Bdcc1fB5465bA5ebE224C9912</td></tr><tr><td>Base</td><td>0xFE6508f0015C778Bdcc1fB5465bA5ebE224C9912</td></tr><tr><td>Linea</td><td>0xFE6508f0015C778Bdcc1fB5465bA5ebE224C9912</td></tr><tr><td>opBNB</td><td>0xB89a6778D1efE7a5b7096757A21b810CC2886fa1</td></tr><tr><td>zkEVM</td><td>0xB89a6778D1efE7a5b7096757A21b810CC2886fa1</td></tr><tr><td>zkSync</td><td>0xdAee41E335322C85ff2c5a6745c98e1351806e98</td></tr></tbody></table>\n<strong>测试网</strong>\n<table><thead><tr><th>链</th><th>地址</th></tr></thead><tbody><tr><td>BSC testnet</td><td>0x9A082015c919AD0E47861e5Db9A1c7070E81A2C7</td></tr><tr><td>Sepolia</td><td>0x55D32fa7Da7290838347bc97cb7fAD4992672255</td></tr><tr><td>Goerli</td><td>0xC46abF8B66Df4B9Eb0cC0cf6eba24226AC6E6285</td></tr><tr><td>Arbitrum Sepolia</td><td>0xFE6508f0015C778Bdcc1fB5465bA5ebE224C9912</td></tr><tr><td>Arbitrum Goerli</td><td>0xa8EEA7aa6620712524d18D742821848e55E773B5</td></tr><tr><td>Base Sepolia</td><td>0xFE6508f0015C778Bdcc1fB5465bA5ebE224C9912</td></tr><tr><td>Base testnet</td><td>0xa8EEA7aa6620712524d18D742821848e55E773B5</td></tr><tr><td>Linea</td><td>0x9f3Cb8251492a069dBF0634C24e9De305d6946B8</td></tr><tr><td>opBNB</td><td>0xa8EEA7aa6620712524d18D742821848e55E773B5</td></tr><tr><td>zkEVM</td><td>0xa8EEA7aa6620712524d18D742821848e55E773B5</td></tr><tr><td>Scroll Sepolia</td><td>0xB89a6778D1efE7a5b7096757A21b810CC2886fa1</td></tr><tr><td>zkSync</td><td>0xCa97D1FAFCEa54EFc68d66eA914AB2F8Fbfe93c5</td></tr></tbody></table>","isPage":true,"text":"\n主网\n链地址BSC0x1A0A18AC4BECDDbd6389559687d1A73d8927E416ETH0x65b382653f7C31bC0Af67f188122035461ec9C76Arbitrum0xFE6508f0015C778Bdcc1fB5465bA5ebE224C9912Base0xFE6508f0015C778Bdcc1fB5465bA5ebE224C9912Linea0xFE6508f0015C778Bdcc1fB5465bA5ebE224C9912opBNB0xB89a6778D1efE7a5b7096757A21b810CC2886fa1zkEVM0xB89a6778D1efE7a5b7096757A21b810CC2886fa1zkSync0xdAee41E335322C85ff2c5a6745c98e1351806e98\n测试网\n链地址BSC testnet0x9A082015c919AD0E47861e5Db9A1c7070E81A2C7Sepolia0x55D32fa7Da7290838347bc97cb7fAD4992672255Goerli0xC46abF8B66Df4B9Eb0cC0cf6eba24226AC6E6285Arbitrum Sepolia0xFE6508f0015C778Bdcc1fB5465bA5ebE224C9912Arbitrum Goerli0xa8EEA7aa6620712524d18D742821848e55E773B5Base Sepolia0xFE6508f0015C778Bdcc1fB5465bA5ebE224C9912Base testnet0xa8EEA7aa6620712524d18D742821848e55E773B5Linea0x9f3Cb8251492a069dBF0634C24e9De305d6946B8opBNB0xa8EEA7aa6620712524d18D742821848e55E773B5zkEVM0xa8EEA7aa6620712524d18D742821848e55E773B5Scroll Sepolia0xB89a6778D1efE7a5b7096757A21b810CC2886fa1zkSync0xCa97D1FAFCEa54EFc68d66eA914AB2F8Fbfe93c5","title":"PancakeSwap 通用路由器地址","titles":[]},"271":{"href":"/contracts/v3/addresses#pancakeswap-v3-地址","html":"</header>\n","isPage":true,"text":"\n","title":"PancakeSwap v3 地址","titles":[]},"272":{"href":"/contracts/v3/addresses#核心","html":"\n<table><thead><tr><th>合约</th><th>BSC, ETH, zkEVM, ARB, Linea, GOR, Base, opBNB, BSC 测试网 / 主网</th><th>zkSync</th></tr></thead><tbody><tr><td>PancakeV3Factory</td><td>0x0BFbCF9fa4f9C56B0F40a671Ad40E0805A091865</td><td>0x1BB72E0CbbEA93c08f535fc7856E0338D7F7a8aB</td></tr><tr><td>PancakeV3PoolDeployer</td><td>0x41ff9AA7e16B8B1a8a8dc4f0eFacd93D02d071c9</td><td>0x7f71382044A6a62595D5D357fE75CA8199123aD6</td></tr></tbody></table>\n","isPage":false,"text":"\n合约BSC, ETH, zkEVM, ARB, Linea, GOR, Base, opBNB, BSC 测试网 / 主网zkSyncPancakeV3Factory0x0BFbCF9fa4f9C56B0F40a671Ad40E0805A0918650x1BB72E0CbbEA93c08f535fc7856E0338D7F7a8aBPancakeV3PoolDeployer0x41ff9AA7e16B8B1a8a8dc4f0eFacd93D02d071c90x7f71382044A6a62595D5D357fE75CA8199123aD6\n","title":"核心","titles":["PancakeSwap v3 地址"]},"273":{"href":"/contracts/v3/addresses#外围","html":"\n<table><thead><tr><th>合约</th><th>BSC, ETH, zkEVM, Arbitrum, Linea, Base, opBNB</th><th>zkSync</th><th>GOR, BSC 测试网</th></tr></thead><tbody><tr><td>SwapRouter (v3)</td><td>0x1b81D678ffb9C0263b24A97847620C99d213eB14</td><td>0xD70C70AD87aa8D45b8D59600342FB3AEe76E3c68</td><td>0x1b81D678ffb9C0263b24A97847620C99d213eB14</td></tr><tr><td>V3Migrator</td><td>0xbC203d7f83677c7ed3F7acEc959963E7F4ECC5C2</td><td>0x556A72A7A3bB3bbd293D923e59b6B56898fB405D</td><td>0x46A15B0b27311cedF172AB29E4f4766fbE7F4364</td></tr><tr><td>NonfungiblePositionManager</td><td>0x46A15B0b27311cedF172AB29E4f4766fbE7F4364</td><td>0xa815e2eD7f7d5B0c49fda367F249232a1B9D2883</td><td>0x427bF5b37357632377eCbEC9de3626C71A5396c1</td></tr><tr><td>QuoterV2</td><td>0xB048Bbc1Ee6b733FFfCFb9e9CeF7375518e25997</td><td>0x3d146FcE6c1006857750cBe8aF44f76a28041CCc</td><td>0xbC203d7f83677c7ed3F7acEc959963E7F4ECC5C2</td></tr><tr><td>TickLens</td><td>0x9a489505a00cE272eAa5e07Dba6491314CaE3796</td><td>0x7b08978FA77910f77d273c353C62b5BFB9E6D17B</td><td>0xac1cE734566f390A94b00eb9bf561c2625BF44ea</td></tr><tr><td>PancakeInterfaceMulticall</td><td>0xac1cE734566f390A94b00eb9bf561c2625BF44ea</td><td>0x2a76b93B9Cd441AE8aDA529e0e95826e00556351</td><td>0x3D00CdB4785F0ef20C903A13596e0b9B2c652227</td></tr></tbody></table>\n<table><thead><tr><th>合约</th><th>BSC, ETH, Linea</th><th>zkEVM, Linea, Base, opBNB</th><th>Arbitrum</th><th>zkSync</th><th>GOR, BSC 测试网</th></tr></thead><tbody><tr><td>MixedRouteQuoterV1</td><td>0x678Aa4bF4E210cf2166753e054d5b7c31cc7fa86</td><td>0x4c650FB471fe4e0f476fD3437C3411B1122c4e3B</td><td>0x3652Fc6EDcbD76161b8554388867d3dAb65eCA93</td><td>0x9B1edFB3848660402E4f1DC25733764e80aA627A</td><td>0xB048Bbc1Ee6b733FFfCFb9e9CeF7375518e25997</td></tr><tr><td>TokenValidator</td><td>0x864ED564875BdDD6F421e226494a0E7c071C06f8</td><td>0x556B9306565093C855AEA9AE92A594704c2Cd59e</td><td>0x8be9EA9C6015985AB2F5A216093305A9AaEb8164</td><td>0x08529A4be615746ef31CdbeD46Ce556406787E2F</td><td>0x678Aa4bF4E210cf2166753e054d5b7c31cc7fa86</td></tr></tbody></table>\n","isPage":false,"text":"\n合约BSC, ETH, zkEVM, Arbitrum, Linea, Base, opBNBzkSyncGOR, BSC 测试网SwapRouter (v3)0x1b81D678ffb9C0263b24A97847620C99d213eB140xD70C70AD87aa8D45b8D59600342FB3AEe76E3c680x1b81D678ffb9C0263b24A97847620C99d213eB14V3Migrator0xbC203d7f83677c7ed3F7acEc959963E7F4ECC5C20x556A72A7A3bB3bbd293D923e59b6B56898fB405D0x46A15B0b27311cedF172AB29E4f4766fbE7F4364NonfungiblePositionManager0x46A15B0b27311cedF172AB29E4f4766fbE7F43640xa815e2eD7f7d5B0c49fda367F249232a1B9D28830x427bF5b37357632377eCbEC9de3626C71A5396c1QuoterV20xB048Bbc1Ee6b733FFfCFb9e9CeF7375518e259970x3d146FcE6c1006857750cBe8aF44f76a28041CCc0xbC203d7f83677c7ed3F7acEc959963E7F4ECC5C2TickLens0x9a489505a00cE272eAa5e07Dba6491314CaE37960x7b08978FA77910f77d273c353C62b5BFB9E6D17B0xac1cE734566f390A94b00eb9bf561c2625BF44eaPancakeInterfaceMulticall0xac1cE734566f390A94b00eb9bf561c2625BF44ea0x2a76b93B9Cd441AE8aDA529e0e95826e005563510x3D00CdB4785F0ef20C903A13596e0b9B2c652227\n合约BSC, ETH, LineazkEVM, Linea, Base, opBNBArbitrumzkSyncGOR, BSC 测试网MixedRouteQuoterV10x678Aa4bF4E210cf2166753e054d5b7c31cc7fa860x4c650FB471fe4e0f476fD3437C3411B1122c4e3B0x3652Fc6EDcbD76161b8554388867d3dAb65eCA930x9B1edFB3848660402E4f1DC25733764e80aA627A0xB048Bbc1Ee6b733FFfCFb9e9CeF7375518e25997TokenValidator0x864ED564875BdDD6F421e226494a0E7c071C06f80x556B9306565093C855AEA9AE92A594704c2Cd59e0x8be9EA9C6015985AB2F5A216093305A9AaEb81640x08529A4be615746ef31CdbeD46Ce556406787E2F0x678Aa4bF4E210cf2166753e054d5b7c31cc7fa86\n","title":"外围","titles":["PancakeSwap v3 地址"]},"274":{"href":"/contracts/v3/addresses#聪明路由器","html":"\n<p>能够路由到 v3、v2 和稳定池</p>\n<table><thead><tr><th>区块链</th><th>地址</th></tr></thead><tbody><tr><td>BSC, ETH</td><td>0x13f4EA83D0bd40E75C8222255bc855a974568Dd4</td></tr><tr><td>zkEVM, Linea, Base, opBNB</td><td>0x678Aa4bF4E210cf2166753e054d5b7c31cc7fa86</td></tr><tr><td>Arbitrum</td><td>0x32226588378236Fd0c7c4053999F88aC0e5cAc77</td></tr><tr><td>zkSync</td><td>0xf8b59f3c3Ab33200ec80a8A58b2aA5F5D2a8944C</td></tr></tbody></table>\n<strong>测试网</strong>\n<table><thead><tr><th>区块链</th><th>地址</th></tr></thead><tbody><tr><td>GOR, BSC 测试网</td><td>0x9a489505a00cE272eAa5e07Dba6491314CaE3796</td></tr></tbody></table>\n","isPage":false,"text":"\n能够路由到 v3、v2 和稳定池\n区块链地址BSC, ETH0x13f4EA83D0bd40E75C8222255bc855a974568Dd4zkEVM, Linea, Base, opBNB0x678Aa4bF4E210cf2166753e054d5b7c31cc7fa86Arbitrum0x32226588378236Fd0c7c4053999F88aC0e5cAc77zkSync0xf8b59f3c3Ab33200ec80a8A58b2aA5F5D2a8944C\n测试网\n区块链地址GOR, BSC 测试网0x9a489505a00cE272eAa5e07Dba6491314CaE3796\n","title":"聪明路由器","titles":["PancakeSwap v3 地址"]},"275":{"href":"/contracts/v3/addresses#masterchefv3","html":"\n<strong>主网</strong>\n<table><thead><tr><th>区块链</th><th>地址</th></tr></thead><tbody><tr><td>BSC, ETH</td><td>0x556B9306565093C855AEA9AE92A594704c2Cd59e</td></tr><tr><td>zkEVM</td><td>0xe9c7f3196ab8c09f6616365e8873daeb207c0391</td></tr><tr><td>Arbitrum</td><td>0x5e09ACf80C0296740eC5d6F643005a4ef8DaA694</td></tr><tr><td>zkSync</td><td>0x4c615E78c5fCA1Ad31e4d66eb0D8688d84307463</td></tr><tr><td>Linea</td><td>0x22E2f236065B780FA33EC8C4E58b99ebc8B55c57</td></tr><tr><td>Base</td><td>0xC6A2Db661D5a5690172d8eB0a7DEA2d3008665A3</td></tr></tbody></table>\n<strong>测试网</strong>\n<table><thead><tr><th>区块链</th><th>地址</th></tr></thead><tbody><tr><td>GOR, BSC 测试网</td><td>0x4c650FB471fe4e0f476fD3437C3411B1122c4e3B</td></tr><tr><td>zkEVM</td><td>0xb66b07590B30d4E6E22e45Ddc83B06Bb018A7B44</td></tr><tr><td>Arbitrum</td><td>0x66A9870FF7707936B0B0278cF999C5f2Ac2e42F5</td></tr><tr><td>zkSync</td><td>0x3c6Aa61f72932aD5D7C917737367be32D5509e6f</td></tr><tr><td>Linea</td><td>0xb66b07590B30d4E6E22e45Ddc83B06Bb018A7B44</td></tr><tr><td>Base</td><td>0xAd3fe5Aeabf79B8291F877B367139466c221216e</td></tr></tbody></table>","isPage":false,"text":"\n主网\n区块链地址BSC, ETH0x556B9306565093C855AEA9AE92A594704c2Cd59ezkEVM0xe9c7f3196ab8c09f6616365e8873daeb207c0391Arbitrum0x5e09ACf80C0296740eC5d6F643005a4ef8DaA694zkSync0x4c615E78c5fCA1Ad31e4d66eb0D8688d84307463Linea0x22E2f236065B780FA33EC8C4E58b99ebc8B55c57Base0xC6A2Db661D5a5690172d8eB0a7DEA2d3008665A3\n测试网\n区块链地址GOR, BSC 测试网0x4c650FB471fe4e0f476fD3437C3411B1122c4e3BzkEVM0xb66b07590B30d4E6E22e45Ddc83B06Bb018A7B44Arbitrum0x66A9870FF7707936B0B0278cF999C5f2Ac2e42F5zkSync0x3c6Aa61f72932aD5D7C917737367be32D5509e6fLinea0xb66b07590B30d4E6E22e45Ddc83B06Bb018A7B44Base0xAd3fe5Aeabf79B8291F877B367139466c221216e","title":"MasterchefV3","titles":["PancakeSwap v3 地址"]},"276":{"href":"/contracts/v3/pancakev3factory#pancakev3factory","html":"</header>\n<p><strong>合约名称:</strong> PancakeFactory</p>\n<p><a href=\"/contracts/v3/addresses#core\">合约地址</a></p>\n","isPage":true,"text":"\n合约名称: PancakeFactory\n合约地址\n","title":"PancakeV3Factory","titles":[]},"277":{"href":"/contracts/v3/pancakev3factory#solidity-api","html":"\n<p>部署 PancakeSwap V3 池并管理池协议费用的所有权和控制</p>\n","isPage":false,"text":"\n部署 PancakeSwap V3 池并管理池协议费用的所有权和控制\n","title":"Solidity API","titles":["PancakeV3Factory"]},"278":{"href":"/contracts/v3/pancakev3factory#owner","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> owner</span></span></code></pre>\n<p>返回当前工厂的所有者</p>\n<p><em>可以由当前所有者通过 setOwner 更改</em></p>\n","isPage":false,"text":"\naddress owner\n返回当前工厂的所有者\n可以由当前所有者通过 setOwner 更改\n","title":"owner","titles":["PancakeV3Factory","Solidity API"]},"279":{"href":"/contracts/v3/pancakev3factory#pooldeployer","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> poolDeployer</span></span></code></pre>\n<p>返回当前的池部署者</p>\n","isPage":false,"text":"\naddress poolDeployer\n返回当前的池部署者\n","title":"poolDeployer","titles":["PancakeV3Factory","Solidity API"]},"280":{"href":"/contracts/v3/pancakev3factory#feeamounttickspacing","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">mapping</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint24</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =&gt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> int24</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) feeAmountTickSpacing</span></span></code></pre>\n<p>返回给定费用金额的 Tick 间距（如果启用），或 0（如果未启用）</p>\n<p><em>费用金额不能被移除，因此这个值应该在调用上下文中硬编码或缓存</em></p>\n","isPage":false,"text":"\nmapping(uint24 =&gt; int24) feeAmountTickSpacing\n返回给定费用金额的 Tick 间距（如果启用），或 0（如果未启用）\n费用金额不能被移除，因此这个值应该在调用上下文中硬编码或缓存\n","title":"feeAmountTickSpacing","titles":["PancakeV3Factory","Solidity API"]},"281":{"href":"/contracts/v3/pancakev3factory#getpool","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">mapping</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =&gt;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> mapping</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =&gt;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> mapping</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint24</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =&gt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">))) getPool</span></span></code></pre>\n<p>返回给定代币对和费用的池地址，如果不存在则返回地址 0</p>\n<p><em>tokenA 和 tokenB 可以以任意顺序传递：token0/token1 或 token1/token0</em></p>\n","isPage":false,"text":"\nmapping(address =&gt; mapping(address =&gt; mapping(uint24 =&gt; address))) getPool\n返回给定代币对和费用的池地址，如果不存在则返回地址 0\ntokenA 和 tokenB 可以以任意顺序传递：token0/token1 或 token1/token0\n","title":"getPool","titles":["PancakeV3Factory","Solidity API"]},"282":{"href":"/contracts/v3/pancakev3factory#feeamounttickspacingextrainfo","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">mapping</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint24</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> struct IPancakeV3Factory.TickSpacingExtraInfo) feeAmountTickSpacingExtraInfo</span></span></code></pre>\n<p>返回 Tick 间距的额外信息</p>\n<p><em>费用金额不能被移除，因此这个值应该在调用上下文中硬编码或缓存</em></p>\n","isPage":false,"text":"\nmapping(uint24 =&gt; struct IPancakeV3Factory.TickSpacingExtraInfo) feeAmountTickSpacingExtraInfo\n返回 Tick 间距的额外信息\n费用金额不能被移除，因此这个值应该在调用上下文中硬编码或缓存\n","title":"feeAmountTickSpacingExtraInfo","titles":["PancakeV3Factory","Solidity API"]},"283":{"href":"/contracts/v3/pancakev3factory#constructor","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">constructor</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _poolDeployer) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">public</span></span></code></pre>\n","isPage":false,"text":"\nconstructor(address _poolDeployer) public\n","title":"constructor","titles":["PancakeV3Factory","Solidity API"]},"284":{"href":"/contracts/v3/pancakev3factory#createpool","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> createPool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> tokenA</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> tokenB</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint24</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> fee</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> pool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<p>为给定的两种代币和费用创建一个池</p>\n<p><em>tokenA 和 tokenB 可以按任意顺序传递：token0/token1 或 token1/token0。tickSpacing 从费用中检索。如果池已存在、费用无效或代币参数无效，则该调用将恢复。</em></p>\n<strong>参数</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>tokenA</td><td>address</td><td>目标池中的其中一个代币</td></tr><tr><td>tokenB</td><td>address</td><td>目标池中的另一个代币</td></tr><tr><td>fee</td><td>uint24</td><td>目标池的费用</td></tr></tbody></table>\n<strong>返回值</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>pool</td><td>address</td><td>新创建池的地址</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction createPool(address tokenA, address tokenB, uint24 fee) external returns (address pool)\n为给定的两种代币和费用创建一个池\ntokenA 和 tokenB 可以按任意顺序传递：token0/token1 或 token1/token0。tickSpacing 从费用中检索。如果池已存在、费用无效或代币参数无效，则该调用将恢复。\n参数\n名称类型描述tokenAaddress目标池中的其中一个代币tokenBaddress目标池中的另一个代币feeuint24目标池的费用\n返回值\n名称类型描述pooladdress新创建池的地址\n","title":"createPool","titles":["PancakeV3Factory","Solidity API"]},"285":{"href":"/contracts/v3/pancakev3factory#setowner","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> setOwner</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _owner) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span></span></code></pre>\n<p>更新工厂的所有者</p>\n<p><em>必须由当前所有者调用</em></p>\n<strong>参数</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>_owner</td><td>address</td><td>工厂的新所有者</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction setOwner(address _owner) external\n更新工厂的所有者\n必须由当前所有者调用\n参数\n名称类型描述_owneraddress工厂的新所有者\n","title":"setOwner","titles":["PancakeV3Factory","Solidity API"]},"286":{"href":"/contracts/v3/pancakev3factory#enablefeeamount","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> enableFeeAmount</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint24</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> fee</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">int24</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> tickSpacing</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">public</span></span></code></pre>\n<p>启用具有给定 Tick 间距的费用金额</p>\n<p><em>启用后费用金额不能被移除</em></p>\n<strong>参数</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>fee</td><td>uint24</td><td>要启用的费用金额，以百亿分之一为单位（即 1e-6）</td></tr><tr><td>tickSpacing</td><td>int24</td><td>对于使用给定费用金额创建的所有池强制执行的 Tick 间距</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction enableFeeAmount(uint24 fee, int24 tickSpacing) public\n启用具有给定 Tick 间距的费用金额\n启用后费用金额不能被移除\n参数\n名称类型描述feeuint24要启用的费用金额，以百亿分之一为单位（即 1e-6）tickSpacingint24对于使用给定费用金额创建的所有池强制执行的 Tick 间距\n","title":"enableFeeAmount","titles":["PancakeV3Factory","Solidity API"]},"287":{"href":"/contracts/v3/pancakev3factory#setwhitelistaddress","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> setWhiteListAddress</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> user</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">bool</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> verified</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">public</span></span></code></pre>\n<p>将一个地址添加到白名单中</p>\n<p><em>地址可以由所有者使用布尔值 false 更新</em></p>\n<strong>参数</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>user</td><td>address</td><td>添加到白名单的用户地址</td></tr><tr><td>verified</td><td>bool</td><td>是否验证</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction setWhiteListAddress(address user, bool verified) public\n将一个地址添加到白名单中\n地址可以由所有者使用布尔值 false 更新\n参数\n名称类型描述useraddress添加到白名单的用户地址verifiedbool是否验证\n","title":"setWhiteListAddress","titles":["PancakeV3Factory","Solidity API"]},"288":{"href":"/contracts/v3/pancakev3factory#setfeeamountextrainfo","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> setFeeAmountExtraInfo</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint24</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> fee</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">bool</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> whitelistRequested</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">bool</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> enabled</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">public</span></span></code></pre>\n<p>设置费用金额的额外信息</p>\n<p><em>费用金额的额外信息可以由所有者更新</em></p>\n<strong>参数</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>fee</td><td>uint24</td><td></td></tr><tr><td>whitelistRequested</td><td>bool</td><td>是否只有所有者才能创建的标志</td></tr><tr><td>enabled</td><td>bool</td><td>费用是否启用的标志</td></tr></tbody></table>","isPage":false,"text":"\nfunction setFeeAmountExtraInfo(uint24 fee, bool whitelistRequested, bool enabled) public\n设置费用金额的额外信息\n费用金额的额外信息可以由所有者更新\n参数\n名称类型描述feeuint24whitelistRequestedbool是否只有所有者才能创建的标志enabledbool费用是否启用的标志","title":"setFeeAmountExtraInfo","titles":["PancakeV3Factory","Solidity API"]},"289":{"href":"/contracts/v3/pancakev3pool#pancakev3pool","html":"</header>\n","isPage":true,"text":"\n","title":"PancakeV3Pool","titles":[]},"290":{"href":"/contracts/v3/pancakev3pool#solidity-api","html":"\n","isPage":false,"text":"\n","title":"Solidity API","titles":["PancakeV3Pool"]},"291":{"href":"/contracts/v3/pancakev3pool#factory","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> factory</span></span></code></pre>\n<p>部署池子的合约，必须符合 IPancakeV3Factory 接口</p>\n<strong>返回值</strong>\n","isPage":false,"text":"\naddress factory\n部署池子的合约，必须符合 IPancakeV3Factory 接口\n返回值\n","title":"factory","titles":["PancakeV3Pool","Solidity API"]},"292":{"href":"/contracts/v3/pancakev3pool#token0","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> token0</span></span></code></pre>\n<p>池子中两种代币中排序在前的代币</p>\n<strong>返回值</strong>\n","isPage":false,"text":"\naddress token0\n池子中两种代币中排序在前的代币\n返回值\n","title":"token0","titles":["PancakeV3Pool","Solidity API"]},"293":{"href":"/contracts/v3/pancakev3pool#token1","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> token1</span></span></code></pre>\n<p>池子中两种代币中排序在后的代币</p>\n<strong>返回值</strong>\n","isPage":false,"text":"\naddress token1\n池子中两种代币中排序在后的代币\n返回值\n","title":"token1","titles":["PancakeV3Pool","Solidity API"]},"294":{"href":"/contracts/v3/pancakev3pool#fee","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint24</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fee</span></span></code></pre>\n<p>池子的小费率，以百分之一 BIP 表示，即 1e-6</p>\n<strong>返回值</strong>\n","isPage":false,"text":"\nuint24 fee\n池子的小费率，以百分之一 BIP 表示，即 1e-6\n返回值\n","title":"fee","titles":["PancakeV3Pool","Solidity API"]},"295":{"href":"/contracts/v3/pancakev3pool#tickspacing","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">int24</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tickSpacing</span></span></code></pre>\n<p>池子的 tick 间隔</p>\n<p><em>Tick 只能在此值的倍数处使用，最小值为 1 并且始终为正。例如：一个 tickSpacing 为 3 的池子表示 tick 只能每隔 3 个初始化一次，即 ..., -6, -3, 0, 3, 6, ... 为 int24 是为了避免强制类型转换，即使这个值始终是正数。</em></p>\n<strong>返回值</strong>\n","isPage":false,"text":"\nint24 tickSpacing\n池子的 tick 间隔\nTick 只能在此值的倍数处使用，最小值为 1 并且始终为正。例如：一个 tickSpacing 为 3 的池子表示 tick 只能每隔 3 个初始化一次，即 ..., -6, -3, 0, 3, 6, ... 为 int24 是为了避免强制类型转换，即使这个值始终是正数。\n返回值\n","title":"tickSpacing","titles":["PancakeV3Pool","Solidity API"]},"296":{"href":"/contracts/v3/pancakev3pool#maxliquiditypertick","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint128</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> maxLiquidityPerTick</span></span></code></pre>\n<p>任意 tick 区间中可使用的最大流动性头寸量</p>\n<p><em>此参数在每个 tick 上都是强制执行的，以防止流动性在任意时刻溢出 uint128，并且还可以防止不可用范围内的流动性被用来增加池子中的可用流动性。</em></p>\n<strong>返回值</strong>\n","isPage":false,"text":"\nuint128 maxLiquidityPerTick\n任意 tick 区间中可使用的最大流动性头寸量\n此参数在每个 tick 上都是强制执行的，以防止流动性在任意时刻溢出 uint128，并且还可以防止不可用范围内的流动性被用来增加池子中的可用流动性。\n返回值\n","title":"maxLiquidityPerTick","titles":["PancakeV3Pool","Solidity API"]},"297":{"href":"/contracts/v3/pancakev3pool#protocol_fee_sp","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint32</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> PROTOCOL_FEE_SP</span></span></code></pre>\n","isPage":false,"text":"\nuint32 PROTOCOL_FEE_SP\n","title":"PROTOCOL_FEE_SP","titles":["PancakeV3Pool","Solidity API"]},"298":{"href":"/contracts/v3/pancakev3pool#protocol_fee_denominator","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> PROTOCOL_FEE_DENOMINATOR</span></span></code></pre>\n","isPage":false,"text":"\nuint256 PROTOCOL_FEE_DENOMINATOR\n","title":"PROTOCOL_FEE_DENOMINATOR","titles":["PancakeV3Pool","Solidity API"]},"299":{"href":"/contracts/v3/pancakev3pool#slot0","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Slot0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint160</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sqrtPriceX96;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  int24</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tick;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint16</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> observationIndex;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint16</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> observationCardinality;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint16</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> observationCardinalityNext;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint32</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> feeProtocol;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> unlocked;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nstruct Slot0 {\n  uint160 sqrtPriceX96;\n  int24 tick;\n  uint16 observationIndex;\n  uint16 observationCardinality;\n  uint16 observationCardinalityNext;\n  uint32 feeProtocol;\n  bool unlocked;\n}\n","title":"Slot0","titles":["PancakeV3Pool","Solidity API"]},"300":{"href":"/contracts/v3/pancakev3pool#slot0-1","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> PancakeV3Pool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.Slot0 slot0</span></span></code></pre>\n<p>池子中的第 0 存储槽包含许多值，并且作为单个方法暴露，以节省外部访问时的 gas。</p>\n<strong>返回值</strong>\n","isPage":false,"text":"\nstruct PancakeV3Pool.Slot0 slot0\n池子中的第 0 存储槽包含许多值，并且作为单个方法暴露，以节省外部访问时的 gas。\n返回值\n","title":"slot0","titles":["PancakeV3Pool","Solidity API"]},"301":{"href":"/contracts/v3/pancakev3pool#feegrowthglobal0x128","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> feeGrowthGlobal0X128</span></span></code></pre>\n<p>整个池子生命周期内每单位流动性收集的 token0 的 Q128.128 费用增长</p>\n<p><em>这个值可能会溢出 uint256</em></p>\n","isPage":false,"text":"\nuint256 feeGrowthGlobal0X128\n整个池子生命周期内每单位流动性收集的 token0 的 Q128.128 费用增长\n这个值可能会溢出 uint256\n","title":"feeGrowthGlobal0X128","titles":["PancakeV3Pool","Solidity API"]},"302":{"href":"/contracts/v3/pancakev3pool#feegrowthglobal1x128","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> feeGrowthGlobal1X128</span></span></code></pre>\n<p>整个池子生命周期内每单位流动性收集的 token1 的 Q128.128 费用增长</p>\n<p><em>这个值可能会溢出 uint256</em></p>\n","isPage":false,"text":"\nuint256 feeGrowthGlobal1X128\n整个池子生命周期内每单位流动性收集的 token1 的 Q128.128 费用增长\n这个值可能会溢出 uint256\n","title":"feeGrowthGlobal1X128","titles":["PancakeV3Pool","Solidity API"]},"303":{"href":"/contracts/v3/pancakev3pool#protocolfees","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ProtocolFees</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint128</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> token0;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint128</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> token1;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nstruct ProtocolFees {\n  uint128 token0;\n  uint128 token1;\n}\n","title":"ProtocolFees","titles":["PancakeV3Pool","Solidity API"]},"304":{"href":"/contracts/v3/pancakev3pool#protocolfees-1","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> PancakeV3Pool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.ProtocolFees protocolFees</span></span></code></pre>\n<p>协议应得的 token0 和 token1 的数量</p>\n<p><em>协议费用在任意代币中都不会超过 uint128 最大值</em></p>\n","isPage":false,"text":"\nstruct PancakeV3Pool.ProtocolFees protocolFees\n协议应得的 token0 和 token1 的数量\n协议费用在任意代币中都不会超过 uint128 最大值\n","title":"protocolFees","titles":["PancakeV3Pool","Solidity API"]},"305":{"href":"/contracts/v3/pancakev3pool#liquidity","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint128</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> liquidity</span></span></code></pre>\n<p>池子当前范围内可用的流动性</p>\n<p><em>这个值与所有 tick 的总流动性没有关系</em></p>\n","isPage":false,"text":"\nuint128 liquidity\n池子当前范围内可用的流动性\n这个值与所有 tick 的总流动性没有关系\n","title":"liquidity","titles":["PancakeV3Pool","Solidity API"]},"306":{"href":"/contracts/v3/pancakev3pool#ticks","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">mapping</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">int24</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> struct Tick.Info) ticks</span></span></code></pre>\n<p>查找池子中特定 tick 的信息</p>\n<strong>参数</strong>\n<strong>返回值</strong>\n","isPage":false,"text":"\nmapping(int24 =&gt; struct Tick.Info) ticks\n查找池子中特定 tick 的信息\n参数\n返回值\n","title":"ticks","titles":["PancakeV3Pool","Solidity API"]},"307":{"href":"/contracts/v3/pancakev3pool#tickbitmap","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">mapping</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">int16</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =&gt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) tickBitmap</span></span></code></pre>\n<p>返回 256 位打包的 tick 初始化布尔值。详见 TickBitmap 获取更多信息</p>\n","isPage":false,"text":"\nmapping(int16 =&gt; uint256) tickBitmap\n返回 256 位打包的 tick 初始化布尔值。详见 TickBitmap 获取更多信息\n","title":"tickBitmap","titles":["PancakeV3Pool","Solidity API","ticks"]},"308":{"href":"/contracts/v3/pancakev3pool#positions","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">mapping</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">bytes32</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> struct Position.Info) positions</span></span></code></pre>\n<p>通过位置键返回有关特定位置的信息</p>\n<strong>参数</strong>\n<strong>返回值</strong>\n","isPage":false,"text":"\nmapping(bytes32 =&gt; struct Position.Info) positions\n通过位置键返回有关特定位置的信息\n参数\n返回值\n","title":"positions","titles":["PancakeV3Pool","Solidity API"]},"309":{"href":"/contracts/v3/pancakev3pool#observations","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Oracle</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.Observation[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">65535</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">] observations</span></span></code></pre>\n<p>返回特定观测索引的数据</p>\n<p><em>您可能更愿意使用 #observe()，而不是此方法来获取某个时间戳之前的数据，不是数组中特定索引的数据。</em></p>\n<strong>参数</strong>\n<strong>返回值</strong>\n","isPage":false,"text":"\nstruct Oracle.Observation[65535] observations\n返回特定观测索引的数据\n您可能更愿意使用 #observe()，而不是此方法来获取某个时间戳之前的数据，不是数组中特定索引的数据。\n参数\n返回值\n","title":"observations","titles":["PancakeV3Pool","Solidity API","positions"]},"310":{"href":"/contracts/v3/pancakev3pool#lmpool","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">contract</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> IPancakeV3LmPool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> lmPool</span></span></code></pre>\n","isPage":false,"text":"\ncontract IPancakeV3LmPool lmPool\n","title":"lmPool","titles":["PancakeV3Pool","Solidity API"]},"311":{"href":"/contracts/v3/pancakev3pool#setlmpoolevent","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">event</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> SetLmPoolEvent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> addr</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nevent SetLmPoolEvent(address addr)\n","title":"SetLmPoolEvent","titles":["PancakeV3Pool","Solidity API"]},"312":{"href":"/contracts/v3/pancakev3pool#lock","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">modifier</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> lock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span></code></pre>\n<p><em>互斥的重入保护装置，用于从一个方法进入池子。这个方法也防止在池子初始化之前对一个函数的进入。由于我们使用余额检查来确定铸造、交换和闪电贷等交互的支付状态，该重入防护装置在合约中是必需的。</em></p>\n","isPage":false,"text":"\nmodifier lock()\n互斥的重入保护装置，用于从一个方法进入池子。这个方法也防止在池子初始化之前对一个函数的进入。由于我们使用余额检查来确定铸造、交换和闪电贷等交互的支付状态，该重入防护装置在合约中是必需的。\n","title":"lock","titles":["PancakeV3Pool","Solidity API"]},"313":{"href":"/contracts/v3/pancakev3pool#onlyfactoryowner","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">modifier</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> onlyFactoryOwner</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span></code></pre>\n<p><em>仅允许 IPancakeV3Factory#owner() 返回的地址调用该函数</em></p>\n","isPage":false,"text":"\nmodifier onlyFactoryOwner()\n仅允许 IPancakeV3Factory#owner() 返回的地址调用该函数\n","title":"onlyFactoryOwner","titles":["PancakeV3Pool","Solidity API"]},"314":{"href":"/contracts/v3/pancakev3pool#constructor","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">constructor</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">public</span></span></code></pre>\n","isPage":false,"text":"\nconstructor() public\n","title":"constructor","titles":["PancakeV3Pool","Solidity API"]},"315":{"href":"/contracts/v3/pancakev3pool#_blocktimestamp","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> _blockTimestamp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">internal</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> view</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> virtual</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint32</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<p><em>返回被截断为 32 位的区块时间戳，即 mod 2**32。此方法在测试中被覆盖。</em></p>\n","isPage":false,"text":"\nfunction _blockTimestamp() internal view virtual returns (uint32)\n返回被截断为 32 位的区块时间戳，即 mod 2**32。此方法在测试中被覆盖。\n","title":"_blockTimestamp","titles":["PancakeV3Pool","Solidity API"]},"316":{"href":"/contracts/v3/pancakev3pool#snapshotcumulativesinside","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> snapshotCumulativesInside</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">int24</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> tickLower</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">int24</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> tickUpper</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> view</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">int56</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> tickCumulativeInside</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint160</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> secondsPerLiquidityInsideX128</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint32</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> secondsInside</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<p>返回在 tick 范围内的 tick 累积值、每流动性秒数 和 每秒流动性</p>\n<p><em>快照必须只能与其他快照进行比较，而不是比较因子在期间内计算的快照。即，快照不能被比较，如果在第一个快照拍摄和第二个快照拍摄之间的整个期间内未持有头寸。</em></p>\n<strong>参数</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>tickLower</td><td>int24</td><td>范围的下限 tick</td></tr><tr><td>tickUpper</td><td>int24</td><td>范围的上限 tick</td></tr></tbody></table>\n<strong>返回值</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>tickCumulativeInside</td><td>int56</td><td>该范围内 tick 累积器的快照</td></tr><tr><td>secondsPerLiquidityInsideX128</td><td>uint160</td><td>该范围内每流动性秒数的快照</td></tr><tr><td>secondsInside</td><td>uint32</td><td>该范围内每流动性的秒数的快照</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction snapshotCumulativesInside(int24 tickLower, int24 tickUpper) external view returns (int56 tickCumulativeInside, uint160 secondsPerLiquidityInsideX128, uint32 secondsInside)\n返回在 tick 范围内的 tick 累积值、每流动性秒数 和 每秒流动性\n快照必须只能与其他快照进行比较，而不是比较因子在期间内计算的快照。即，快照不能被比较，如果在第一个快照拍摄和第二个快照拍摄之间的整个期间内未持有头寸。\n参数\n名称类型描述tickLowerint24范围的下限 ticktickUpperint24范围的上限 tick\n返回值\n名称类型描述tickCumulativeInsideint56该范围内 tick 累积器的快照secondsPerLiquidityInsideX128uint160该范围内每流动性秒数的快照secondsInsideuint32该范围内每流动性的秒数的快照\n","title":"snapshotCumulativesInside","titles":["PancakeV3Pool","Solidity API"]},"317":{"href":"/contracts/v3/pancakev3pool#observe","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> observe</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint32</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[] </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">secondsAgos</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> view</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">int56</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[] </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">tickCumulatives</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint160</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[] </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">secondsPerLiquidityCumulativeX128s</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<p>返回从当前区块时间戳起的每个时间戳 <code>secondsAgo</code> 的累积 tick 和流动性</p>\n<p><em>为了获得时间加权平均 tick 或范围内流动性，您需要用两个值调用这个方法，一个代表该期间的开始，另一个代表该期间结束。例如，要获得过去一小时的时间加权平均 tick，您必须用 <code>secondsAgos = [3600, 0]</code> 调用它。时间加权平均 tick 表示池子的几何时间加权平均价格，单位为 sqrt(1.0001) 的 log base 的 token1 / token0 比率。TickMath 库可以用来从 tick 值到比率的转换。</em></p>\n<strong>参数</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>secondsAgos</td><td>uint32[]</td><td>应返回每个<code>secondsAgo</code>的累积 tick 和流动性值的时间间隔</td></tr></tbody></table>\n<strong>返回值</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>tickCumulatives</td><td>int56[]</td><td>从当前区块时间戳起的每个 <code>secondsAgo</code> 的累积 tick 值</td></tr><tr><td>secondsPerLiquidityCumulativeX128s</td><td>uint160[]</td><td>从当前区块时间戳起的每个 <code>secondsAgo</code> 的累积秒数范围内流动性值</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction observe(uint32[] secondsAgos) external view returns (int56[] tickCumulatives, uint160[] secondsPerLiquidityCumulativeX128s)\n返回从当前区块时间戳起的每个时间戳 secondsAgo 的累积 tick 和流动性\n为了获得时间加权平均 tick 或范围内流动性，您需要用两个值调用这个方法，一个代表该期间的开始，另一个代表该期间结束。例如，要获得过去一小时的时间加权平均 tick，您必须用 secondsAgos = [3600, 0] 调用它。时间加权平均 tick 表示池子的几何时间加权平均价格，单位为 sqrt(1.0001) 的 log base 的 token1 / token0 比率。TickMath 库可以用来从 tick 值到比率的转换。\n参数\n名称类型描述secondsAgosuint32[]应返回每个secondsAgo的累积 tick 和流动性值的时间间隔\n返回值\n名称类型描述tickCumulativesint56[]从当前区块时间戳起的每个 secondsAgo 的累积 tick 值secondsPerLiquidityCumulativeX128suint160[]从当前区块时间戳起的每个 secondsAgo 的累积秒数范围内流动性值\n","title":"observe","titles":["PancakeV3Pool","Solidity API"]},"318":{"href":"/contracts/v3/pancakev3pool#increaseobservationcardinalitynext","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> increaseObservationCardinalityNext</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint16</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> observationCardinalityNext</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span></span></code></pre>\n<p>增加池子将存储的价格和流动性观测的最大数量</p>\n<p><em>如果池子已经有一个 observationCardinalityNext 大于或等于输入 observationCardinalityNext，则此方法将不起作用。</em></p>\n<strong>参数</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>observationCardinalityNext</td><td>uint16</td><td>池子要存储的最小观察数量</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction increaseObservationCardinalityNext(uint16 observationCardinalityNext) external\n增加池子将存储的价格和流动性观测的最大数量\n如果池子已经有一个 observationCardinalityNext 大于或等于输入 observationCardinalityNext，则此方法将不起作用。\n参数\n名称类型描述observationCardinalityNextuint16池子要存储的最小观察数量\n","title":"increaseObservationCardinalityNext","titles":["PancakeV3Pool","Solidity API"]},"319":{"href":"/contracts/v3/pancakev3pool#initialize","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint160</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> sqrtPriceX96</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span></span></code></pre>\n<p>设置池子的初始价格</p>\n<p><em>未加锁，因为它初始化未锁定</em></p>\n<strong>参数</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>sqrtPriceX96</td><td>uint160</td><td>池子的初始 sqrt 价格，以 Q64.96 为单位</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction initialize(uint160 sqrtPriceX96) external\n设置池子的初始价格\n未加锁，因为它初始化未锁定\n参数\n名称类型描述sqrtPriceX96uint160池子的初始 sqrt 价格，以 Q64.96 为单位\n","title":"initialize","titles":["PancakeV3Pool","Solidity API"]},"320":{"href":"/contracts/v3/pancakev3pool#modifypositionparams","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ModifyPositionParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> owner;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  int24</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tickLower;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  int24</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tickUpper;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  int128</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> liquidityDelta;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nstruct ModifyPositionParams {\n  address owner;\n  int24 tickLower;\n  int24 tickUpper;\n  int128 liquidityDelta;\n}\n","title":"ModifyPositionParams","titles":["PancakeV3Pool","Solidity API"]},"321":{"href":"/contracts/v3/pancakev3pool#mint","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> mint</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> recipient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">int24</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> tickLower</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">int24</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> tickUpper</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint128</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amount</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">bytes</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> data</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amount0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amount1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<p>为给定的收款人/tickLower/tickUpper 位置添加流动性</p>\n<p>_noDelegateCall 间接通过 _modifyPosition 应用</p>\n<strong>参数</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>recipient</td><td>address</td><td>将为其创建流动性的地址</td></tr><tr><td>tickLower</td><td>int24</td><td>添加流动性的位置的下限 tick</td></tr><tr><td>tickUpper</td><td>int24</td><td>添加流动性的位置的上限 tick</td></tr><tr><td>amount</td><td>uint128</td><td>添加的流动性数量</td></tr><tr><td>data</td><td>bytes</td><td>在回调时传递的数据</td></tr></tbody></table>\n<strong>返回值</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>amount0</td><td>uint256</td><td>为铸造给定的流动性数量支付的 token0 的数量。与回调中的值匹配</td></tr><tr><td>amount1</td><td>uint256</td><td>为铸造给定的流动性数量支付的 token1 的数量。与回调中的值匹配</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction mint(address recipient, int24 tickLower, int24 tickUpper, uint128 amount, bytes data) external returns (uint256 amount0, uint256 amount1)\n为给定的收款人/tickLower/tickUpper 位置添加流动性\n_noDelegateCall 间接通过 _modifyPosition 应用\n参数\n名称类型描述recipientaddress将为其创建流动性的地址tickLowerint24添加流动性的位置的下限 ticktickUpperint24添加流动性的位置的上限 tickamountuint128添加的流动性数量databytes在回调时传递的数据\n返回值\n名称类型描述amount0uint256为铸造给定的流动性数量支付的 token0 的数量。与回调中的值匹配amount1uint256为铸造给定的流动性数量支付的 token1 的数量。与回调中的值匹配\n","title":"mint","titles":["PancakeV3Pool","Solidity API"]},"322":{"href":"/contracts/v3/pancakev3pool#collect","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> collect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> recipient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">int24</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> tickLower</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">int24</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> tickUpper</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint128</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amount0Requested</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint128</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amount1Requested</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint128</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amount0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint128</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amount1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<p>收集欠头寸的代币</p>\n<p><em>不重新计算应收取的费用，这必须通过铸造或烧毁任意数量的流动性来完成。Collect 必须由头寸所有者调用。要仅提取 token0 或 token1，可以将 amount0Requested 或 amount1Requested 设置为零。要提取所有欠的代币，调用者可以传递任何大于实际欠款代币的值，例如 type(uint128).max。欠款代币可能来自累计的交换费用或烧毁的流动性。</em></p>\n<strong>参数</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>recipient</td><td>address</td><td>接收收集到的费用的地址</td></tr><tr><td>tickLower</td><td>int24</td><td>需要收集费用的位置的下限 tick</td></tr><tr><td>tickUpper</td><td>int24</td><td>需要收集费用的位置的上限 tick</td></tr><tr><td>amount0Requested</td><td>uint128</td><td>需要从应付费用中提取的 token0 数量</td></tr><tr><td>amount1Requested</td><td>uint128</td><td>需要从应付费用中提取的 token1 数量</td></tr></tbody></table>\n<strong>返回值</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>amount0</td><td>uint128</td><td>收集的 token0 费用的数量</td></tr><tr><td>amount1</td><td>uint128</td><td>收集的 token1 费用的数量</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction collect(address recipient, int24 tickLower, int24 tickUpper, uint128 amount0Requested, uint128 amount1Requested) external returns (uint128 amount0, uint128 amount1)\n收集欠头寸的代币\n不重新计算应收取的费用，这必须通过铸造或烧毁任意数量的流动性来完成。Collect 必须由头寸所有者调用。要仅提取 token0 或 token1，可以将 amount0Requested 或 amount1Requested 设置为零。要提取所有欠的代币，调用者可以传递任何大于实际欠款代币的值，例如 type(uint128).max。欠款代币可能来自累计的交换费用或烧毁的流动性。\n参数\n名称类型描述recipientaddress接收收集到的费用的地址tickLowerint24需要收集费用的位置的下限 ticktickUpperint24需要收集费用的位置的上限 tickamount0Requesteduint128需要从应付费用中提取的 token0 数量amount1Requesteduint128需要从应付费用中提取的 token1 数量\n返回值\n名称类型描述amount0uint128收集的 token0 费用的数量amount1uint128收集的 token1 费用的数量\n","title":"collect","titles":["PancakeV3Pool","Solidity API"]},"323":{"href":"/contracts/v3/pancakev3pool#burn","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> burn</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">int24</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> tickLower</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">int24</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> tickUpper</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint128</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amount</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amount0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amount1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<p>将流动性从发送方烧毁并将流动性欠款记入池子头寸</p>\n<p>_noDelegateCall 间接通过 _modifyPosition 应用</p>\n<strong>参数</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>tickLower</td><td>int24</td><td>烧毁流动性的位置的下限 tick</td></tr><tr><td>tickUpper</td><td>int24</td><td>烧毁流动性的位置的上限 tick</td></tr><tr><td>amount</td><td>uint128</td><td>烧毁的流动性数量</td></tr></tbody></table>\n<strong>返回值</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>amount0</td><td>uint256</td><td>发送给收款人的 token0 数量</td></tr><tr><td>amount1</td><td>uint256</td><td>发送给收款人的 token1 数量</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction burn(int24 tickLower, int24 tickUpper, uint128 amount) external returns (uint256 amount0, uint256 amount1)\n将流动性从发送方烧毁并将流动性欠款记入池子头寸\n_noDelegateCall 间接通过 _modifyPosition 应用\n参数\n名称类型描述tickLowerint24烧毁流动性的位置的下限 ticktickUpperint24烧毁流动性的位置的上限 tickamountuint128烧毁的流动性数量\n返回值\n名称类型描述amount0uint256发送给收款人的 token0 数量amount1uint256发送给收款人的 token1 数量\n","title":"burn","titles":["PancakeV3Pool","Solidity API"]},"324":{"href":"/contracts/v3/pancakev3pool#swapcache","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> SwapCache</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint32</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> feeProtocol;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint128</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> liquidityStart;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint32</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> blockTimestamp;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  int56</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tickCumulative;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint160</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> secondsPerLiquidityCumulativeX128;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> computedLatestObservation;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nstruct SwapCache {\n  uint32 feeProtocol;\n  uint128 liquidityStart;\n  uint32 blockTimestamp;\n  int56 tickCumulative;\n  uint160 secondsPerLiquidityCumulativeX128;\n  bool computedLatestObservation;\n}\n","title":"SwapCache","titles":["PancakeV3Pool","Solidity API"]},"325":{"href":"/contracts/v3/pancakev3pool#swapstate","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> SwapState</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  int256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> amountSpecifiedRemaining;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  int256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> amountCalculated;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint160</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sqrtPriceX96;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  int24</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tick;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> feeGrowthGlobalX128;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint128</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> protocolFee;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint128</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> liquidity;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nstruct SwapState {\n  int256 amountSpecifiedRemaining;\n  int256 amountCalculated;\n  uint160 sqrtPriceX96;\n  int24 tick;\n  uint256 feeGrowthGlobalX128;\n  uint128 protocolFee;\n  uint128 liquidity;\n}\n","title":"SwapState","titles":["PancakeV3Pool","Solidity API"]},"326":{"href":"/contracts/v3/pancakev3pool#stepcomputations","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> StepComputations</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint160</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sqrtPriceStartX96;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  int24</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tickNext;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> initialized;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint160</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sqrtPriceNextX96;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> amountIn;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> amountOut;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> feeAmount;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nstruct StepComputations {\n  uint160 sqrtPriceStartX96;\n  int24 tickNext;\n  bool initialized;\n  uint160 sqrtPriceNextX96;\n  uint256 amountIn;\n  uint256 amountOut;\n  uint256 feeAmount;\n}\n","title":"StepComputations","titles":["PancakeV3Pool","Solidity API"]},"327":{"href":"/contracts/v3/pancakev3pool#swap","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> swap</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> recipient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">bool</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> zeroForOne</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">int256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountSpecified</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint160</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> sqrtPriceLimitX96</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">bytes</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> data</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">int256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amount0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">int256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amount1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<p>交换 token0 和 token1，或 token1 和 token0</p>\n<p><em>该方法的调用者将在回调形式收到 IPancakeV3SwapCallback#pancakeV3SwapCallback</em></p>\n<strong>参数</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>recipient</td><td>address</td><td>收到交换输出的地址</td></tr><tr><td>zeroForOne</td><td>bool</td><td>交换方向，token0 到 token1 为 true，token1 到 token0 为 false</td></tr><tr><td>amountSpecified</td><td>int256</td><td>交换的数量，隐含地配置为确切输入量（正数）或确切输出量（负数）</td></tr><tr><td>sqrtPriceLimitX96</td><td>uint160</td><td>Q64.96 的 sqrt 价格限制。如果 zeroForOne，交换后价格不能低于此值。如果 oneForZero，交换后价格不能高于此值</td></tr><tr><td>data</td><td>bytes</td><td>在回调时传递的任何数据</td></tr></tbody></table>\n<strong>返回值</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>amount0</td><td>int256</td><td>池子中 token0 余额的变化量，负数表示准确金额，正数表示最小金额</td></tr><tr><td>amount1</td><td>int256</td><td>池子中 token1 余额的变化量，负数表示准确金额，正数表示最小金额</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) external returns (int256 amount0, int256 amount1)\n交换 token0 和 token1，或 token1 和 token0\n该方法的调用者将在回调形式收到 IPancakeV3SwapCallback#pancakeV3SwapCallback\n参数\n名称类型描述recipientaddress收到交换输出的地址zeroForOnebool交换方向，token0 到 token1 为 true，token1 到 token0 为 falseamountSpecifiedint256交换的数量，隐含地配置为确切输入量（正数）或确切输出量（负数）sqrtPriceLimitX96uint160Q64.96 的 sqrt 价格限制。如果 zeroForOne，交换后价格不能低于此值。如果 oneForZero，交换后价格不能高于此值databytes在回调时传递的任何数据\n返回值\n名称类型描述amount0int256池子中 token0 余额的变化量，负数表示准确金额，正数表示最小金额amount1int256池子中 token1 余额的变化量，负数表示准确金额，正数表示最小金额\n","title":"swap","titles":["PancakeV3Pool","Solidity API"]},"328":{"href":"/contracts/v3/pancakev3pool#flash","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> flash</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> recipient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amount0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amount1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">bytes</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> data</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span></span></code></pre>\n<p>接收 token0 和/或 token1 再加上费用，并在回调中偿还</p>\n<p><em>此方法的调用者将在回调形式收到 IPancakeV3FlashCallback#pancakeV3FlashCallback。可以传递 0 amount1 调用回调捐赠基础代币予当前范围内的流动性提供者。</em></p>\n<strong>参数</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>recipient</td><td>address</td><td>接收 token0 和 token1 数量的地址</td></tr><tr><td>amount0</td><td>uint256</td><td>发送的 token0 数量</td></tr><tr><td>amount1</td><td>uint256</td><td>发送的 token1 数量</td></tr><tr><td>data</td><td>bytes</td><td>在回调时传递的任何数据</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction flash(address recipient, uint256 amount0, uint256 amount1, bytes data) external\n接收 token0 和/或 token1 再加上费用，并在回调中偿还\n此方法的调用者将在回调形式收到 IPancakeV3FlashCallback#pancakeV3FlashCallback。可以传递 0 amount1 调用回调捐赠基础代币予当前范围内的流动性提供者。\n参数\n名称类型描述recipientaddress接收 token0 和 token1 数量的地址amount0uint256发送的 token0 数量amount1uint256发送的 token1 数量databytes在回调时传递的任何数据\n","title":"flash","titles":["PancakeV3Pool","Solidity API"]},"329":{"href":"/contracts/v3/pancakev3pool#setfeeprotocol","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> setFeeProtocol</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint32</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> feeProtocol0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint32</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> feeProtocol1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span></span></code></pre>\n<p>设置协议的费用比例分母</p>\n<strong>参数</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>feeProtocol0</td><td>uint32</td><td>池子的 token0 新的协议费用</td></tr><tr><td>feeProtocol1</td><td>uint32</td><td>池子的 token1 新的协议费用</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction setFeeProtocol(uint32 feeProtocol0, uint32 feeProtocol1) external\n设置协议的费用比例分母\n参数\n名称类型描述feeProtocol0uint32池子的 token0 新的协议费用feeProtocol1uint32池子的 token1 新的协议费用\n","title":"setFeeProtocol","titles":["PancakeV3Pool","Solidity API"]},"330":{"href":"/contracts/v3/pancakev3pool#collectprotocol","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> collectProtocol</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> recipient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint128</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amount0Requested</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint128</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amount1Requested</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint128</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amount0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint128</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amount1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<p>收集池子累计的协议费用</p>\n<strong>参数</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>recipient</td><td>address</td><td>应收集协议费用的地址</td></tr><tr><td>amount0Requested</td><td>uint128</td><td>发送的最大 token0 数量，可以是 0 以仅收集 token1 的费用</td></tr><tr><td>amount1Requested</td><td>uint128</td><td>发送的最大 token1 数量，可以是 0 以仅收集 token0 的费用</td></tr></tbody></table>\n<strong>返回值</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>amount0</td><td>uint128</td><td>收集到的协议费用 token0 数量</td></tr><tr><td>amount1</td><td>uint128</td><td>收集到的协议费用 token1 数量</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction collectProtocol(address recipient, uint128 amount0Requested, uint128 amount1Requested) external returns (uint128 amount0, uint128 amount1)\n收集池子累计的协议费用\n参数\n名称类型描述recipientaddress应收集协议费用的地址amount0Requesteduint128发送的最大 token0 数量，可以是 0 以仅收集 token1 的费用amount1Requesteduint128发送的最大 token1 数量，可以是 0 以仅收集 token0 的费用\n返回值\n名称类型描述amount0uint128收集到的协议费用 token0 数量amount1uint128收集到的协议费用 token1 数量\n","title":"collectProtocol","titles":["PancakeV3Pool","Solidity API"]},"331":{"href":"/contracts/v3/pancakev3pool#setlmpool","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> setLmPool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">contract</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> IPancakeV3LmPool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _lmPool) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span></span></code></pre>","isPage":false,"text":"\nfunction setLmPool(contract IPancakeV3LmPool _lmPool) external","title":"setLmPool","titles":["PancakeV3Pool","Solidity API"]},"332":{"href":"/contracts-aptos/v2/overview#v2","html":"</header>\n<p><a href=\"router-v2\">router-v2.md</a></p>\n","isPage":true,"text":"\nrouter-v2.md\n","title":"v2","titles":[]},"333":{"href":"/contracts-aptos/v2/overview#审计","html":"\n<p><a href=\"https://github.com/slowmist/Knowledge-Base/blob/master/open-report-V2/smart-contract/SlowMist%20Audit%20Report%20-%20PancakeSwap_MOVE_en-us.pdf\">Slowmist&#x27;s PancakeSwap Aptos DEX 安全审计</a></p>\n<a class=\"vocs_Anchor vocs_Link vocs_Link_accent_underlined\" href=\"/OtterSec_Audit_Report_PancakeSwap_Swap_Move.pdf\" target=\"_blank\"><p>OtterSec&#x27;s PancakeSwap Aptos DEX 安全审计</p></a>\n<p><a href=\"https://github.com/HalbornSecurity/PublicReports/blob/master/Move%20Smart%20Contract%20Audits/PancakeSwap_Aptos_DEX_Move_Smart_Contract_Security_Audit_Report_Halborn_Final.pdf\">Halborn&#x27;s PancakeSwap Aptos DEX with in-house admin multisig safe 安全审计</a></p>","isPage":false,"text":"\nSlowmist&#x27;s PancakeSwap Aptos DEX 安全审计\nOtterSec&#x27;s PancakeSwap Aptos DEX 安全审计\nHalborn&#x27;s PancakeSwap Aptos DEX with in-house admin multisig safe 安全审计","title":"审计","titles":["v2"]},"334":{"href":"/contracts-aptos/v2/router-v2#router-v2","html":"</header>\n","isPage":true,"text":"\n","title":"Router v2","titles":[]},"335":{"href":"/contracts-aptos/v2/router-v2#合约信息","html":"\n<p><strong>合约名称</strong>: pancake::router<br/>\n<strong>合约地址:</strong> c7efb4076dbe143cbcd98cfaaa929ecfc8f299203dfff63b95ccb6bfe19850fa::router</p>\n<p><strong>管理员多签地址</strong>: b11ccaed0056a75472539c2b0d9511c82fc6a36622bec7578216af5fe550dd0d</p>\n<p><a href=\"https://explorer.aptoslabs.com/account/0xc7efb4076dbe143cbcd98cfaaa929ecfc8f299203dfff63b95ccb6bfe19850fa/modules\">在 Aptos Explorer 上查看</a></p>\n","isPage":false,"text":"\n合约名称: pancake::router\n合约地址: c7efb4076dbe143cbcd98cfaaa929ecfc8f299203dfff63b95ccb6bfe19850fa::router\n管理员多签地址: b11ccaed0056a75472539c2b0d9511c82fc6a36622bec7578216af5fe550dd0d\n在 Aptos Explorer 上查看\n","title":"合约信息","titles":["Router v2"]},"336":{"href":"/contracts-aptos/v2/router-v2#类型","html":"\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>X</td><td><code>type address</code></td><td>交易对中 token X 的地址。</td></tr><tr><td>Y</td><td><code>type address</code></td><td>交易对中 token Y 的地址。</td></tr></tbody></table>\n","isPage":false,"text":"\n名称类型描述Xtype address交易对中 token X 的地址。Ytype address交易对中 token Y 的地址。\n","title":"类型","titles":["Router v2"]},"337":{"href":"/contracts-aptos/v2/router-v2#入口函数","html":"\n","isPage":false,"text":"\n","title":"入口函数","titles":["Router v2"]},"338":{"href":"/contracts-aptos/v2/router-v2#创建交易对","html":"\n<p>创建用于交换的交易对池。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">public entry fun create_pair&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">X</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Y</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;(sender</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">signer)</span></span></code></pre>\n","isPage":false,"text":"\n创建用于交换的交易对池。\npublic entry fun create_pair&lt;X, Y&gt;(sender: &amp;signer)\n","title":"创建交易对","titles":["Router v2","入口函数"]},"339":{"href":"/contracts-aptos/v2/router-v2#参数","html":"\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>sender</td><td><code>signer</code></td><td>调用函数时的发送者签名者。</td></tr></tbody></table>\n","isPage":false,"text":"\n名称类型描述sendersigner调用函数时的发送者签名者。\n","title":"参数","titles":["Router v2","入口函数","创建交易对"]},"340":{"href":"/contracts-aptos/v2/router-v2#添加流动性","html":"\n<p>向池中添加流动性。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">public entry fun add_liquidity&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">X</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Y</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sender</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">signer,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    amount_x_desired</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    amount_y_desired</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    amount_x_min</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    amount_y_min</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\n向池中添加流动性。\npublic entry fun add_liquidity&lt;X, Y&gt;(\n    sender: &amp;signer,\n    amount_x_desired: u64,\n    amount_y_desired: u64,\n    amount_x_min: u64,\n    amount_y_min: u64,\n)\n","title":"添加流动性","titles":["Router v2","入口函数"]},"341":{"href":"/contracts-aptos/v2/router-v2#参数-1","html":"\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>sender</td><td><code>signer</code></td><td>调用函数时的发送者签名者。</td></tr><tr><td>amount_x_desired</td><td><code>u64</code></td><td>希望提供的 tokenX 数量。</td></tr><tr><td>amount_y_desired</td><td>u64</td><td>希望提供的 tokenY 数量。</td></tr><tr><td>amount_x_min</td><td>u64</td><td>提供的 tokenX 最小数量（滑点影响）。</td></tr><tr><td>amount_y_min</td><td>u64</td><td>提供的 tokenY 最小数量（滑点影响）。</td></tr></tbody></table>\n","isPage":false,"text":"\n名称类型描述sendersigner调用函数时的发送者签名者。amount_x_desiredu64希望提供的 tokenX 数量。amount_y_desiredu64希望提供的 tokenY 数量。amount_x_minu64提供的 tokenX 最小数量（滑点影响）。amount_y_minu64提供的 tokenY 最小数量（滑点影响）。\n","title":"参数","titles":["Router v2","入口函数","添加流动性"]},"342":{"href":"/contracts-aptos/v2/router-v2#移除流动性","html":"\n<p>从池中移除流动性。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">public entry fun remove_liquidity&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">X</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Y</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sender</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">signer,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    liquidity</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    amount_x_min</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    amount_y_min</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\n从池中移除流动性。\npublic entry fun remove_liquidity&lt;X, Y&gt;(\n    sender: &amp;signer,\n    liquidity: u64,\n    amount_x_min: u64,\n    amount_y_min: u64\n)\n","title":"移除流动性","titles":["Router v2","入口函数"]},"343":{"href":"/contracts-aptos/v2/router-v2#参数-2","html":"\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>sender</td><td><code>signer</code></td><td>调用函数时的发送者签名者。</td></tr><tr><td>liquidity</td><td><code>u64</code></td><td>要移除的 LP 代币数量。</td></tr><tr><td>amount_x_min</td><td><code>u64</code></td><td>要移除的 tokenX 最小数量（滑点影响）。</td></tr><tr><td>amount_y_min</td><td><code>u64</code></td><td>要移除的 tokenY 最小数量（滑点影响）。</td></tr></tbody></table>\n","isPage":false,"text":"\n名称类型描述sendersigner调用函数时的发送者签名者。liquidityu64要移除的 LP 代币数量。amount_x_minu64要移除的 tokenX 最小数量（滑点影响）。amount_y_minu64要移除的 tokenY 最小数量（滑点影响）。\n","title":"参数","titles":["Router v2","入口函数","移除流动性"]},"344":{"href":"/contracts-aptos/v2/router-v2#交换确切输入","html":"\n<p>交换确切数量的 tokenX 到 tokenY。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">public entry fun swap_exact_input&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">X</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Y</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sender</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">signer,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    x_in</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    y_min_out</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\n交换确切数量的 tokenX 到 tokenY。\npublic entry fun swap_exact_input&lt;X, Y&gt;(\n    sender: &amp;signer,\n    x_in: u64,\n    y_min_out: u64,\n)\n","title":"交换确切输入","titles":["Router v2","入口函数"]},"345":{"href":"/contracts-aptos/v2/router-v2#参数-3","html":"\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>sender</td><td><code>signer</code></td><td>调用函数时的发送者签名者。</td></tr><tr><td>x_in</td><td><code>u64</code></td><td>支付的输入 tokenX 数量。</td></tr><tr><td>y_min_out</td><td><code>u64</code></td><td>接收的最小 tokenY 数量。</td></tr></tbody></table>\n","isPage":false,"text":"\n名称类型描述sendersigner调用函数时的发送者签名者。x_inu64支付的输入 tokenX 数量。y_min_outu64接收的最小 tokenY 数量。\n","title":"参数","titles":["Router v2","入口函数","交换确切输入"]},"346":{"href":"/contracts-aptos/v2/router-v2#交换确切输出","html":"\n<p>交换 tokenX 到确切数量的 tokenY。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">public entry fun swap_exact_output&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">X</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Y</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sender</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">signer,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    y_out</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    x_max_in</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\n交换 tokenX 到确切数量的 tokenY。\npublic entry fun swap_exact_output&lt;X, Y&gt;(\n    sender: &amp;signer,\n    y_out: u64,\n    x_max_in: u64,\n)\n","title":"交换确切输出","titles":["Router v2","入口函数"]},"347":{"href":"/contracts-aptos/v2/router-v2#参数-4","html":"\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>sender</td><td><code>signer</code></td><td>调用函数时的发送者签名者。</td></tr><tr><td>y_out</td><td><code>u64</code></td><td>支付的输出 tokenY 数量。</td></tr><tr><td>x_max_in</td><td><code>u64</code></td><td>输入的最大 tokenX 数量。</td></tr></tbody></table>\n","isPage":false,"text":"\n名称类型描述sendersigner调用函数时的发送者签名者。y_outu64支付的输出 tokenY 数量。x_max_inu64输入的最大 tokenX 数量。\n","title":"参数","titles":["Router v2","入口函数","交换确切输出"]},"348":{"href":"/contracts-aptos/v2/router-v2#双跳交换确切输入","html":"\n<p>通过两个池（池 XY 和池 YZ）交换确切数量的 tokenX 到 tokenZ。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">public entry fun swap_exact_input_doublehop&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">X</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Y</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Z</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sender</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">signer,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    x_in</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    z_min_out</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\n通过两个池（池 XY 和池 YZ）交换确切数量的 tokenX 到 tokenZ。\npublic entry fun swap_exact_input_doublehop&lt;X, Y, Z&gt;(\n    sender: &amp;signer,\n    x_in: u64,\n    z_min_out: u64,\n)\n","title":"双跳交换确切输入","titles":["Router v2","入口函数"]},"349":{"href":"/contracts-aptos/v2/router-v2#参数-5","html":"\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>sender</td><td><code>signer</code></td><td>调用函数时的发送者签名者。</td></tr><tr><td>x_in</td><td><code>u64</code></td><td>支付的输入 tokenX 数量。</td></tr><tr><td>z_min_out</td><td><code>u64</code></td><td>接收的最小 tokenZ 数量。</td></tr></tbody></table>\n","isPage":false,"text":"\n名称类型描述sendersigner调用函数时的发送者签名者。x_inu64支付的输入 tokenX 数量。z_min_outu64接收的最小 tokenZ 数量。\n","title":"参数","titles":["Router v2","入口函数","双跳交换确切输入"]},"350":{"href":"/contracts-aptos/v2/router-v2#双跳交换确切输出","html":"\n<p>通过两个池（池 XY 和池 YZ）交换 tokenX 到确切数量的 tokenZ。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">public entry fun swap_exact_output_doublehop&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">X</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Y</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Z</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sender</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">signer,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    z_out</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    x_max_in</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\n通过两个池（池 XY 和池 YZ）交换 tokenX 到确切数量的 tokenZ。\npublic entry fun swap_exact_output_doublehop&lt;X, Y, Z&gt;(\n    sender: &amp;signer,\n    z_out: u64,\n    x_max_in: u64,\n)\n","title":"双跳交换确切输出","titles":["Router v2","入口函数"]},"351":{"href":"/contracts-aptos/v2/router-v2#参数-6","html":"\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>sender</td><td><code>signer</code></td><td>调用函数时的发送者签名者。</td></tr><tr><td>z_out</td><td><code>u64</code></td><td>支付的输出 tokenZ 数量。</td></tr><tr><td>x_max_in</td><td><code>u64</code></td><td>输入的最大 tokenX 数量。</td></tr></tbody></table>\n","isPage":false,"text":"\n名称类型描述sendersigner调用函数时的发送者签名者。z_outu64支付的输出 tokenZ 数量。x_max_inu64输入的最大 tokenX 数量。\n","title":"参数","titles":["Router v2","入口函数","双跳交换确切输出"]},"352":{"href":"/contracts-aptos/v2/router-v2#三跳交换确切输入","html":"\n<p>通过三个池（池 XY、池 YZ 和池 ZA）交换确切数量的 tokenX 到 tokenA。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">public entry fun swap_exact_input_triplehop&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">X</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Y</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Z</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">A</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sender</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">signer,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    x_in</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    a_min_out</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\n通过三个池（池 XY、池 YZ 和池 ZA）交换确切数量的 tokenX 到 tokenA。\npublic entry fun swap_exact_input_triplehop&lt;X, Y, Z, A&gt;(\n    sender: &amp;signer,\n    x_in: u64,\n    a_min_out: u64,\n)\n","title":"三跳交换确切输入","titles":["Router v2","入口函数"]},"353":{"href":"/contracts-aptos/v2/router-v2#参数-7","html":"\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>sender</td><td><code>signer</code></td><td>调用函数时的发送者签名者。</td></tr><tr><td>x_in</td><td><code>u64</code></td><td>支付的输入 tokenX 数量。</td></tr><tr><td>a_min_out</td><td><code>u64</code></td><td>接收的最小 tokenA 数量。</td></tr></tbody></table>\n","isPage":false,"text":"\n名称类型描述sendersigner调用函数时的发送者签名者。x_inu64支付的输入 tokenX 数量。a_min_outu64接收的最小 tokenA 数量。\n","title":"参数","titles":["Router v2","入口函数","三跳交换确切输入"]},"354":{"href":"/contracts-aptos/v2/router-v2#三跳交换确切输出","html":"\n<p>通过三个池（池 XY、池 YZ 和池 ZA）交换 tokenX 到确切数量的 tokenA。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">public entry fun swap_exact_output_triplehop&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">X</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Y</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Z</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">A</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sender</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">signer,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    a_out</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    x_max_in</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>sender</td><td><code>signer</code></td><td>调用函数时的发送者签名者。</td></tr><tr><td>a_out</td><td><code>u64</code></td><td>支付的输出 tokenA 数量。</td></tr><tr><td>x_max_in</td><td><code>u64</code></td><td>输入的最大 tokenX 数量。</td></tr></tbody></table>\n","isPage":false,"text":"\n通过三个池（池 XY、池 YZ 和池 ZA）交换 tokenX 到确切数量的 tokenA。\npublic entry fun swap_exact_output_triplehop&lt;X, Y, Z, A&gt;(\n    sender: &amp;signer,\n    a_out: u64,\n    x_max_in: u64,\n)\n名称类型描述sendersigner调用函数时的发送者签名者。a_outu64支付的输出 tokenA 数量。x_max_inu64输入的最大 tokenX 数量。\n","title":"三跳交换确切输出","titles":["Router v2","入口函数"]},"355":{"href":"/contracts-aptos/v2/router-v2#四跳交换确切输入","html":"\n<p>通过四个池（池 XY、池 YZ、池 ZA 和池 AB）交换确切数量的 tokenX 到 tokenB。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">public entry fun swap_exact_input_quadruplehop&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">X</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Y</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Z</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">A</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">B</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sender</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">signer,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    x_in</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    b_min_out</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>sender</td><td><code>signer</code></td><td>调用函数时的发送者签名者。</td></tr><tr><td>x_in</td><td><code>u64</code></td><td>支付的输入 tokenX 数量。</td></tr><tr><td>b_min_out</td><td><code>u64</code></td><td>接收的最小 tokenB 数量。</td></tr></tbody></table>\n","isPage":false,"text":"\n通过四个池（池 XY、池 YZ、池 ZA 和池 AB）交换确切数量的 tokenX 到 tokenB。\npublic entry fun swap_exact_input_quadruplehop&lt;X, Y, Z, A, B&gt;(\n    sender: &amp;signer,\n    x_in: u64,\n    b_min_out: u64,\n)\n名称类型描述sendersigner调用函数时的发送者签名者。x_inu64支付的输入 tokenX 数量。b_min_outu64接收的最小 tokenB 数量。\n","title":"四跳交换确切输入","titles":["Router v2","入口函数"]},"356":{"href":"/contracts-aptos/v2/router-v2#四跳交换确切输出","html":"\n<p>通过四个池（池 XY、池 YZ、池 ZA 和池 AB）交换 tokenX 到确切数量的 tokenB。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">public entry fun swap_exact_output_quadruplehop&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">X</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Y</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Z</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">A</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">B</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sender</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">signer,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    b_out</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    x_max_in</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>sender</td><td><code>signer</code></td><td>调用函数时的发送者签名者。</td></tr><tr><td>b_out</td><td><code>u64</code></td><td>支付的输出 tokenB 数量。</td></tr><tr><td>x_max_in</td><td><code>u64</code></td><td>输入的最大 tokenX 数量。</td></tr></tbody></table>\n","isPage":false,"text":"\n通过四个池（池 XY、池 YZ、池 ZA 和池 AB）交换 tokenX 到确切数量的 tokenB。\npublic entry fun swap_exact_output_quadruplehop&lt;X, Y, Z, A, B&gt;(\n    sender: &amp;signer,\n    b_out: u64,\n    x_max_in: u64,\n)\n名称类型描述sendersigner调用函数时的发送者签名者。b_outu64支付的输出 tokenB 数量。x_max_inu64输入的最大 tokenX 数量。\n","title":"四跳交换确切输出","titles":["Router v2","入口函数"]},"357":{"href":"/contracts-aptos/v2/router-v2#公共函数","html":"\n","isPage":false,"text":"\n","title":"公共函数","titles":["Router v2"]},"358":{"href":"/contracts-aptos/v2/router-v2#交换确切-x-到-y","html":"\n<p>交换确切数量的 tokenX 到 tokenY。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">public fun swap_exact_x_to_y_direct_external&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">X</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Y</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;(x_in</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> coin</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Coin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">X</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;)</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> coin</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Coin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Y</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span></code></pre>\n","isPage":false,"text":"\n交换确切数量的 tokenX 到 tokenY。\npublic fun swap_exact_x_to_y_direct_external&lt;X, Y&gt;(x_in: coin::Coin&lt;X&gt;): coin::Coin&lt;Y&gt;\n","title":"交换确切 X 到 Y","titles":["Router v2","公共函数","四跳交换确切输出"]},"359":{"href":"/contracts-aptos/v2/router-v2#输入值","html":"\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>x_in</td><td><code>coin::Coin</code></td><td>用户将要交换的 tokenX 的 coin 资源。</td></tr></tbody></table>\n","isPage":false,"text":"\n名称类型描述x_incoin::Coin用户将要交换的 tokenX 的 coin 资源。\n","title":"输入值","titles":["Router v2","公共函数","四跳交换确切输出"]},"360":{"href":"/contracts-aptos/v2/router-v2#返回值","html":"\n<table><thead><tr><th>类型</th><th>描述</th></tr></thead><tbody><tr><td><code>coin::Coin</code></td><td>用户将会收到的 tokenY 的 coin 资源。</td></tr></tbody></table>\n","isPage":false,"text":"\n类型描述coin::Coin用户将会收到的 tokenY 的 coin 资源。\n","title":"返回值","titles":["Router v2","公共函数","四跳交换确切输出"]},"361":{"href":"/contracts-aptos/v2/router-v2#交换-x-到确切-y","html":"\n<p>交换 tokenX 到确切数量的 tokenY。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">public fun swap_x_to_exact_y_direct_external&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">X</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Y</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;(x_in</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> coin</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Coin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">X</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;, y_out_amount</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">coin</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Coin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">X</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">coin</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Coin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Y</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;)</span></span></code></pre>\n","isPage":false,"text":"\n交换 tokenX 到确切数量的 tokenY。\npublic fun swap_x_to_exact_y_direct_external&lt;X, Y&gt;(x_in: coin::Coin&lt;X&gt;, y_out_amount:u64): (coin::Coin&lt;X&gt;, coin::Coin&lt;Y&gt;)\n","title":"交换 X 到确切 Y","titles":["Router v2","公共函数","四跳交换确切输出"]},"362":{"href":"/contracts-aptos/v2/router-v2#输入值-1","html":"\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>x_in</td><td><code>coin::Coin</code></td><td>用户将要交换的 tokenX 的 coin 资源。</td></tr><tr><td>y_out_amount</td><td><code>u64</code></td><td>用户将会收到的期望 tokenY 数量。</td></tr></tbody></table>\n","isPage":false,"text":"\n名称类型描述x_incoin::Coin用户将要交换的 tokenX 的 coin 资源。y_out_amountu64用户将会收到的期望 tokenY 数量。\n","title":"输入值","titles":["Router v2","公共函数","四跳交换确切输出"]},"363":{"href":"/contracts-aptos/v2/router-v2#返回值-1","html":"\n<table><thead><tr><th>位置</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>0</td><td><code>coin::Coin</code></td><td>用户将要交换的 tokenX 的 coin 资源。</td></tr><tr><td>1</td><td><code>coin::Coin</code></td><td>用户将会收到的 tokenY 的 coin 资源。</td></tr></tbody></table>\n","isPage":false,"text":"\n位置类型描述0coin::Coin用户将要交换的 tokenX 的 coin 资源。1coin::Coin用户将会收到的 tokenY 的 coin 资源。\n","title":"返回值","titles":["Router v2","公共函数","四跳交换确切输出"]},"364":{"href":"/contracts-aptos/v2/router-v2#获取输入数量","html":"\n<p>获取实现输出数量所需要的输入数量。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">public fun get_amount_in&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">X</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Y</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;(y_out_amount</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span></span></code></pre>\n","isPage":false,"text":"\n获取实现输出数量所需要的输入数量。\npublic fun get_amount_in&lt;X, Y&gt;(y_out_amount: u64): u64\n","title":"获取输入数量","titles":["Router v2","公共函数"]},"365":{"href":"/contracts-aptos/v2/router-v2#输入值-2","html":"\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>y_out_amount</td><td><code>u64</code></td><td>用户将会收到的 tokenY 数量。</td></tr></tbody></table>\n","isPage":false,"text":"\n名称类型描述y_out_amountu64用户将会收到的 tokenY 数量。\n","title":"输入值","titles":["Router v2","公共函数","获取输入数量"]},"366":{"href":"/contracts-aptos/v2/router-v2#返回值-2","html":"\n<table><thead><tr><th>类型</th><th>描述</th></tr></thead><tbody><tr><td><code>u64</code></td><td>获取指定数量的 tokenY 所需要的 tokenX 数量。</td></tr></tbody></table>","isPage":false,"text":"\n类型描述u64获取指定数量的 tokenY 所需要的 tokenX 数量。","title":"返回值","titles":["Router v2","公共函数","获取输入数量"]},"367":{"href":"/contracts-aptos/v2/swap-core-v2#swap-core-v2","html":"</header>\n","isPage":true,"text":"\n","title":"Swap Core V2","titles":[]},"368":{"href":"/contracts-aptos/v2/swap-core-v2#合约信息","html":"\n<p><strong>合约名</strong>: pancake::swap<br/>\n<strong>合约地址:</strong> c7efb4076dbe143cbcd98cfaaa929ecfc8f299203dfff63b95ccb6bfe19850fa::swap</p>\n<p><strong>管理员多签地址</strong>: b11ccaed0056a75472539c2b0d9511c82fc6a36622bec7578216af5fe550dd0d</p>\n<p><a href=\"https://explorer.aptoslabs.com/account/0xc7efb4076dbe143cbcd98cfaaa929ecfc8f299203dfff63b95ccb6bfe19850fa/modules\">在 Aptos Explorer 上查看</a></p>\n","isPage":false,"text":"\n合约名: pancake::swap\n合约地址: c7efb4076dbe143cbcd98cfaaa929ecfc8f299203dfff63b95ccb6bfe19850fa::swap\n管理员多签地址: b11ccaed0056a75472539c2b0d9511c82fc6a36622bec7578216af5fe550dd0d\n在 Aptos Explorer 上查看\n","title":"合约信息","titles":["Swap Core V2"]},"369":{"href":"/contracts-aptos/v2/swap-core-v2#类型","html":"\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>X</td><td><code>type address</code></td><td>配对中 Token X 的币种类型地址。</td></tr><tr><td>Y</td><td><code>type address</code></td><td>配对中 Token Y 的币种类型地址。</td></tr></tbody></table>\n","isPage":false,"text":"\n名称类型描述Xtype address配对中 Token X 的币种类型地址。Ytype address配对中 Token Y 的币种类型地址。\n","title":"类型","titles":["Swap Core V2"]},"370":{"href":"/contracts-aptos/v2/swap-core-v2#资源","html":"\n","isPage":false,"text":"\n","title":"资源","titles":["Swap Core V2"]},"371":{"href":"/contracts-aptos/v2/swap-core-v2#lptoken","html":"\n<p>流动性代币对应于每个 XY 池。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> LPToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;phantom </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">X</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, phantom </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Y</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt; has key {}</span></span></code></pre>\n","isPage":false,"text":"\n流动性代币对应于每个 XY 池。\nstruct LPToken&lt;phantom X, phantom Y&gt; has key {}\n","title":"LPToken","titles":["Swap Core V2","资源"]},"372":{"href":"/contracts-aptos/v2/swap-core-v2#tokenpairmetadata","html":"\n<p>池 XY 的元数据。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> TokenPairMetadata</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;phantom </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">X</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, phantom </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Y</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt; has key {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    creator</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> address,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fee_amount</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> coin</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Coin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">LPToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">X</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Y</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;&gt;,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    k_last</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u128</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    balance_x</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> coin</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Coin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">X</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    balance_y</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> coin</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Coin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Y</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mint_cap</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> coin</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MintCapability</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">LPToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">X</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Y</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;&gt;,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    burn_cap</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> coin</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">BurnCapability</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">LPToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">X</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Y</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;&gt;,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    freeze_cap</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> coin</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">FreezeCapability</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">LPToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">X</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Y</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;&gt;,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>creator</td><td><code>address</code></td><td>池的创建者地址。</td></tr><tr><td>fee_amount</td><td><code>coin::Coin</code></td><td>池中所有交换收集的总 LP 代币。</td></tr><tr><td>k_last</td><td><code>u128</code></td><td>上一次交换时池中的 reserve_x 和 reserve_y 的乘积。</td></tr><tr><td>balance_x</td><td><code>coin::Coin</code></td><td>池中 Token X 的总量。</td></tr><tr><td>balance_y</td><td><code>coin::Coin</code></td><td>池中 Token Y 的总量。</td></tr><tr><td>mint_cap</td><td><code>coin::MintCapability</code></td><td>创建 LP 时生成的铸造能力。</td></tr><tr><td>burn_cap</td><td><code>coin::BurnCapability</code></td><td>创建 LP 时生成的销毁能力。</td></tr><tr><td>freeze_cap</td><td><code>coin::FreezeCapability</code></td><td>创建 LP 时生成的冻结能力。</td></tr></tbody></table>\n","isPage":false,"text":"\n池 XY 的元数据。\nstruct TokenPairMetadata&lt;phantom X, phantom Y&gt; has key {\n    creator: address,\n    fee_amount: coin::Coin&lt;LPToken&lt;X, Y&gt;&gt;,\n    k_last: u128,\n    balance_x: coin::Coin&lt;X&gt;,\n    balance_y: coin::Coin&lt;Y&gt;,\n    mint_cap: coin::MintCapability&lt;LPToken&lt;X, Y&gt;&gt;,\n    burn_cap: coin::BurnCapability&lt;LPToken&lt;X, Y&gt;&gt;,\n    freeze_cap: coin::FreezeCapability&lt;LPToken&lt;X, Y&gt;&gt;,\n}\n名称类型描述creatoraddress池的创建者地址。fee_amountcoin::Coin池中所有交换收集的总 LP 代币。k_lastu128上一次交换时池中的 reserve_x 和 reserve_y 的乘积。balance_xcoin::Coin池中 Token X 的总量。balance_ycoin::Coin池中 Token Y 的总量。mint_capcoin::MintCapability创建 LP 时生成的铸造能力。burn_capcoin::BurnCapability创建 LP 时生成的销毁能力。freeze_capcoin::FreezeCapability创建 LP 时生成的冻结能力。\n","title":"TokenPairMetadata","titles":["Swap Core V2","资源"]},"373":{"href":"/contracts-aptos/v2/swap-core-v2#tokenpairreserve","html":"\n<p>池 XY 的币种储备。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> TokenPairReserve</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;phantom </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">X</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, phantom </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Y</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt; has key {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    reserve_x</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    reserve_y</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    block_timestamp_last</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>reserve_x</td><td><code>u64</code></td><td>池中 Token X 的总量。</td></tr><tr><td>reserve_y</td><td><code>u64</code></td><td>池中 Token Y 的总量。</td></tr><tr><td>block_timestamp_last</td><td><code>u64</code></td><td>储备更新时的时间戳。</td></tr></tbody></table>\n","isPage":false,"text":"\n池 XY 的币种储备。\nstruct TokenPairReserve&lt;phantom X, phantom Y&gt; has key {\n    reserve_x: u64,\n    reserve_y: u64,\n    block_timestamp_last: u64\n}\n名称类型描述reserve_xu64池中 Token X 的总量。reserve_yu64池中 Token Y 的总量。block_timestamp_lastu64储备更新时的时间戳。\n","title":"TokenPairReserve","titles":["Swap Core V2","资源"]},"374":{"href":"/contracts-aptos/v2/swap-core-v2#swapinfo","html":"\n<p>模块的元数据</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> SwapInfo</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> has key {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    signer_cap</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> account</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SignerCapability</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fee_to</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> address,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    admin</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> address,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    pair_created</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> event</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">::</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">EventHandle</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PairCreatedEvent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>signer_cap</td><td><code>account::SignerCapabilty</code></td><td>部署模块时生成的签名者能力。</td></tr><tr><td>fee_to</td><td><code>address</code></td><td>接收手续费的地址。</td></tr><tr><td>admin</td><td><code>address</code></td><td>模块的管理员地址。</td></tr><tr><td>pair_created</td><td><code>event::EventHandle</code></td><td>池创建时触发的事件。</td></tr></tbody></table>\n","isPage":false,"text":"\n模块的元数据\nstruct SwapInfo has key {\n    signer_cap: account::SignerCapability,\n    fee_to: address,\n    admin: address,\n    pair_created: event::EventHandle&lt;PairCreatedEvent&gt;\n}\n名称类型描述signer_capaccount::SignerCapabilty部署模块时生成的签名者能力。fee_toaddress接收手续费的地址。adminaddress模块的管理员地址。pair_createdevent::EventHandle池创建时触发的事件。\n","title":"SwapInfo","titles":["Swap Core V2","资源"]},"375":{"href":"/contracts-aptos/v2/swap-core-v2#公共函数","html":"\n","isPage":false,"text":"\n","title":"公共函数","titles":["Swap Core V2"]},"376":{"href":"/contracts-aptos/v2/swap-core-v2#注册-lp","html":"\n<p>将 LP 代币注册到账户。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">public fun register_lp&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">X</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Y</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;(sender</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">signer)</span></span></code></pre>\n","isPage":false,"text":"\n将 LP 代币注册到账户。\npublic fun register_lp&lt;X, Y&gt;(sender: &amp;signer)\n","title":"注册 LP","titles":["Swap Core V2","公共函数"]},"377":{"href":"/contracts-aptos/v2/swap-core-v2#输入值","html":"\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>sender</td><td><code>signer</code></td><td>调用函数时的发送者签名者。</td></tr></tbody></table>\n","isPage":false,"text":"\n名称类型描述sendersigner调用函数时的发送者签名者。\n","title":"输入值","titles":["Swap Core V2","公共函数","注册 LP"]},"378":{"href":"/contracts-aptos/v2/swap-core-v2#池是否已创建","html":"\n<p>检查是否已创建池 XY 。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">public fun is_pair_created&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">X</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Y</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> bool</span></span></code></pre>\n","isPage":false,"text":"\n检查是否已创建池 XY 。\npublic fun is_pair_created&lt;X, Y&gt;(): bool\n","title":"池是否已创建","titles":["Swap Core V2","公共函数"]},"379":{"href":"/contracts-aptos/v2/swap-core-v2#返回值","html":"\n<table><thead><tr><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>bool</td><td>池是否已创建。</td></tr></tbody></table>\n","isPage":false,"text":"\n类型描述bool池是否已创建。\n","title":"返回值","titles":["Swap Core V2","公共函数","池是否已创建"]},"380":{"href":"/contracts-aptos/v2/swap-core-v2#lp-余额","html":"\n<p>检查用户的 LP 余额。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">public fun lp_balance&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">X</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Y</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;(addr</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> address)</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u64</span></span></code></pre>\n","isPage":false,"text":"\n检查用户的 LP 余额。\npublic fun lp_balance&lt;X, Y&gt;(addr: address): u64\n","title":"LP 余额","titles":["Swap Core V2","公共函数"]},"381":{"href":"/contracts-aptos/v2/swap-core-v2#输入值-1","html":"\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>addr</td><td><code>address</code></td><td>用户地址。</td></tr></tbody></table>\n","isPage":false,"text":"\n名称类型描述addraddress用户地址。\n","title":"输入值","titles":["Swap Core V2","公共函数","LP 余额"]},"382":{"href":"/contracts-aptos/v2/swap-core-v2#返回值-1","html":"\n<table><thead><tr><th>类型</th><th>描述</th></tr></thead><tbody><tr><td><code>u128</code></td><td>用户拥有的 LP 数量。</td></tr></tbody></table>\n","isPage":false,"text":"\n类型描述u128用户拥有的 LP 数量。\n","title":"返回值","titles":["Swap Core V2","公共函数","LP 余额"]},"383":{"href":"/contracts-aptos/v2/swap-core-v2#总-lp-供应量","html":"\n<p>池 XY 中创建的 LP 总量。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">public fun total_lp_supply&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">X</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Y</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> u128</span></span></code></pre>\n","isPage":false,"text":"\n池 XY 中创建的 LP 总量。\npublic fun total_lp_supply&lt;X, Y&gt;(): u128\n","title":"总 LP 供应量","titles":["Swap Core V2","公共函数"]},"384":{"href":"/contracts-aptos/v2/swap-core-v2#返回值-2","html":"\n<table><thead><tr><th>类型</th><th>描述</th></tr></thead><tbody><tr><td><code>u128</code></td><td>LP 代币的总供应量。</td></tr></tbody></table>\n","isPage":false,"text":"\n类型描述u128LP 代币的总供应量。\n","title":"返回值","titles":["Swap Core V2","公共函数","总 LP 供应量"]},"385":{"href":"/contracts-aptos/v2/swap-core-v2#代币储备","html":"\n<p>池 XY 的代币储备。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">public fun token_reserves&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">X</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Y</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\n池 XY 的代币储备。\npublic fun token_reserves&lt;X, Y&gt;(): (u64, u64, u64)\n","title":"代币储备","titles":["Swap Core V2","公共函数"]},"386":{"href":"/contracts-aptos/v2/swap-core-v2#返回值-3","html":"\n<table><thead><tr><th>位置</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>0</td><td><code>u64</code></td><td>池中 Token X 的总量。</td></tr><tr><td>1</td><td><code>u64</code></td><td>池中 Token Y 的总量。</td></tr><tr><td>2</td><td><code>u64</code></td><td>储备更新时的时间戳。</td></tr></tbody></table>\n","isPage":false,"text":"\n位置类型描述0u64池中 Token X 的总量。1u64池中 Token Y 的总量。2u64储备更新时的时间戳。\n","title":"返回值","titles":["Swap Core V2","公共函数","代币储备"]},"387":{"href":"/contracts-aptos/v2/swap-core-v2#代币余额","html":"\n<p>池 XY 的代币余额。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">public fun token_balances&lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">X</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Y</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;()</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">u64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\n池 XY 的代币余额。\npublic fun token_balances&lt;X, Y&gt;(): (u64, u64)\n","title":"代币余额","titles":["Swap Core V2","公共函数"]},"388":{"href":"/contracts-aptos/v2/swap-core-v2#返回值-4","html":"\n<table><thead><tr><th>位置</th><th>类型</th><th></th></tr></thead><tbody><tr><td>0</td><td><code>u64</code></td><td>池中 Token X 的总量。</td></tr><tr><td>1</td><td><code>u64</code></td><td>池中 Token Y 的总量。</td></tr></tbody></table>","isPage":false,"text":"\n位置类型0u64池中 Token X 的总量。1u64池中 Token Y 的总量。","title":"返回值","titles":["Swap Core V2","公共函数","代币余额"]},"389":{"href":"/contracts/v3/smartrouter/index#smartrouterv3","html":"</header>\n","isPage":true,"text":"\n","title":"SmartRouterV3","titles":[]},"390":{"href":"/contracts/v3/smartrouter/index#合约信息","html":"\n<p><a href=\"/contracts/v3/addresses#smart-router\">合约地址</a></p>\n<aside data-callout=\"info\">","isPage":false,"text":"\n合约地址\n","title":"合约信息","titles":["SmartRouterV3"]},"391":{"href":"/contracts/v3/smartrouter/index#注意","html":"<p>在通过路由器完成所有交换操作的最后，应该调用 <code>refundETH</code>。PancakeSwap 将确保这一点。</p></aside>\n","isPage":false,"text":"在通过路由器完成所有交换操作的最后，应该调用 refundETH。PancakeSwap 将确保这一点。\n","title":"注意","titles":["SmartRouterV3"]},"392":{"href":"/contracts/v3/smartrouter/index#api","html":"\n","isPage":false,"text":"\n","title":"API","titles":["SmartRouterV3"]},"393":{"href":"/contracts/v3/smartrouter/index#构造函数","html":"\n<p><code>constructor(address _factoryV2, address _deployer, address _factoryV3, address _positionManager, address _stableFactory, address _stableInfo, address _WETH9) public</code></p>","isPage":false,"text":"\nconstructor(address _factoryV2, address _deployer, address _factoryV3, address _positionManager, address _stableFactory, address _stableInfo, address _WETH9) public","title":"构造函数","titles":["SmartRouterV3","API"]},"394":{"href":"/contracts/v3/smartrouter/stableswaprouter#stableswaprouter","html":"</header>\n","isPage":true,"text":"\n","title":"StableSwapRouter","titles":[]},"395":{"href":"/contracts/v3/smartrouter/stableswaprouter#solidity-api","html":"\n","isPage":false,"text":"\n","title":"Solidity API","titles":["StableSwapRouter"]},"396":{"href":"/contracts/v3/smartrouter/stableswaprouter#stableswapfactory","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> stableSwapFactory</span></span></code></pre>\n","isPage":false,"text":"\naddress stableSwapFactory\n","title":"stableSwapFactory","titles":["StableSwapRouter","Solidity API"]},"397":{"href":"/contracts/v3/smartrouter/stableswaprouter#stableswapinfo","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> stableSwapInfo</span></span></code></pre>\n","isPage":false,"text":"\naddress stableSwapInfo\n","title":"stableSwapInfo","titles":["StableSwapRouter","Solidity API"]},"398":{"href":"/contracts/v3/smartrouter/stableswaprouter#setstableswap","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">event</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> SetStableSwap</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> factory</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> info</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nevent SetStableSwap(address factory, address info)\n","title":"SetStableSwap","titles":["StableSwapRouter","Solidity API"]},"399":{"href":"/contracts/v3/smartrouter/stableswaprouter#constructor","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">constructor</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _stableSwapFactory, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _stableSwapInfo) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">internal</span></span></code></pre>\n","isPage":false,"text":"\nconstructor(address _stableSwapFactory, address _stableSwapInfo) internal\n","title":"constructor","titles":["StableSwapRouter","Solidity API"]},"400":{"href":"/contracts/v3/smartrouter/stableswaprouter#setstableswap-1","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> setStableSwap</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _factory, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _info) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span></span></code></pre>\n<p>设置 Pancake 稳定币交换工厂和信息</p>\n<p><em>只有合约所有者可以调用</em></p>\n","isPage":false,"text":"\nfunction setStableSwap(address _factory, address _info) external\n设置 Pancake 稳定币交换工厂和信息\n只有合约所有者可以调用\n","title":"setStableSwap","titles":["StableSwapRouter","Solidity API"]},"401":{"href":"/contracts/v3/smartrouter/stableswaprouter#exactinputstableswap","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> exactInputStableSwap</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[] </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">path</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[] </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">flag</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountIn</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountOutMin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> to</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> payable</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountOut</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<strong>参数</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>path</td><td>address[]</td><td></td></tr><tr><td>flag</td><td>uint256[]</td><td>稳定币交换池中的代币数量。2 表示 2pool，3 表示 3pool</td></tr><tr><td>amountIn</td><td>uint256</td><td></td></tr><tr><td>amountOutMin</td><td>uint256</td><td></td></tr><tr><td>to</td><td>address</td><td></td></tr></tbody></table>\n","isPage":false,"text":"\nfunction exactInputStableSwap(address[] path, uint256[] flag, uint256 amountIn, uint256 amountOutMin, address to) external payable returns (uint256 amountOut)\n参数\n名称类型描述pathaddress[]flaguint256[]稳定币交换池中的代币数量。2 表示 2pool，3 表示 3poolamountInuint256amountOutMinuint256toaddress\n","title":"exactInputStableSwap","titles":["StableSwapRouter","Solidity API"]},"402":{"href":"/contracts/v3/smartrouter/stableswaprouter#exactoutputstableswap","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> exactOutputStableSwap</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[] </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">path</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[] </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">flag</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountOut</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountInMax</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> to</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> payable</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountIn</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<strong>参数</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>path</td><td>address[]</td><td></td></tr><tr><td>flag</td><td>uint256[]</td><td>稳定币交换池中的代币数量。2 表示 2pool，3 表示 3pool</td></tr><tr><td>amountOut</td><td>uint256</td><td></td></tr><tr><td>amountInMax</td><td>uint256</td><td></td></tr><tr><td>to</td><td>address</td><td></td></tr></tbody></table>","isPage":false,"text":"\nfunction exactOutputStableSwap(address[] path, uint256[] flag, uint256 amountOut, uint256 amountInMax, address to) external payable returns (uint256 amountIn)\n参数\n名称类型描述pathaddress[]flaguint256[]稳定币交换池中的代币数量。2 表示 2pool，3 表示 3poolamountOutuint256amountInMaxuint256toaddress","title":"exactOutputStableSwap","titles":["StableSwapRouter","Solidity API"]},"403":{"href":"/contracts/v3/smartrouter/v2swaprouter#v2swaprouter","html":"</header>\n","isPage":true,"text":"\n","title":"V2SwapRouter","titles":[]},"404":{"href":"/contracts/v3/smartrouter/v2swaprouter#solidity-api","html":"\n","isPage":false,"text":"\n","title":"Solidity API","titles":["V2SwapRouter"]},"405":{"href":"/contracts/v3/smartrouter/v2swaprouter#swapexacttokensfortokens","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> swapExactTokensForTokens</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountIn</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountOutMin</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[] </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">path</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> to</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> payable</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountOut</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<p>将 <code>amountIn</code> 的一种代币换成尽可能多的另一种代币</p>\n<p><em>将 <code>amountIn</code> 设置为 0 会使合约查找其自身的余额，并交换全部金额，这使合约可以在调用此函数之前发送代币。</em></p>\n<strong>参数</strong>\n<p>|</p>","isPage":false,"text":"\nfunction swapExactTokensForTokens(uint256 amountIn, uint256 amountOutMin, address[] path, address to) external payable returns (uint256 amountOut)\n将 amountIn 的一种代币换成尽可能多的另一种代币\n将 amountIn 设置为 0 会使合约查找其自身的余额，并交换全部金额，这使合约可以在调用此函数之前发送代币。\n参数\n|","title":"swapExactTokensForTokens","titles":["V2SwapRouter","Solidity API"]},"406":{"href":"/contracts/v3/smartrouter/v3swaprouter#v3swaprouter","html":"</header>\n","isPage":true,"text":"\n","title":"V3SwapRouter","titles":[]},"407":{"href":"/contracts/v3/smartrouter/v3swaprouter#solidity-api","html":"\n","isPage":false,"text":"\n","title":"Solidity API","titles":["V3SwapRouter"]},"408":{"href":"/contracts/v3/smartrouter/v3swaprouter#swapcallbackdata","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> SwapCallbackData</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  bytes</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> path;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> payer;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nstruct SwapCallbackData {\n  bytes path;\n  address payer;\n}\n","title":"SwapCallbackData","titles":["V3SwapRouter","Solidity API"]},"409":{"href":"/contracts/v3/smartrouter/v3swaprouter#pancakev3swapcallback","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> pancakeV3SwapCallback</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">int256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amount0Delta</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">int256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amount1Delta</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">bytes</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _data) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span></span></code></pre>\n<p>在通过 <code>IPancakeV3Pool#swap</code> 执行交换后调用 <code>msg.sender</code>。</p>\n<p><em>在实现中，你必须支付交换所需的池代币。此方法的调用者必须被检查为由 PancakeV3Factory 部署的 PancakeV3Pool。如果没有代币被交换，amount0Delta 和 amount1Delta 都可以为0。</em></p>\n<strong>参数</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>amount0Delta</td><td>int256</td><td>交换结束时池发送（负）或必须接收（正）的 token0 数量。如果为正，回调必须将该数量的 token0 发送到池中。</td></tr><tr><td>amount1Delta</td><td>int256</td><td>交换结束时池发送（负）或必须接收（正）的 token1 数量。如果为正，回调必须将该数量的 token1 发送到池中。</td></tr><tr><td>_data</td><td>bytes</td><td></td></tr></tbody></table>\n","isPage":false,"text":"\nfunction pancakeV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes _data) external\n在通过 IPancakeV3Pool#swap 执行交换后调用 msg.sender。\n在实现中，你必须支付交换所需的池代币。此方法的调用者必须被检查为由 PancakeV3Factory 部署的 PancakeV3Pool。如果没有代币被交换，amount0Delta 和 amount1Delta 都可以为0。\n参数\n名称类型描述amount0Deltaint256交换结束时池发送（负）或必须接收（正）的 token0 数量。如果为正，回调必须将该数量的 token0 发送到池中。amount1Deltaint256交换结束时池发送（负）或必须接收（正）的 token1 数量。如果为正，回调必须将该数量的 token1 发送到池中。_databytes\n","title":"pancakeV3SwapCallback","titles":["V3SwapRouter","Solidity API"]},"410":{"href":"/contracts/v3/smartrouter/v3swaprouter#exactinputsingle","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> exactInputSingle</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">struct</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> IV3SwapRouter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">ExactInputSingleParams</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> params</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> payable</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountOut</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<p>交换 <code>amountIn</code> 的一种代币以获取尽可能多的另一种代币</p>\n<p><em>将 <code>amountIn</code> 设为0将导致合约查询其自身的余额，并交换全部金额，从而使合约能够在调用此函数之前发送代币。</em></p>\n<strong>参数</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>params</td><td>struct IV3SwapRouter.ExactInputSingleParams</td><td>交换所需的参数，编码为 calldata 中的 <code>ExactInputSingleParams</code></td></tr></tbody></table>\n<strong>返回值</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>amountOut</td><td>uint256</td><td>接收的代币数量</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction exactInputSingle(struct IV3SwapRouter.ExactInputSingleParams params) external payable returns (uint256 amountOut)\n交换 amountIn 的一种代币以获取尽可能多的另一种代币\n将 amountIn 设为0将导致合约查询其自身的余额，并交换全部金额，从而使合约能够在调用此函数之前发送代币。\n参数\n名称类型描述paramsstruct IV3SwapRouter.ExactInputSingleParams交换所需的参数，编码为 calldata 中的 ExactInputSingleParams\n返回值\n名称类型描述amountOutuint256接收的代币数量\n","title":"exactInputSingle","titles":["V3SwapRouter","Solidity API"]},"411":{"href":"/contracts/v3/smartrouter/v3swaprouter#exactinput","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> exactInput</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">struct</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> IV3SwapRouter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">ExactInputParams</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> params</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> payable</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountOut</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<p>交换 <code>amountIn</code> 的一种代币以沿指定路径尽可能多地获取另一种代币</p>\n<p><em>将 <code>amountIn</code> 设为0将导致合约查询其自身的余额，并交换全部金额，从而使合约能够在调用此函数之前发送代币。</em></p>\n<strong>参数</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>params</td><td>struct IV3SwapRouter.ExactInputParams</td><td>多跳交换所需的参数，编码为 calldata 中的 <code>ExactInputParams</code></td></tr></tbody></table>\n<strong>返回值</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>amountOut</td><td>uint256</td><td>接收的代币数量</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction exactInput(struct IV3SwapRouter.ExactInputParams params) external payable returns (uint256 amountOut)\n交换 amountIn 的一种代币以沿指定路径尽可能多地获取另一种代币\n将 amountIn 设为0将导致合约查询其自身的余额，并交换全部金额，从而使合约能够在调用此函数之前发送代币。\n参数\n名称类型描述paramsstruct IV3SwapRouter.ExactInputParams多跳交换所需的参数，编码为 calldata 中的 ExactInputParams\n返回值\n名称类型描述amountOutuint256接收的代币数量\n","title":"exactInput","titles":["V3SwapRouter","Solidity API"]},"412":{"href":"/contracts/v3/smartrouter/v3swaprouter#exactoutputsingle","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> exactOutputSingle</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">struct</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> IV3SwapRouter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">ExactOutputSingleParams</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> params</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> payable</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountIn</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<p>以尽可能少的代币交换 <code>amountOut</code> 的另一种代币，该代币在交换后可能会留在路由器中。</p>\n<strong>参数</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>params</td><td>struct IV3SwapRouter.ExactOutputSingleParams</td><td>交换所需的参数，编码为 calldata 中的 <code>ExactOutputSingleParams</code></td></tr></tbody></table>\n<strong>返回值</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>amountIn</td><td>uint256</td><td>输入的代币数量</td></tr></tbody></table>\n","isPage":false,"text":"\nfunction exactOutputSingle(struct IV3SwapRouter.ExactOutputSingleParams params) external payable returns (uint256 amountIn)\n以尽可能少的代币交换 amountOut 的另一种代币，该代币在交换后可能会留在路由器中。\n参数\n名称类型描述paramsstruct IV3SwapRouter.ExactOutputSingleParams交换所需的参数，编码为 calldata 中的 ExactOutputSingleParams\n返回值\n名称类型描述amountInuint256输入的代币数量\n","title":"exactOutputSingle","titles":["V3SwapRouter","Solidity API"]},"413":{"href":"/contracts/v3/smartrouter/v3swaprouter#exactoutput","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> exactOutput</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">struct</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> IV3SwapRouter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">ExactOutputParams</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> params</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> payable</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> amountIn</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<p>以尽可能少的代币交换沿指定路径（反向）获取 <code>amountOut</code> 的另一种代币，该代币在交换后可能会留在路由器中。</p>\n<strong>参数</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>params</td><td>struct IV3SwapRouter.ExactOutputParams</td><td>多跳交换所需的参数，编码为 calldata 中的 <code>ExactOutputParams</code></td></tr></tbody></table>\n<strong>返回值</strong>\n<table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>amountIn</td><td>uint256</td><td>输入的代币数量</td></tr></tbody></table>","isPage":false,"text":"\nfunction exactOutput(struct IV3SwapRouter.ExactOutputParams params) external payable returns (uint256 amountIn)\n以尽可能少的代币交换沿指定路径（反向）获取 amountOut 的另一种代币，该代币在交换后可能会留在路由器中。\n参数\n名称类型描述paramsstruct IV3SwapRouter.ExactOutputParams多跳交换所需的参数，编码为 calldata 中的 ExactOutputParams\n返回值\n名称类型描述amountInuint256输入的代币数量","title":"exactOutput","titles":["V3SwapRouter","Solidity API"]},"414":{"href":"/contracts/v4/overview/accounting-layer-vault#accounting-layer--vault","html":"</header>\n<p>在这个架构的核心是\r\n<a href=\"https://github.com/pancakeswap/pancake-v4-core/blob/main/src/Vault.sol\">Vault</a>，它作为一个不可变的会计层。它维持了一个代币账本，记录了存入或欠下的代币，从而在每次交易结束时，促进了安全高效的结算过程。</p>\n","isPage":true,"text":"\n在这个架构的核心是\r\nVault，它作为一个不可变的会计层。它维持了一个代币账本，记录了存入或欠下的代币，从而在每次交易结束时，促进了安全高效的结算过程。\n","title":"Accounting Layer | Vault","titles":[]},"415":{"href":"/contracts/v4/overview/accounting-layer-vault#锁机制","html":"\n<p>Vault 中的一个关键机制是 <strong>锁机制</strong>。调用者需要先从 Vault 获得一个锁，然后才能与池管理器进行任何操作（交换、流动性或捐献）。</p>\n<p><img src=\"/pancake-developer/v4/vault.png\" alt=\"Vault\"/></p>\n<p>高层次的步骤如下：</p>\n<ol>\n<li>\n<p>通过 <code>vault.lock()</code> 从 Vault 获得一个锁，Vault 将回调到调用者 <code>lockAcquired(data)</code></p>\n</li>\n<li>\n<p>在 <code>lockAcquired(data)</code> 中，调用者执行操作，比如交换 <code>clPoolManager.swap(...)</code> 或流动性 <code>clPoolManager.modifyLiquidity(...)</code></p>\n</li>\n<li>\n<p>池管理器通过 <code>vault.accountPoolBalanceDelta(...)</code> 通知 Vault 的余额变动</p>\n</li>\n<li>\n<p>调用者然后需要通过以下四种方法中的一种与 Vault 的余额进行调整：<code>take(), settle(), mint() 或 burn()</code>。</p>\n</li>\n</ol>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// 一个四步流程的例子，为了简洁省略了一些代码</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// 参考: https://github.com/pancakeswap/pancake-v4-periphery/blob/main/src/pool-bin/BinFungiblePositionManager.sol </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">contract</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> BinFungiblePositionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> addLiquidity</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">AddLiquidity</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> calldata</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> params</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // 第一步: 获取锁</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        vault.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">lock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(..)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> lockAcquired</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">bytes</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> calldata</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> rawData</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // 第二步: 与池管理器执行操作</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        CallbackData </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">memory</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> data </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> abi</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">decode</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(rawData, (CallbackData));</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        (BalanceDelta delta, ) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> poolManager.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">mint</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(...)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // 第四步: 调整余额，下面是一个 token0 的例子</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (delta.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">amount0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // 首先将 token0 转移到 Vault 然后调用 vault.settle</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            vault.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">settle</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(poolKey.currency0, user, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint128</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(delta.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">amount0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">else</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            vault.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">take</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(poolKey.currency0, user, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint128</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">delta.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">amount0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nVault 中的一个关键机制是 锁机制。调用者需要先从 Vault 获得一个锁，然后才能与池管理器进行任何操作（交换、流动性或捐献）。\n\n高层次的步骤如下：\n\n\n通过 vault.lock() 从 Vault 获得一个锁，Vault 将回调到调用者 lockAcquired(data)\n\n\n在 lockAcquired(data) 中，调用者执行操作，比如交换 clPoolManager.swap(...) 或流动性 clPoolManager.modifyLiquidity(...)\n\n\n池管理器通过 vault.accountPoolBalanceDelta(...) 通知 Vault 的余额变动\n\n\n调用者然后需要通过以下四种方法中的一种与 Vault 的余额进行调整：take(), settle(), mint() 或 burn()。\n\n\n// 一个四步流程的例子，为了简洁省略了一些代码\n// 参考: https://github.com/pancakeswap/pancake-v4-periphery/blob/main/src/pool-bin/BinFungiblePositionManager.sol \ncontract BinFungiblePositionManager {\n    function addLiquidity(AddLiquidity calldata params) external {\n        // 第一步: 获取锁\n        vault.lock(..)\n    }\n \n    function lockAcquired(bytes calldata rawData) external {\n        // 第二步: 与池管理器执行操作\n        CallbackData memory data = abi.decode(rawData, (CallbackData));\n        (BalanceDelta delta, ) = poolManager.mint(...)\n \n        // 第四步: 调整余额，下面是一个 token0 的例子\n        if (delta.amount0() &gt; 0) {\n            // 首先将 token0 转移到 Vault 然后调用 vault.settle\n            vault.settle(poolKey.currency0, user, uint128(delta.amount0()))\n        } else {\n            vault.take(poolKey.currency0, user, uint128(-delta.amount0()))\n        }\n    }\n}\n","title":"锁机制","titles":["Accounting Layer | Vault"]},"416":{"href":"/contracts/v4/overview/accounting-layer-vault#调整余额","html":"\n<p>每当你执行某些操作时，<a href=\"https://github.com/pancakeswap/pancake-v4-core/blob/main/src/pool-cl/CLPoolManager.sol\">poolManager</a> 会返回 BalanceDelta，例如 <code>swap | modifyLiquidity | donate</code>。它包含 <code>int128 amount0</code> 和 <code>int128 amount1</code>，这些是需要与你的 Vault 进行 take 或 settle 的值。</p>\n","isPage":false,"text":"\n每当你执行某些操作时，poolManager 会返回 BalanceDelta，例如 swap | modifyLiquidity | donate。它包含 int128 amount0 和 int128 amount1，这些是需要与你的 Vault 进行 take 或 settle 的值。\n","title":"调整余额","titles":["Accounting Layer | Vault"]},"417":{"href":"/contracts/v4/overview/accounting-layer-vault#负余额变动","html":"\n<p>在这种情况下，Vault 欠调用者代币数量。</p>\n<p>调用者有两种选择：</p>\n<ol>\n<li>\n<p><code>vault.take(Currency currency, address to, uint256 amount)</code> - 这将把欠下的代币从 Vault 转移到指定的地址（<code>address to</code>）。</p>\n</li>\n<li>\n<p><code>vault.mint(Currency currency, address to, uint256 amount)</code> - 这将把多余的代币存储在 Vault 上，并记入 <code>address to</code>。</p>\n</li>\n</ol>\n","isPage":false,"text":"\n在这种情况下，Vault 欠调用者代币数量。\n调用者有两种选择：\n\n\nvault.take(Currency currency, address to, uint256 amount) - 这将把欠下的代币从 Vault 转移到指定的地址（address to）。\n\n\nvault.mint(Currency currency, address to, uint256 amount) - 这将把多余的代币存储在 Vault 上，并记入 address to。\n\n\n","title":"负余额变动","titles":["Accounting Layer | Vault","调整余额"]},"418":{"href":"/contracts/v4/overview/accounting-layer-vault#正余额变动","html":"\n<p>在这种情况下，调用者欠 Vault 代币数量。</p>\n<p>调用者有两种选择：</p>\n<ol>\n<li>\n<p>将代币转移到 Vault 并调用 <code>vault.settle(Currency token)</code></p>\n</li>\n<li>\n<p>假设调用者之前已经通过 <code>vault.mint</code> 将多余的代币存储在 Vault 上，调用者现在可以调用 <code>vault.burn(Currency currency, uint256 amount)</code> 来使用那些存储在 Vault 的多余代币。</p>\n</li>\n</ol>\n","isPage":false,"text":"\n在这种情况下，调用者欠 Vault 代币数量。\n调用者有两种选择：\n\n\n将代币转移到 Vault 并调用 vault.settle(Currency token)\n\n\n假设调用者之前已经通过 vault.mint 将多余的代币存储在 Vault 上，调用者现在可以调用 vault.burn(Currency currency, uint256 amount) 来使用那些存储在 Vault 的多余代币。\n\n\n","title":"正余额变动","titles":["Accounting Layer | Vault","调整余额"]},"419":{"href":"/contracts/v4/overview/accounting-layer-vault#何时使用-takemintsettleburn","html":"\n<p>这取决于你的使用案例，对于大多数使用案例，<code>take/settle</code> 就足够了。</p>\n<p>不过如果你在开发一个进行大量交易的合约，例如套利机器人，你可以考虑使用 <code>mint/burn</code> 来通过减少 ERC-20 代币传输的次数来节省 gas 费用。</p>","isPage":false,"text":"\n这取决于你的使用案例，对于大多数使用案例，take/settle 就足够了。\n不过如果你在开发一个进行大量交易的合约，例如套利机器人，你可以考虑使用 mint/burn 来通过减少 ERC-20 代币传输的次数来节省 gas 费用。","title":"何时使用 take/mint/settle/burn？","titles":["Accounting Layer | Vault","调整余额"]},"420":{"href":"/contracts/v4/overview/amm-layer-poolmanager#amm-层--poolmanager","html":"</header>\n<p>Pool Managers 是单例合约，封装了不同类型 AMMs 的逻辑。在初始部署中，将有 2 种 AMM 类型，访问它们各自的页面了解更多信息。</p>\n<ol>\n<li><a href=\"/contracts/v4/overview/amm-layer/concentrated-liquidity\">CLPoolManager</a></li>\n<li><a href=\"/contracts/v4/overview/amm-layer/liquidity-book\">BinPoolManager</a></li>\n</ol>\n","isPage":true,"text":"\nPool Managers 是单例合约，封装了不同类型 AMMs 的逻辑。在初始部署中，将有 2 种 AMM 类型，访问它们各自的页面了解更多信息。\n\nCLPoolManager\nBinPoolManager\n\n","title":"AMM 层 | PoolManager","titles":[]},"421":{"href":"/contracts/v4/overview/amm-layer-poolmanager#单例","html":"\n<p>在 PancakeSwap v3 中，每个池都是一个独立的合约。在 PancakeSwap v4 中，所有池将被封装在一个单一的 PoolManager 合约中。例如，所有集中流动性池在 <a href=\"https://github.com/pancakeswap/pancake-v4-core/blob/main/src/pool-cl/CLPoolManager.sol\">CLPoolManager</a> 中，以及所有流动性书池在 <a href=\"https://github.com/pancakeswap/pancake-v4-core/blob/main/src/pool-bin/BinPoolManager.sol\">BinPoolManager</a> 中。</p>\n","isPage":false,"text":"\n在 PancakeSwap v3 中，每个池都是一个独立的合约。在 PancakeSwap v4 中，所有池将被封装在一个单一的 PoolManager 合约中。例如，所有集中流动性池在 CLPoolManager 中，以及所有流动性书池在 BinPoolManager 中。\n","title":"单例","titles":["AMM 层 | PoolManager",null]},"422":{"href":"/contracts/v4/overview/amm-layer-poolmanager#poolkey--poolid","html":"\n<p><a href=\"https://github.com/pancakeswap/pancake-v4-core/blob/main/src/types/PoolKey.sol\">PoolKey</a> 是描述每个池的结构体。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">/// </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">@notice</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> 返回用于标识池的关键数据</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> PoolKey</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    /// </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">@notice</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> 池中的低阶货币，按数值排序</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Currency currency0;</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    /// </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">@notice</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> 池中的高阶货币，按数值排序</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Currency currency1;</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    /// </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">@notice</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> 池的钩子，不会有通用接口，因为钩子接口因池类型不同</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    IHooks hooks;</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    /// </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">@notice</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> 池的池管理器</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    IPoolManager poolManager;</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    /// </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">@notice</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> 池的交换费，上限为1_000_000。上位 4 位确定钩子是否设置费用。</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    uint24</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fee;</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    /// </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">@notice</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> 钩子的回调和池的特定参数，例如 CL 的 tickSpacing，bin 的 binStep</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    bytes32</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> parameters;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<p><a href=\"https://github.com/pancakeswap/pancake-v4-core/blob/main/src/types/PoolId.sol\">PoolId</a> 是 <code>keccak256(abi.encode(poolKey))</code> 的 bytes32 。您会注意到某些来自 PoolManager 的输入需要 PoolId。通过以下方法从 <code>PoolKey</code> 派生 <code>PoolId</code>：</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PoolIdLibrary</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">} </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;@pancakeswap/v4-core/src/types/PoolId.sol&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// 对 PoolKey 类型使用 PoolIdLibrary</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">using</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> PoolIdLibrary</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> for</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> PoolKey</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">PoolKey </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">memory</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> key </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> PoolKey</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  currency0</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> currency0,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  currency1</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> currency1,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  hooks</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> IHooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  poolManager</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> poolManager,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  fee</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> uint24</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">3000</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  parameters</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> bytes32</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(counterHook.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getHooksRegistrationBitmap</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())).</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">setTickSpacing</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">});</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// 通过 PoolIdLibrary 从 PoolKey 获取 PoolId</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">Poolid id </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> key.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">toId</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">();</span></span></code></pre>\n","isPage":false,"text":"\nPoolKey 是描述每个池的结构体。\n/// @notice 返回用于标识池的关键数据\nstruct PoolKey {\n    /// @notice 池中的低阶货币，按数值排序\n    Currency currency0;\n    /// @notice 池中的高阶货币，按数值排序\n    Currency currency1;\n    /// @notice 池的钩子，不会有通用接口，因为钩子接口因池类型不同\n    IHooks hooks;\n    /// @notice 池的池管理器\n    IPoolManager poolManager;\n    /// @notice 池的交换费，上限为1_000_000。上位 4 位确定钩子是否设置费用。\n    uint24 fee;\n    /// @notice 钩子的回调和池的特定参数，例如 CL 的 tickSpacing，bin 的 binStep\n    bytes32 parameters;\n}\nPoolId 是 keccak256(abi.encode(poolKey)) 的 bytes32 。您会注意到某些来自 PoolManager 的输入需要 PoolId。通过以下方法从 PoolKey 派生 PoolId：\nimport {PoolIdLibrary} from &quot;@pancakeswap/v4-core/src/types/PoolId.sol&quot;;\n \n// 对 PoolKey 类型使用 PoolIdLibrary\nusing PoolIdLibrary for PoolKey;\n \nPoolKey memory key = PoolKey({\n  currency0: currency0,\n  currency1: currency1,\n  hooks: IHooks(address(0)),\n  poolManager: poolManager,\n  fee: uint24(3000),\n  parameters: bytes32(uint256(counterHook.getHooksRegistrationBitmap())).setTickSpacing(10)\n});\n \n// 通过 PoolIdLibrary 从 PoolKey 获取 PoolId\nPoolid id = key.toId();\n","title":"PoolKey | PoolId","titles":["AMM 层 | PoolManager",null]},"423":{"href":"/contracts/v4/overview/amm-layer-poolmanager#初始化池","html":"\n<p>在池上进行交换或流动性操作之前，首先需要初始化池。要初始化，请调用 <code>CLPoolManager</code> 或 <code>BinPoolManager</code> 的初始化方法。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// CLPoolManager</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">PoolKey</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> memory</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> key</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint160</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> sqrtPriceX96</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">bytes</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> calldata</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> hookData</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// BinPoolManager</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">PoolKey</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> memory</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> key</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint24</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> activeId</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">bytes</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> calldata</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> hookData</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span></code></pre>","isPage":false,"text":"\n在池上进行交换或流动性操作之前，首先需要初始化池。要初始化，请调用 CLPoolManager 或 BinPoolManager 的初始化方法。\n// CLPoolManager\nfunction initialize(PoolKey memory key, uint160 sqrtPriceX96, bytes calldata hookData);\n \n// BinPoolManager\nfunction initialize(PoolKey memory key, uint24 activeId, bytes calldata hookData);","title":"初始化池","titles":["AMM 层 | PoolManager",null]},"424":{"href":"/contracts/v4/overview/custom-layer-hook#常见问题","html":"\n<hr/>\n<strong>Q1: Hook 合约可以在任何地址吗？</strong>\n<p>Hook 可以部署在任何地址。回调权限要求在 <code>poolkey.parameters</code> 中定义且不可变。任何对回调权限的更改将需要一个新的池。</p>\n<hr/>\n<strong>Q2: 你能详细解释一下 <code>poolKey.parameters</code> 吗？</strong>\n<p><code>poolKey.parameters</code> 是一个 bytes32 参数，包括所需的 hook 回调，其格式如下：</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// 前 16 位用于 hooks 回调 </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> -</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 15</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> 保留给 hooks 回调</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// 其他位可以由每种池类型使用，例如:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">16</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> -</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 39</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">] 集中式流动性池的 tick 间隔</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">16</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> -</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 31</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">] bin 池的 bin 步长</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">16</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> -</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> xx] 其他新的池类型配置</span></span></code></pre>\n<p>例如在 <code>ICLHooks.sol</code> 中，如果第 0 位的值为 1，则需要 beforeInitialise 回调。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">uint8</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> constant</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> HOOKS_BEFORE_INITIALIZE_OFFSET </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span></code></pre>\n<p>然而，这些都为你更容易实现！例如，要在参数中定义所需的回调，只需覆盖 hooks 并调用 <code>hooks.getHooksRegistrationBitmap</code>，如上所述。</p>\n","isPage":true,"text":"\n\nQ1: Hook 合约可以在任何地址吗？\nHook 可以部署在任何地址。回调权限要求在 poolkey.parameters 中定义且不可变。任何对回调权限的更改将需要一个新的池。\n\nQ2: 你能详细解释一下 poolKey.parameters 吗？\npoolKey.parameters 是一个 bytes32 参数，包括所需的 hook 回调，其格式如下：\n// 前 16 位用于 hooks 回调 \n[0 - 15]: 保留给 hooks 回调\n \n// 其他位可以由每种池类型使用，例如:\n[16 - 39] 集中式流动性池的 tick 间隔\n[16 - 31] bin 池的 bin 步长\n[16 - xx] 其他新的池类型配置\n例如在 ICLHooks.sol 中，如果第 0 位的值为 1，则需要 beforeInitialise 回调。\nuint8 constant HOOKS_BEFORE_INITIALIZE_OFFSET = 0;\n然而，这些都为你更容易实现！例如，要在参数中定义所需的回调，只需覆盖 hooks 并调用 hooks.getHooksRegistrationBitmap，如上所述。\n","title":"常见问题","titles":[null]},"425":{"href":"/contracts/v4/overview/custom-layer-hook#hook-列表","html":"\n<p>访问 <a href=\"https://github.com/pancakeswap/pancake-v4-hooks\">https://github.com/pancakeswap/pancake-v4-hooks</a> 查看更多 hook 示例。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span></span></span></code></pre>","isPage":false,"text":"\n访问 https://github.com/pancakeswap/pancake-v4-hooks 查看更多 hook 示例。\n","title":"Hook 列表","titles":[null]},"426":{"href":"/contracts/v4/overview/amm-layer/concentrated-liquidity#集中流动性池","html":"</header>\n","isPage":true,"text":"\n","title":"集中流动性池","titles":[]},"427":{"href":"/contracts/v4/overview/amm-layer/concentrated-liquidity#概览","html":"\n<p>集中流动性（来自 UniswapV3）增强了传统的自动做市商（AMM）模型。\r\n它允许流动性提供者（LPs）将资金集中在池内的特定价格区间，而不是像 v2 那样在整个交易范围内均匀分布流动性。</p>\n<p><img src=\"/pancake-developer/v4/amm-layer-poolmanager-cl-1.png\" alt=\"集中流动性曲线\"/></p>\n","isPage":false,"text":"\n集中流动性（来自 UniswapV3）增强了传统的自动做市商（AMM）模型。\r\n它允许流动性提供者（LPs）将资金集中在池内的特定价格区间，而不是像 v2 那样在整个交易范围内均匀分布流动性。\n\n","title":"概览","titles":["集中流动性池"]},"428":{"href":"/contracts/v4/overview/amm-layer/concentrated-liquidity#概念","html":"\n","isPage":false,"text":"\n","title":"概念","titles":["集中流动性池"]},"429":{"href":"/contracts/v4/overview/amm-layer/concentrated-liquidity#tick","html":"\n<p>Tick 指的是价格区间内的一个特定价格点。池的整个价格范围被划分为离散的区间，每个区间由 <code>tickLower, tickUpper</code> 定义。</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// 源自 ICLPoolManager.sol</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ModifyLiquidityParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // 头寸的上下 tick</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    int24</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tickLower;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    int24</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tickUpper;</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // 如何修改流动性</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    int256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> liquidityDelta;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">/// </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">@dev</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> 更多信息请见 CLPoolManager</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> modifyLiquidity</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">PoolKey</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> memory</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> key</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">ICLPoolManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">ModifyLiquidityParams</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> memory</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> params</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">bytes</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> calldata</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> hookData</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span></code></pre>\n<p>以下是根据 tick 计算价格的示例：</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>price = 1.0001 ** tick </span></span></code></pre>\n","isPage":false,"text":"\nTick 指的是价格区间内的一个特定价格点。池的整个价格范围被划分为离散的区间，每个区间由 tickLower, tickUpper 定义。\n// 源自 ICLPoolManager.sol\nstruct ModifyLiquidityParams {\n    // 头寸的上下 tick\n    int24 tickLower;\n    int24 tickUpper;\n    // 如何修改流动性\n    int256 liquidityDelta;\n}\n \n/// @dev 更多信息请见 CLPoolManager\nfunction modifyLiquidity(PoolKey memory key, ICLPoolManager.ModifyLiquidityParams memory params, bytes calldata hookData);\n以下是根据 tick 计算价格的示例：\nprice = 1.0001 ** tick \n","title":"Tick","titles":["集中流动性池","概念"]},"430":{"href":"/contracts/v4/overview/amm-layer/concentrated-liquidity#示例-1-cakeweth-池","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// token0: CAKE (18 位小数)</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// token1: WETH (18 位小数)</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// tick: -68554 (截至 2024 年 3 月 12 日)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">price</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 1.0001</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> **</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> -</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">68554</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0.00105411128</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// 这也意味着 1 CAKE = 0.00105411128 WETH </span></span></code></pre>\n","isPage":false,"text":"\n// token0: CAKE (18 位小数)\n// token1: WETH (18 位小数)\n// tick: -68554 (截至 2024 年 3 月 12 日)\n \nprice: 1.0001 ** -68554 = 0.00105411128\n// 这也意味着 1 CAKE = 0.00105411128 WETH \n","title":"示例 1:","titles":["集中流动性池","概念","Tick"]},"431":{"href":"/contracts/v4/overview/amm-layer/concentrated-liquidity#示例-2-wethusdt-池带有不同代币小数","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// token0: WETH (18 位小数)</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// token1: USDT (6 位小数)</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// tick: -193256 (截至 2024 年 3 月 12 日)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">price</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 1.0001</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> **</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> -</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">193256</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 4</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">04965646e-9</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// 这也意味着 1 WETH = 4.04965646e-9 USDT </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// 但是 WETH 是 18 位小数，而 USDT 是 6 位小数，我们必须将其乘以 12 位小数</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">带小数的 WETH</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">/</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">USDT 比率</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 4</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">04965646e-9</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">**</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">18</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">/</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">**</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">6</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> WETH </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 4049.65646</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> USDT</span></span></code></pre>\n","isPage":false,"text":"\n// token0: WETH (18 位小数)\n// token1: USDT (6 位小数)\n// tick: -193256 (截至 2024 年 3 月 12 日)\n \nprice: 1.0001 ** -193256 = 4.04965646e-9\n// 这也意味着 1 WETH = 4.04965646e-9 USDT \n// 但是 WETH 是 18 位小数，而 USDT 是 6 位小数，我们必须将其乘以 12 位小数\n带小数的 WETH/USDT 比率: = 4.04965646e-9 * (10**18/10**6): 1 WETH = 4049.65646 USDT\n","title":"示例 2:","titles":["集中流动性池","概念","Tick"]},"432":{"href":"/contracts/v4/overview/amm-layer/concentrated-liquidity#tick-间隔","html":"\n<p>Tick 间隔定义了池内相邻两个 tick 之间的最小价格变动。这是 <code>PoolKey</code> 中的一个参数。\r\n请记住，这里存在权衡。较小的 tick 间隔允许更精确的流动性定位，但可能会带来更高的 gas 成本。较大的 tick 间隔在 gas 成本方面可能更便宜，但可能会在交易执行中带来更高的滑点。</p>\n<table><thead><tr><th>Tick 间隔</th><th>Tick 之间的价格变动</th></tr></thead><tbody><tr><td>1</td><td>0.01%</td></tr><tr><td>10</td><td>0.1%</td></tr><tr><td>50</td><td>0.5%</td></tr><tr><td>100</td><td>1%</td></tr></tbody></table>\n","isPage":false,"text":"\nTick 间隔定义了池内相邻两个 tick 之间的最小价格变动。这是 PoolKey 中的一个参数。\r\n请记住，这里存在权衡。较小的 tick 间隔允许更精确的流动性定位，但可能会带来更高的 gas 成本。较大的 tick 间隔在 gas 成本方面可能更便宜，但可能会在交易执行中带来更高的滑点。\nTick 间隔Tick 之间的价格变动10.01%100.1%500.5%1001%\n","title":"Tick 间隔","titles":["集中流动性池","概念"]},"433":{"href":"/contracts/v4/overview/amm-layer/concentrated-liquidity#sqrtpricex96","html":"\n<p>这个 uint160 值表示 token0 和 token1 的平方根价格比率。它是一个二进制定点数 <code>Q64.96</code>，即 64 位整数和 96 位小数。</p>\n<p>因此</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">sqrtPriceX96 </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> sqrt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(price) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 2</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">**</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">96</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// 将价格移到 LHS 结果如下：</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">price </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (sqrtPriceX96 </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">/</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 2</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">**</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">96</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">**</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 2</span></span></code></pre>\n<p>以下是根据 sqrtPriceX96 计算价格比率的示例：</p>\n","isPage":false,"text":"\n这个 uint160 值表示 token0 和 token1 的平方根价格比率。它是一个二进制定点数 Q64.96，即 64 位整数和 96 位小数。\n因此\nsqrtPriceX96 = sqrt(price) * 2**96\n \n// 将价格移到 LHS 结果如下：\nprice = (sqrtPriceX96 / 2**96) ** 2\n以下是根据 sqrtPriceX96 计算价格比率的示例：\n","title":"sqrtPriceX96","titles":["集中流动性池","概念"]},"434":{"href":"/contracts/v4/overview/amm-layer/concentrated-liquidity#示例-1-cakeweth-池-1","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// token0: CAKE (18 位小数)</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// token1: WETH (18 位小数)</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// sqrtPriceX96: 2574020484831874748518739167 (截至 2024 年 3 月 12 日)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// token0 (CAKE) 与 token1 (WETH) 的价格比率：</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">price </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">2574020484831874748518739167</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> /</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 2</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">**</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">96</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">**</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">2</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0.00105551602</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">CAKE 对 WETH</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> CAKE </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0.00105551602</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> WETH </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">WETH 对 CAKE</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 1</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> /</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0.00105551602</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> WETH </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 947.40</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> CAKE </span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// CAKE 约为 $4.3 而 ETH 为 $4100。所以 947.40 CAKE = 4073 USDC</span></span></code></pre>\n","isPage":false,"text":"\n// token0: CAKE (18 位小数)\n// token1: WETH (18 位小数)\n// sqrtPriceX96: 2574020484831874748518739167 (截至 2024 年 3 月 12 日)\n \n// token0 (CAKE) 与 token1 (WETH) 的价格比率：\nprice = (2574020484831874748518739167 / 2**96) **2 = 0.00105551602\n \nCAKE 对 WETH: 1 CAKE = 0.00105551602 WETH \nWETH 对 CAKE: 1 / 0.00105551602: 1 WETH = 947.40 CAKE \n \n// CAKE 约为 $4.3 而 ETH 为 $4100。所以 947.40 CAKE = 4073 USDC\n","title":"示例 1:","titles":["集中流动性池","概念","sqrtPriceX96"]},"435":{"href":"/contracts/v4/overview/amm-layer/concentrated-liquidity#示例-2-wethusdt-池带有不同代币小数-1","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// token0: WETH (18 位小数)</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// token1: USDT (6 位小数)</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// sqrtPriceX96: 5046499860369450237927407 (截至 2024 年 3 月 12 日)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// token0 (WETH) 与 token1 (USDT) 的价格比率: 4.0571e-9 ETH 对 1 USDC</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">price </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">5046499860369450237927407</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> /</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 2</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">**</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">96</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">**</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">2</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 4</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0571e-9</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">WETH 对 USDC</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 4</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0571e-9</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> /</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">**</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">6</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">/</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">**</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">18</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> WETH </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 4057</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> USDT</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">USDT 对 WETH</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 4</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0571e-9</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> /</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">**</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">18</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">/</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">**</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">6</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> USDT </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 4</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0571e-21</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> WETH </span></span></code></pre>\n","isPage":false,"text":"\n// token0: WETH (18 位小数)\n// token1: USDT (6 位小数)\n// sqrtPriceX96: 5046499860369450237927407 (截至 2024 年 3 月 12 日)\n \n// token0 (WETH) 与 token1 (USDT) 的价格比率: 4.0571e-9 ETH 对 1 USDC\nprice = (5046499860369450237927407 / 2**96) **2 = 4.0571e-9\n \nWETH 对 USDC: 4.0571e-9 / (10**6/10**18): 1 WETH = 4057 USDT\nUSDT 对 WETH: 4.0571e-9 / (10**18/10**6): 1 USDT = 4.0571e-21 WETH \n","title":"示例 2:","titles":["集中流动性池","概念","sqrtPriceX96"]},"436":{"href":"/contracts/v4/overview/amm-layer/concentrated-liquidity#流动性变化","html":"\n<p>流动性变化，<code>int</code> 值，指的是 <code>modifyLiquidity</code> 时的流动性差异。当其为正时，表示用户正在增加流动性，相反，当其为负时，表示用户正在移除流动性。请参考 <code>LiquidityAmounts.sol</code> 来计算流动性。</p>","isPage":false,"text":"\n流动性变化，int 值，指的是 modifyLiquidity 时的流动性差异。当其为正时，表示用户正在增加流动性，相反，当其为负时，表示用户正在移除流动性。请参考 LiquidityAmounts.sol 来计算流动性。","title":"流动性变化","titles":["集中流动性池","概念"]}},"dirtCount":0,"index":[["指的是",{"2":{"436":1}}],["指的是价格区间内的一个特定价格点",{"2":{"429":1}}],["约为",{"2":{"434":1}}],["结果如下",{"2":{"433":1}}],["结构体",{"2":{"20":1,"79":3}}],["较大的",{"2":{"432":1}}],["较小的",{"2":{"432":1}}],["成本方面可能更便宜",{"2":{"432":1}}],["成本",{"2":{"432":1}}],["之间的价格变动10",{"2":{"432":1}}],["之间的最小价格变动",{"2":{"432":1}}],["之前",{"2":{"243":1}}],["之前使用的",{"2":{"217":1}}],["带小数的",{"2":{"431":1}}],["截至",{"2":{"430":1,"431":1,"434":1,"435":1}}],["源自",{"2":{"429":1}}],["源自以太坊网络",{"2":{"249":1}}],["定义",{"2":{"429":1}}],["概念",{"0":{"428":1},"1":{"429":1,"430":1,"431":1,"432":1,"433":1,"434":1,"435":1,"436":1}}],["概览",{"0":{"427":1}}],["那样在整个交易范围内均匀分布流动性",{"2":{"427":1}}],["那么每个其他协议都可以跳过这一步",{"2":{"111":1}}],["模型",{"2":{"427":1}}],["模块的元数据",{"2":{"60":1,"374":1}}],["模块的管理员地址",{"2":{"39":1}}],["增强了传统的自动做市商",{"2":{"427":1}}],["增加池子将存储的价格和流动性观测的最大数量",{"2":{"318":1}}],["增加头寸中的流动性",{"2":{"206":1}}],["示例",{"0":{"430":1,"431":1,"434":1,"435":1},"2":{"425":1}}],["访问",{"2":{"425":1}}],["访问它们各自的页面了解更多信息",{"2":{"420":1}}],["列表",{"0":{"425":1}}],["步长",{"2":{"424":1}}],["集中流动性",{"2":{"427":1}}],["集中流动性池",{"0":{"426":1},"1":{"427":1,"428":1,"429":1,"430":1,"431":1,"432":1,"433":1,"434":1,"435":1,"436":1}}],["集中式流动性池的",{"2":{"424":1}}],["集成合约时",{"2":{"110":1}}],["其他新的池类型配置",{"2":{"424":1}}],["其他位可以由每种池类型使用",{"2":{"424":1}}],["其格式如下",{"2":{"424":1}}],["保留给",{"2":{"424":1}}],["前",{"2":{"424":1}}],["吗",{"2":{"424":1}}],["回调",{"2":{"424":4}}],["回调权限要求在",{"2":{"424":1}}],["回调必须将该数量的",{"2":{"409":2}}],["常见问题",{"0":{"424":1}}],["常规农场可以获得的",{"2":{"39":1}}],["首先需要初始化池",{"2":{"423":1}}],["首先将",{"2":{"415":1}}],["派生",{"2":{"422":1}}],["钩子的回调和池的特定参数",{"2":{"422":1}}],["按数值排序",{"2":{"422":2}}],["单例",{"0":{"421":1}}],["单位为",{"2":{"317":1}}],["种",{"2":{"420":1}}],["封装了不同类型",{"2":{"420":1}}],["层",{"0":{"420":1},"1":{"421":1,"422":1,"423":1}}],["来计算流动性",{"2":{"436":1}}],["来自",{"2":{"427":1}}],["来通过减少",{"2":{"419":1}}],["来使用那些存储在",{"2":{"418":1}}],["就足够了",{"2":{"419":1}}],["何时使用",{"0":{"419":1}}],["假设调用者之前已经通过",{"2":{"418":1}}],["欠调用者代币数量",{"2":{"417":1}}],["欠款代币可能来自累计的交换费用或烧毁的流动性",{"2":{"322":1}}],["进行",{"2":{"416":1}}],["进行计算",{"2":{"102":1}}],["会返回",{"2":{"416":1}}],["会使合约查找其自身的余额",{"2":{"405":1}}],["下面是一个",{"2":{"415":1}}],["下的",{"2":{"216":1}}],["参考",{"2":{"415":1}}],["参数防止恶意合约窃取用户的",{"2":{"213":1}}],["参数",{"0":{"339":1,"341":1,"343":1,"345":1,"347":1,"349":1,"351":1,"353":1},"2":{"189":1,"190":1,"191":1,"192":1,"196":1,"197":1,"200":1,"202":1,"203":1,"204":1,"206":1,"207":1,"208":1,"209":1,"210":1,"212":1,"213":1,"284":1,"285":1,"286":1,"287":1,"288":1,"306":1,"308":1,"309":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"323":1,"327":1,"328":1,"329":1,"330":1,"401":1,"402":1,"405":1,"409":1,"410":1,"411":1,"412":1,"413":1,"424":1}}],["比如交换",{"2":{"415":1}}],["比率",{"2":{"317":1,"431":1}}],["高层次的步骤如下",{"2":{"415":1}}],["获得一个锁",{"2":{"415":2}}],["获取锁",{"2":{"415":1}}],["获取",{"2":{"413":1,"422":1}}],["获取实现输出数量所需要的输入数量",{"2":{"364":1}}],["获取输入数量",{"0":{"364":1},"1":{"365":1,"366":1}}],["获取更多信息",{"2":{"307":1}}],["获取质押者在池中的待领取奖励",{"2":{"72":1}}],["获取待领取奖励",{"0":{"72":1},"1":{"73":1,"74":1}}],["获取用户在池中的质押量",{"2":{"69":1}}],["获取用户质押数量",{"0":{"69":1},"1":{"70":1,"71":1}}],["获取池的详细信息",{"2":{"67":1}}],["获取池信息",{"0":{"67":1},"1":{"68":1}}],["锁机制",{"0":{"415":1},"2":{"415":1}}],["促进了安全高效的结算过程",{"2":{"414":1}}],["记录了存入或欠下的代币",{"2":{"414":1}}],["记录属于",{"2":{"154":1}}],["它是一个二进制定点数",{"2":{"433":1}}],["它允许流动性提供者",{"2":{"427":1}}],["它包含",{"2":{"416":1}}],["它维持了一个代币账本",{"2":{"414":1}}],["它作为一个不可变的会计层",{"2":{"414":1}}],["反向",{"2":{"413":1}}],["编码为",{"2":{"410":1,"411":1,"412":1,"413":1}}],["设为0将导致合约查询其自身的余额",{"2":{"410":1,"411":1}}],["设置为",{"2":{"405":1}}],["设置为零",{"2":{"322":1}}],["设置协议的费用比例分母",{"2":{"329":1}}],["设置池子的初始价格",{"2":{"319":1}}],["设置费用金额的额外信息",{"2":{"288":1}}],["设置有权限调整",{"2":{"241":1}}],["设置",{"2":{"106":1,"240":1,"400":1}}],["负余额变动",{"0":{"417":1}}],["负",{"2":{"409":2}}],["负数表示准确金额",{"2":{"327":2}}],["负数",{"2":{"327":1}}],["都可以为0",{"2":{"409":1}}],["都有其独立的智能合约",{"2":{"14":1}}],["执行交换后调用",{"2":{"409":1}}],["执行维护调用的账号",{"2":{"39":1}}],["只需覆盖",{"2":{"424":1}}],["只有合约所有者可以调用",{"2":{"400":1}}],["只能每隔",{"2":{"295":1}}],["只能在此值的倍数处使用",{"2":{"295":1}}],["只能由所有者调用",{"2":{"197":1}}],["构造函数",{"0":{"393":1}}],["供应量",{"0":{"383":1},"1":{"384":1}}],["总量",{"2":{"383":1}}],["总",{"0":{"383":1},"1":{"384":1}}],["总分配点数",{"2":{"140":1}}],["检查用户的",{"2":{"380":1}}],["检查是否已创建池",{"2":{"378":1}}],["余额",{"0":{"380":1},"1":{"381":1,"382":1},"2":{"380":1}}],["余额的变化量",{"2":{"327":2}}],["k",{"2":{"372":2}}],["keccak256",{"2":{"101":1,"107":1,"422":1}}],["key",{"2":{"39":1,"40":1,"60":1,"61":1,"371":1,"372":1,"373":1,"374":1,"422":2,"423":2,"429":1}}],["四跳交换确切输出",{"0":{"356":1},"1":{"358":1,"359":1,"360":1,"361":1,"362":1,"363":1}}],["四跳交换确切输入",{"0":{"355":1}}],["三跳交换确切输出",{"0":{"354":1}}],["三跳交换确切输入",{"0":{"352":1},"1":{"353":1}}],["双跳交换确切输出",{"0":{"350":1},"1":{"351":1}}],["双跳交换确切输入",{"0":{"348":1},"1":{"349":1}}],["添加流动性",{"0":{"340":1},"1":{"341":1}}],["添加一个新的池",{"2":{"196":1}}],["yu64池中",{"2":{"373":1}}],["ycoin",{"2":{"372":1}}],["yz",{"2":{"348":1,"350":1,"352":1,"354":1,"355":1,"356":1}}],["y",{"0":{"358":1,"361":1},"2":{"336":1,"338":1,"340":3,"341":2,"342":2,"343":1,"344":2,"345":1,"346":2,"347":1,"348":1,"350":1,"352":1,"354":1,"355":1,"356":1,"358":3,"361":4,"362":1,"364":2,"369":1,"371":1,"372":9,"373":3,"376":1,"378":1,"380":1,"383":1,"385":1,"386":1,"387":1,"388":1}}],["ytype",{"2":{"336":1,"369":1}}],["y7g5nusq5ngslh2jbgqajjxulgw1bcqwibqkmbk3mwm",{"2":{"29":1}}],["新的协议费用",{"2":{"329":1}}],["新的协议费用feeprotocol1uint32池子的",{"2":{"329":1}}],["再加上费用",{"2":{"328":1}}],["正余额变动",{"0":{"418":1}}],["正",{"2":{"409":2}}],["正数表示最小金额",{"2":{"327":1}}],["正数表示最小金额amount1int256池子中",{"2":{"327":1}}],["正数",{"2":{"327":1}}],["正在收集的",{"2":{"210":1}}],["隐含地配置为确切输入量",{"2":{"327":1}}],["到确切",{"0":{"361":1}}],["到确切数量的",{"2":{"346":1,"350":1,"354":1,"356":1,"361":1}}],["到",{"0":{"358":1},"2":{"327":2,"344":1,"348":1,"352":1,"355":1,"358":1}}],["该代币在交换后可能会留在路由器中",{"2":{"412":1,"413":1}}],["该方法的调用者将在回调形式收到",{"2":{"327":1}}],["该重入防护装置在合约中是必需的",{"2":{"312":1}}],["要在参数中定义所需的回调",{"2":{"424":1}}],["要初始化",{"2":{"423":1}}],["要提取所有欠的代币",{"2":{"322":1}}],["要仅提取",{"2":{"322":1}}],["要获得过去一小时的时间加权平均",{"2":{"317":1}}],["与",{"2":{"434":1,"435":1}}],["与池管理器执行操作",{"2":{"415":1}}],["与回调中的值匹配",{"2":{"321":1}}],["与回调中的值匹配amount1uint256为铸造给定的流动性数量支付的",{"2":{"321":1}}],["与其直接授予协议许可",{"2":{"111":1}}],["价格限制",{"2":{"327":1}}],["价格",{"2":{"319":1}}],["价值挂钩",{"2":{"0":1}}],["未加锁",{"2":{"319":1}}],["未加速用户的加速因子",{"2":{"150":1}}],["大于或等于输入",{"2":{"318":1}}],["值",{"2":{"436":1}}],["值表示",{"2":{"433":1}}],["值secondsperliquiditycumulativex128suint160",{"2":{"317":1}}],["值到比率的转换",{"2":{"317":1}}],["应该调用",{"2":{"391":1}}],["应用",{"2":{"321":1,"323":1}}],["应返回每个secondsago的累积",{"2":{"317":1}}],["应接收代币的账户",{"2":{"210":1}}],["库可以用来从",{"2":{"317":1}}],["另一个代表该期间结束",{"2":{"317":1}}],["另外",{"2":{"216":1}}],["累积器的快照secondsperliquidityinsidex128uint160该范围内每流动性秒数的快照secondsinsideuint32该范围内每流动性的秒数的快照",{"2":{"316":1}}],["累积值",{"2":{"316":1}}],["快照不能被比较",{"2":{"316":1}}],["快照必须只能与其他快照进行比较",{"2":{"316":1}}],["范围内的",{"2":{"316":1}}],["互斥的重入保护装置",{"2":{"312":1}}],["您会注意到某些来自",{"2":{"422":1}}],["您必须用",{"2":{"317":1}}],["您可能更愿意使用",{"2":{"309":1}}],["您需要用两个值调用这个方法",{"2":{"317":1}}],["您需要增加这个数值",{"2":{"84":1}}],["您需要支付大约",{"2":{"84":1}}],["详见",{"2":{"307":1}}],["整个池子生命周期内每单位流动性收集的",{"2":{"301":1,"302":1}}],["存储槽包含许多值",{"2":{"300":1}}],["存款者的地址",{"2":{"50":1}}],["区间中可使用的最大流动性头寸量",{"2":{"296":1}}],["区块链地址gor",{"2":{"274":1,"275":1}}],["区块链地址bsc",{"2":{"274":1,"275":1}}],["区块大小增加或减少时可能需要进行调整",{"2":{"105":1}}],["任意",{"2":{"296":1}}],["任何对回调权限的更改将需要一个新的池",{"2":{"424":1}}],["任何",{"2":{"110":1}}],["例如在",{"2":{"424":1}}],["例如套利机器人",{"2":{"419":1}}],["例如",{"2":{"295":1,"317":1,"322":1,"416":1,"421":1,"422":1,"424":2}}],["间接通过",{"2":{"321":1,"323":1}}],["间隔tick",{"2":{"432":1}}],["间隔在",{"2":{"432":1}}],["间隔允许更精确的流动性定位",{"2":{"432":1}}],["间隔定义了池内相邻两个",{"2":{"432":1}}],["间隔",{"0":{"432":1},"2":{"295":1,"424":1}}],["间距的费用金额",{"2":{"286":1}}],["间距的额外信息",{"2":{"282":1}}],["间距",{"2":{"280":1,"286":1}}],["启用后费用金额不能被移除",{"2":{"286":1}}],["启用具有给定",{"2":{"286":1}}],["则需要",{"2":{"424":1}}],["则此方法将不起作用",{"2":{"318":1}}],["则该调用将恢复",{"2":{"284":1}}],["则使用",{"2":{"84":1}}],["能够路由到",{"2":{"274":1}}],["能够将",{"2":{"111":1}}],["聪明路由器",{"0":{"274":1}}],["外围",{"0":{"273":1}}],["核心",{"0":{"272":1}}],["核心白皮书",{"2":{"230":1,"246":1}}],["通知",{"2":{"415":1}}],["通用路由器地址",{"0":{"270":1}}],["通过以下方法从",{"2":{"422":1}}],["通过四个池",{"2":{"355":1,"356":1}}],["通过三个池",{"2":{"352":1,"354":1}}],["通过两个池",{"2":{"348":1,"350":1}}],["通过位置键返回有关特定位置的信息",{"2":{"308":1}}],["通过许可",{"2":{"262":1,"263":1,"264":1}}],["通过传递一个",{"2":{"110":1}}],["通过一个签名将不同的代币转移给不同的接收者",{"2":{"110":1}}],["通过一个签名设置不同代币对不同使用者的权限",{"2":{"110":1}}],["通过",{"2":{"87":1,"415":1,"422":1}}],["名称",{"2":{"269":1}}],["名称类型描述creatoraddress池的创建者地址",{"2":{"372":1}}],["名称类型描述y",{"2":{"365":1}}],["名称类型描述x",{"2":{"359":1,"362":1}}],["名称类型描述xtype",{"2":{"336":1,"369":1}}],["名称类型描述feeprotocol0uint32池子的",{"2":{"329":1}}],["名称类型描述feeuint24whitelistrequestedbool是否只有所有者才能创建的标志enabledbool费用是否启用的标志",{"2":{"288":1}}],["名称类型描述feeuint24要启用的费用金额",{"2":{"286":1}}],["名称类型描述reserve",{"2":{"373":1}}],["名称类型描述recipientaddress应收集协议费用的地址amount0requesteduint128发送的最大",{"2":{"330":1}}],["名称类型描述recipientaddress接收",{"2":{"328":1}}],["名称类型描述recipientaddress接收收集到的费用的地址ticklowerint24需要收集费用的位置的下限",{"2":{"322":1}}],["名称类型描述recipientaddress收到交换输出的地址zeroforonebool交换方向",{"2":{"327":1}}],["名称类型描述recipientaddress将为其创建流动性的地址ticklowerint24添加流动性的位置的下限",{"2":{"321":1}}],["名称类型描述refundaddressaddress过剩的费用",{"2":{"84":1}}],["名称类型描述observationcardinalitynextuint16池子要存储的最小观察数量",{"2":{"318":1}}],["名称类型描述ticklowerint24烧毁流动性的位置的下限",{"2":{"323":1}}],["名称类型描述ticklowerint24范围的下限",{"2":{"316":1}}],["名称类型描述tickcumulativesint56",{"2":{"317":1}}],["名称类型描述tickcumulativeinsideint56该范围内",{"2":{"316":1}}],["名称类型描述tokenaaddress目标池中的其中一个代币tokenbaddress目标池中的另一个代币feeuint24目标池的费用",{"2":{"284":1}}],["名称类型描述tokenaaddress流动性对中其中一个代币的合约地址",{"2":{"257":1,"259":1,"264":1}}],["名称类型描述tokenaddress移除流动性的代币合约地址",{"2":{"260":1,"261":1,"262":1,"263":1}}],["名称类型描述total",{"2":{"42":1,"61":1}}],["名称类型描述useraddress添加到白名单的用户地址verifiedbool是否验证",{"2":{"287":1}}],["名称类型描述liquidityuint128增加后的流动性数量amount0uint256获取增加后的流动性所需的",{"2":{"206":1}}],["名称类型描述pathaddress",{"2":{"401":1,"402":1}}],["名称类型描述paramsstruct",{"2":{"206":1,"209":1,"210":1,"410":1,"411":1,"412":1,"413":1}}],["名称类型描述pooladdress新创建池的地址",{"2":{"284":1}}],["名称类型描述pidu64池的",{"2":{"48":1,"51":1}}],["名称类型描述pid",{"2":{"40":1}}],["名称类型描述versionuint16默认为",{"2":{"84":1}}],["名称类型描述addraddress用户地址",{"2":{"381":1}}],["名称类型描述addliquidityethuint以",{"2":{"258":1}}],["名称类型描述amountinuint256输入的代币数量",{"2":{"412":1,"413":1}}],["名称类型描述amountinuint输入代币的固定金额",{"2":{"268":1}}],["名称类型描述amountoutuint256接收的代币数量",{"2":{"410":1,"411":1}}],["名称类型描述amount0deltaint256交换结束时池发送",{"2":{"409":1}}],["名称类型描述amount0int256池子中",{"2":{"327":1}}],["名称类型描述amount0uint128收集到的协议费用",{"2":{"330":1}}],["名称类型描述amount0uint128收集的",{"2":{"322":1}}],["名称类型描述amount0uint256发送给收款人的",{"2":{"323":1}}],["名称类型描述amount0uint256为铸造给定的流动性数量支付的",{"2":{"321":1}}],["名称类型描述amount0uint256收集的",{"2":{"210":1}}],["名称类型描述amount0uint256计入该头寸应得的",{"2":{"209":1}}],["名称类型描述amountminimumuint256要解包的",{"2":{"213":1}}],["名称类型描述amountu128在池中抵押的代币总数量",{"2":{"41":1}}],["名称类型描述accountaddress质押者地址",{"2":{"70":1,"73":1}}],["名称类型描述accountsigner调用函数时发送者的签名者",{"2":{"63":1,"64":1,"65":1}}],["名称类型描述sqrtpricex96uint160池子的初始",{"2":{"319":1}}],["名称类型描述sendersigner调用函数时的发送者签名者",{"2":{"339":1,"341":1,"343":1,"345":1,"347":1,"349":1,"351":1,"353":1,"354":1,"355":1,"356":1,"377":1}}],["名称类型描述sendersigner调用函数时的发送者签名器",{"2":{"44":1,"45":1,"46":1}}],["名称类型描述secondsagosuint32",{"2":{"317":1}}],["名称类型描述swapexactethfortokenssupportingfeeontransfertokensuint支付的",{"2":{"267":1}}],["名称类型描述swapexactethfortokensuint支付的",{"2":{"266":1}}],["名称类型描述swapethforexacttokensuint支付的",{"2":{"265":1}}],["名称类型描述staketokentype",{"2":{"58":1}}],["名称类型描述signer",{"2":{"39":1,"60":1,"374":1}}],["名称类型描述",{"2":{"20":1,"84":1,"189":1,"190":1,"191":1,"192":1,"196":1,"197":1,"200":1,"202":1,"203":1,"204":1,"207":1,"208":1,"212":1,"285":1}}],["名称类型描述nonceuint256用户",{"2":{"19":1}}],["|",{"0":{"414":1,"420":1,"422":1},"1":{"415":1,"416":1,"417":1,"418":1,"419":1,"421":1,"422":1,"423":1},"2":{"269":1,"405":1,"416":2}}],["||",{"2":{"100":1,"107":1}}],["支持对手续费的代币",{"2":{"267":1,"269":1}}],["支付的金额",{"2":{"258":1}}],["支付",{"2":{"0":1,"206":1,"207":1}}],["尽可能多地交换输出代币",{"2":{"266":1,"267":1}}],["移除流动性",{"0":{"342":1},"1":{"343":1},"2":{"264":1}}],["组件",{"2":{"262":3,"263":3,"264":3}}],["全额授权",{"2":{"262":1,"263":1,"264":1}}],["全自动化且无人参与",{"2":{"95":1}}],["无需预批准",{"2":{"262":1,"264":1}}],["无论任何奖励情况",{"2":{"65":1}}],["无论是否有奖励",{"2":{"46":1}}],["无论是通过直接耗尽锁定资金",{"2":{"0":1}}],["中定义且不可变",{"2":{"424":1}}],["中",{"2":{"415":1,"421":4,"424":1}}],["中的一个参数",{"2":{"432":1}}],["中的一个关键机制是",{"2":{"415":1}}],["中的",{"2":{"410":1,"411":1,"412":1,"413":1}}],["中创建的",{"2":{"383":1}}],["中移除流动性并接收",{"2":{"262":1,"263":1}}],["中授予的许可调用",{"2":{"111":1}}],["滑点影响",{"2":{"257":2,"258":2,"259":2,"260":2,"261":2,"262":2,"263":2,"264":2,"341":2,"343":2}}],["向池中添加流动性",{"2":{"340":1}}],["向",{"2":{"257":1,"258":1}}],["内部函数文档",{"2":{"250":1}}],["相反",{"2":{"436":1}}],["相关内容说明",{"2":{"250":1}}],["相同",{"0":{"97":1}}],["阅读",{"2":{"246":1}}],["接口",{"0":{"244":1},"2":{"291":1}}],["接收",{"2":{"328":1}}],["接收到",{"2":{"199":1}}],["接收者合约地址",{"2":{"135":1}}],["接收销毁资产的地址owner",{"2":{"93":1}}],["依此类推",{"2":{"243":1}}],["第四步",{"2":{"415":1}}],["第二步",{"2":{"415":1}}],["第二个为",{"2":{"243":1}}],["第一步",{"2":{"415":1}}],["第一个创建的配对索引从",{"2":{"234":1}}],["创建用于交换的交易对池",{"2":{"338":1}}],["创建交易对",{"0":{"338":1},"1":{"339":1}}],["创建新配对时触发",{"2":{"243":1}}],["创建配对",{"2":{"239":1}}],["事件",{"0":{"242":1},"1":{"243":1},"2":{"239":1}}],["触发",{"2":{"239":1}}],["写入函数",{"0":{"238":1,"256":1},"1":{"239":1,"240":1,"241":1,"257":1,"258":1,"259":1,"260":1,"261":1,"262":1,"263":1,"264":1,"265":1,"266":1,"267":1,"268":1,"269":1}}],["有权限设置",{"2":{"237":1}}],["有关核心合约逻辑的更深入信息",{"2":{"230":1,"246":1}}],["持有人费用的接收地址",{"2":{"236":1}}],["非",{"2":{"236":1}}],["非单调的",{"2":{"110":1}}],["非单调重放保护",{"2":{"110":1}}],["显示当前通过工厂合约创建的配对数量",{"2":{"235":1}}],["开始",{"2":{"234":1}}],["索引",{"2":{"234":1}}],["个初始化一次",{"2":{"295":1}}],["个配对",{"2":{"234":1}}],["个小数点后",{"2":{"84":1}}],["传入",{"2":{"233":1}}],["读取函数",{"0":{"232":1,"248":1},"1":{"233":1,"234":1,"235":1,"236":1,"237":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1}}],["公链地址bsc0xca143ce32fe78f1f7019d7d551a6402fc5350c73eth0x1097053fd2ea711dad45caccc45eff7548fcb362zkevm0x02a84c1b3bbd7401a5f7fa98a384ebc70bb5749ezksync0xd03d8d566183f0086d8d09a84e1e30b58dd5619darbitrum0x02a84c1b3bbd7401a5f7fa98a384ebc70bb5749elinea0x02a84c1b3bbd7401a5f7fa98a384ebc70bb5749ebase0x02a84c1b3bbd7401a5f7fa98a384ebc70bb5749eopbnb0x02a84c1b3bbd7401a5f7fa98a384ebc70bb5749e",{"2":{"231":1}}],["公共函数",{"0":{"49":1,"66":1,"357":1,"375":1},"1":{"50":1,"51":1,"52":1,"53":1,"54":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"358":1,"359":1,"360":1,"361":1,"362":1,"363":1,"364":1,"365":1,"366":1,"376":1,"377":1,"378":1,"379":1,"380":1,"381":1,"382":1,"383":1,"384":1,"385":1,"386":1,"387":1,"388":1}}],["文档",{"2":{"230":1,"246":1}}],["他们可以调用此函数",{"2":{"229":1}}],["需要更改合约的所有权",{"2":{"229":1}}],["一旦池子开始",{"2":{"227":1,"228":1}}],["一个四步流程的例子",{"2":{"415":1}}],["一个代表该期间的开始",{"2":{"317":1}}],["一个",{"2":{"196":1,"295":1}}],["质押限制只能增加",{"2":{"226":1}}],["多签合约控制",{"2":{"221":1}}],["多重签名合约控制",{"2":{"94":1,"96":1,"97":1}}],["但可能会在交易执行中带来更高的滑点",{"2":{"432":1}}],["但可能会带来更高的",{"2":{"432":1}}],["但只能在池子开始前调用",{"2":{"227":1,"228":1}}],["但通常是",{"2":{"221":1}}],["但是",{"2":{"84":1,"431":1}}],["角色描述合约拥有者",{"2":{"220":1}}],["角色描述injectoraddress",{"2":{"93":1}}],["你能详细解释一下",{"2":{"424":1}}],["你必须支付交换所需的池代币",{"2":{"409":1}}],["你也可以通过其部署者来追踪每个",{"2":{"216":1}}],["你可以考虑使用",{"2":{"419":1}}],["你可以在",{"2":{"216":1}}],["你可以在历史",{"2":{"14":1}}],["你可以通过其部署者追踪每个",{"2":{"14":1}}],["链接来获取合约地址",{"2":{"216":1}}],["链地址bsc0x1a0a18ac4becddbd6389559687d1a73d8927e416eth0x65b382653f7c31bc0af67f188122035461ec9c76arbitrum0xfe6508f0015c778bdcc1fb5465ba5ebe224c9912base0xfe6508f0015c778bdcc1fb5465ba5ebe224c9912linea0xfe6508f0015c778bdcc1fb5465ba5ebe224c9912opbnb0xb89a6778d1efe7a5b7096757a21b810cc2886fa1zkevm0xb89a6778d1efe7a5b7096757a21b810cc2886fa1zksync0xdaee41e335322c85ff2c5a6745c98e1351806e98",{"2":{"270":1}}],["链地址bsc0x10ed43c718714eb63d5aa57b78b54704e256024eeth0xeff92a263d31888d860bd50809a8d171709b7b1czkevm0x8cfe327cec66d1c090dd72bd0ff11d690c33a2ebzksync0x5aeaf2883fbf30f3d62471154eda3c0c1b05942darbitrum0x8cfe327cec66d1c090dd72bd0ff11d690c33a2eblinea0x8cfe327cec66d1c090dd72bd0ff11d690c33a2ebbase0x8cfe327cec66d1c090dd72bd0ff11d690c33a2ebopbnb0x8cfe327cec66d1c090dd72bd0ff11d690c33a2eb",{"2":{"247":1}}],["链地址bsc0x31c2f6fcff4f8759b3bd5bf0e1084a055615c768eth0x31c2f6fcff4f8759b3bd5bf0e1084a055615c768arbitrum0x31c2f6fcff4f8759b3bd5bf0e1084a055615c768base0x31c2f6fcff4f8759b3bd5bf0e1084a055615c768linea0x31c2f6fcff4f8759b3bd5bf0e1084a055615c768opbnb0x31c2f6fcff4f8759b3bd5bf0e1084a055615c768zkevm0x31c2f6fcff4f8759b3bd5bf0e1084a055615c768scroll0x31c2f6fcff4f8759b3bd5bf0e1084a055615c768zksync0x686fd50007eaa636f01154d660b96110b6bfe351",{"2":{"108":1}}],["链地址bsc0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82eth0x152649ea73beab28c5b49b26eb48f7ead6d4c898arbitrum0x1b896893dfc86bb67cf57767298b9073d2c1ba2cbase0x3055913c90fcc1a6ce9a358911721eeb942013a1linea0x0d1e753a25ebda689453309112904807625befbeopbnb0x2779106e4f4a8a28d77a24c18283651a2ae22d1czkevm0x0d1e753a25ebda689453309112904807625befbezksync0x3a287a06c66f9e95a56327185ca2bdf5f031cecd",{"2":{"87":1}}],["链地址bsc",{"2":{"87":1,"108":1,"270":1}}],["找到每个池子的",{"2":{"216":1}}],["页面下",{"2":{"216":1}}],["解包并作为",{"2":{"213":1}}],["收集池子累计的协议费用",{"2":{"330":1}}],["收集欠头寸的代币",{"2":{"322":1}}],["收集费用和退款",{"2":{"211":1}}],["收集的",{"2":{"210":2}}],["收集指定头寸中最多的费用到接收者",{"2":{"210":1}}],["警告",{"2":{"210":1}}],["减少头寸中的流动性",{"2":{"209":1}}],["退款",{"2":{"208":1}}],["作为滑点检查",{"2":{"206":2}}],["作为目标空投的燃料费用",{"2":{"84":1}}],["花费的",{"2":{"206":4}}],["液增加流动性的",{"2":{"206":1}}],["头寸的上下",{"2":{"429":1}}],["头寸的农场加速倍数",{"2":{"204":1}}],["头寸的流动性",{"2":{"203":1}}],["头寸管理器合约地址",{"2":{"189":1}}],["时的流动性差异",{"2":{"436":1}}],["时生成的冻结能力",{"2":{"372":1}}],["时生成的销毁能力",{"2":{"372":1}}],["时生成的铸造能力",{"2":{"372":1}}],["时间加权平均",{"2":{"317":1}}],["时间戳",{"2":{"19":1}}],["时使用",{"2":{"210":1}}],["时",{"2":{"199":1}}],["见事件",{"2":{"239":1}}],["见",{"2":{"197":1}}],["分配点数",{"2":{"197":1}}],["分发",{"2":{"102":1}}],["分发给用户的奖励总数量",{"2":{"41":1}}],["操作",{"2":{"196":1,"197":1}}],["仅允许",{"2":{"313":1}}],["仅允许所有者调用",{"2":{"196":1}}],["仅用于紧急情况",{"2":{"139":1,"193":1}}],["实际数量将在流动性变化或收获时发生",{"2":{"192":1}}],["实用工具",{"0":{"85":1}}],["待领取的",{"2":{"192":1}}],["适用于流动性挖矿池",{"2":{"191":1}}],["周期结束时间",{"2":{"190":1,"191":1}}],["返回用于标识池的关键数据",{"2":{"422":1}}],["返回从当前区块时间戳起的每个时间戳",{"2":{"317":1}}],["返回在",{"2":{"316":1}}],["返回被截断为",{"2":{"315":1}}],["返回的地址调用该函数",{"2":{"313":1}}],["返回特定观测索引的数据",{"2":{"309":1}}],["返回给定代币对和费用的池地址",{"2":{"281":1}}],["返回给定费用金额的",{"2":{"280":1}}],["返回当前的池部署者",{"2":{"279":1}}],["返回当前工厂的所有者",{"2":{"278":1}}],["返回由工厂合约创建的第",{"2":{"234":1}}],["返回",{"2":{"233":1,"234":1,"249":1,"250":1,"282":1,"307":1}}],["返回对应的配对合约地址",{"2":{"233":1}}],["返回每秒的",{"2":{"190":1,"191":1}}],["返回值",{"0":{"52":1,"54":1,"68":1,"71":1,"74":1,"360":1,"363":1,"366":1,"379":1,"382":1,"384":1,"386":1,"388":1},"2":{"206":1,"209":1,"210":1,"284":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"300":1,"306":1,"308":1,"309":1,"316":1,"317":1,"321":1,"322":1,"323":1,"327":1,"330":1,"410":1,"411":1,"412":1,"413":1}}],["数量databytes在回调时传递的任何数据",{"2":{"328":1}}],["数量的地址amount0uint256发送的",{"2":{"328":1}}],["数量amount1uint128收集到的协议费用",{"2":{"330":1}}],["数量amount1uint256发送的",{"2":{"328":1}}],["数量amount1uint256发送给收款人的",{"2":{"323":1}}],["数量amount1uint256计入该头寸应得的",{"2":{"209":1}}],["数量amount1uint256获取增加后的流动性所需的",{"2":{"206":1}}],["数量amount1requesteduint128需要从应付费用中提取的",{"2":{"322":1}}],["数量基于",{"2":{"192":1}}],["数量",{"2":{"154":1,"190":1,"191":1,"206":1,"209":1,"257":4,"258":1,"259":2,"260":1,"261":1,"262":1,"263":1,"264":1,"265":1,"266":1,"267":1,"268":1,"322":1,"323":1,"330":3,"341":2,"345":2,"347":2,"349":2,"351":2,"353":2,"354":2,"355":2,"356":2,"362":1,"365":1,"366":1,"382":1,"409":2}}],["必须由头寸所有者调用",{"2":{"322":1}}],["必须由当前所有者调用",{"2":{"285":1}}],["必须符合",{"2":{"291":1}}],["必须",{"2":{"265":1,"266":1,"267":1,"268":1}}],["必须大于",{"2":{"151":1}}],["必须是所有池的分配点数之和",{"2":{"140":1}}],["最大值",{"2":{"304":1}}],["最大加速因子的硬限制",{"2":{"151":1}}],["最小数量",{"2":{"341":2,"343":2}}],["最小数量recipientaddress接收",{"2":{"213":1}}],["最小值为",{"2":{"295":1}}],["最终的",{"2":{"243":1}}],["最新的",{"2":{"217":1}}],["最新的奖励分发时间",{"2":{"42":1}}],["最新",{"2":{"15":1}}],["基本的加速因子",{"2":{"150":1}}],["基于签名的转移使用无序",{"2":{"110":1}}],["基于签名的代币转账",{"2":{"110":1}}],["基于签名的批准",{"2":{"110":1}}],["基于",{"2":{"102":1,"107":1,"230":1,"246":1}}],["默认的周期时长",{"2":{"146":1}}],["运营者地址",{"2":{"145":1}}],["农场加速器合约地址",{"2":{"138":1}}],["农场可以获得",{"2":{"39":1}}],["查找池子中特定",{"2":{"306":1}}],["查询",{"2":{"130":1}}],["查看更多",{"2":{"425":1}}],["查看待领取的",{"2":{"192":1}}],["查看",{"2":{"25":2,"91":1,"114":1,"115":1,"120":1,"121":1,"247":1}}],["计价代币",{"2":{"116":1}}],["计算价格比率的示例",{"2":{"433":1}}],["计算价格的示例",{"2":{"429":1}}],["计算扣除",{"2":{"102":1}}],["计算合约",{"0":{"12":1}}],["xx",{"2":{"424":1}}],["xu64池中",{"2":{"373":1}}],["xcoin",{"2":{"372":1}}],["xy",{"2":{"348":1,"350":1,"352":1,"354":1,"355":1,"356":1,"371":1,"372":1,"373":1,"378":1,"383":1,"385":1,"387":1}}],["x",{"0":{"358":1,"361":1},"2":{"336":1,"338":1,"340":3,"341":2,"342":2,"343":1,"344":2,"345":1,"346":2,"347":1,"348":2,"349":1,"350":2,"351":1,"352":2,"353":1,"354":3,"355":3,"356":3,"358":4,"361":5,"364":1,"369":1,"371":1,"372":9,"373":3,"376":1,"378":1,"380":1,"383":1,"385":1,"386":1,"387":1,"388":1}}],["x27",{"2":{"116":24,"244":2,"333":3}}],["xss",{"2":{"0":1}}],["稳定币交换工厂和信息",{"2":{"400":1}}],["稳定币交换信息地址",{"2":{"116":1}}],["稳定币交换地址",{"2":{"116":1}}],["稳定币交换池中的代币数量",{"2":{"401":1,"402":1}}],["稳定币交换池",{"0":{"116":1}}],["稳定交换",{"0":{"112":1},"1":{"113":1,"114":1,"115":1}}],["此方法的调用者必须被检查为由",{"2":{"409":1}}],["此方法的调用者将在回调形式收到",{"2":{"328":1}}],["此方法在测试中被覆盖",{"2":{"315":1}}],["此参数在每个",{"2":{"296":1}}],["此外",{"2":{"111":1}}],["此值会根据",{"2":{"84":1}}],["类的好处扩展到每个现有的",{"2":{"111":1}}],["类型使用",{"2":{"422":1}}],["类型描述u128lp",{"2":{"384":1}}],["类型描述u128用户拥有的",{"2":{"382":1}}],["类型描述u64获取指定数量的",{"2":{"366":1}}],["类型描述u64质押者在池中有资格领取的奖励代币数量",{"2":{"74":1}}],["类型描述u64用户在池中质押的代币总量",{"2":{"71":1}}],["类型描述u64池的总数量",{"2":{"54":1}}],["类型描述u64待领取的",{"2":{"52":1}}],["类型描述bool池是否已创建",{"2":{"379":1}}],["类型描述coin",{"2":{"360":1}}],["类型字符串必须遵循",{"2":{"110":1}}],["类型来验证任何额外数据",{"2":{"110":1}}],["类型",{"0":{"58":1,"79":1,"336":1,"369":1},"2":{"420":1}}],["然后调用",{"2":{"415":1}}],["然后才能与池管理器进行任何操作",{"2":{"415":1}}],["然后最终使用其授予的许可直接在",{"2":{"111":1}}],["然而",{"2":{"111":1,"424":1}}],["位整数和",{"2":{"433":1}}],["位小数",{"2":{"430":2,"431":5,"433":1,"434":2,"435":2}}],["位的值为",{"2":{"424":1}}],["位的区块时间戳",{"2":{"315":1}}],["位用于",{"2":{"424":1}}],["位确定钩子是否设置费用",{"2":{"422":1}}],["位置类型0u64池中",{"2":{"388":1}}],["位置类型描述0u64池中",{"2":{"386":1}}],["位置类型描述0u64池中质押代币的总量",{"2":{"68":1}}],["位置类型描述0coin",{"2":{"363":1}}],["位置添加流动性",{"2":{"321":1}}],["位打包的",{"2":{"307":1}}],["位于协议和",{"2":{"111":1}}],["而",{"2":{"431":1,"434":1}}],["而不是像",{"2":{"427":1}}],["而不是比较因子在期间内计算的快照",{"2":{"316":1}}],["而不是此方法来获取某个时间戳之前的数据",{"2":{"309":1}}],["而不是直接调用",{"2":{"111":1}}],["而失败",{"2":{"84":1}}],["协议费用在任意代币中都不会超过",{"2":{"304":1}}],["协议应得的",{"2":{"304":1}}],["协议将调用规范",{"2":{"111":1}}],["协议合约在",{"2":{"111":1}}],["可能会觉得要求用户首先授予显式许可是一种退步",{"2":{"111":1}}],["可以部署在任何地址",{"2":{"424":1}}],["可以是",{"2":{"330":2}}],["可以传递",{"2":{"328":1}}],["可以将",{"2":{"322":1}}],["可以按任意顺序传递",{"2":{"284":1}}],["可以以任意顺序传递",{"2":{"281":1}}],["可以由当前所有者通过",{"2":{"278":1}}],["可以由",{"2":{"227":1,"228":1}}],["可以修改每笔交易的最大票数",{"2":{"105":1}}],["可以使用此函数找回",{"2":{"103":1}}],["可以调用此函数向指定的",{"2":{"99":1}}],["可以在这里找到",{"2":{"58":1}}],["可以从合约中的",{"2":{"19":1}}],["可以用",{"2":{"0":1}}],["所以",{"2":{"434":1}}],["所需要的",{"2":{"366":1}}],["所持有的代币",{"2":{"111":1}}],["所有集中流动性池在",{"2":{"421":1}}],["所有池将被封装在一个单一的",{"2":{"421":1}}],["所有池信息",{"2":{"40":1}}],["所有签名验证支持",{"2":{"110":1}}],["所有者可以签署消息直接将代币转移到指定的使用者",{"2":{"110":1}}],["所有农场池每秒的",{"2":{"39":1}}],["所有特殊农场分配点总和",{"2":{"39":1}}],["所有常规农场分配点总和",{"2":{"39":1}}],["所有已添加",{"2":{"39":1}}],["所有投票指标的绝对和相对权重都应基于此合约的输出",{"2":{"28":1}}],["所有的奖励都由",{"2":{"0":1}}],["所有的漏洞报告必须包含概念验证",{"2":{"0":1}}],["后者使用其在步骤",{"2":{"111":1}}],["表示用户正在移除流动性",{"2":{"436":1}}],["表示用户正在增加流动性",{"2":{"436":1}}],["表示池子的几何时间加权平均价格",{"2":{"317":1}}],["表示",{"2":{"294":1,"401":2,"402":2}}],["表示此池是常规农场",{"2":{"42":2}}],["表明协议合约被允许代表她转移代币",{"2":{"111":1}}],["消息也会过期",{"2":{"111":1}}],["消息作为参数传递",{"2":{"111":1}}],["消息",{"2":{"111":3}}],["签署一个链下的",{"2":{"111":1}}],["签名仅在执行交易的过程中有效",{"2":{"110":1}}],["签名和交易数据来实现单一交易流程",{"2":{"110":1}}],["签名",{"0":{"19":1},"2":{"19":1}}],["流程",{"0":{"111":1}}],["流动性变化",{"0":{"436":1},"2":{"436":1}}],["流动性或捐献",{"2":{"415":1}}],["流动性代币对应于每个",{"2":{"371":1}}],["流动性减少的",{"2":{"209":1}}],["流动性挖矿池部署者合约地址",{"2":{"137":1}}],["流动性",{"2":{"29":2}}],["流动性等",{"2":{"29":1}}],["因为钩子接口因池类型不同",{"2":{"422":1}}],["因为它初始化未锁定",{"2":{"319":1}}],["因为过期的批准将不再有效",{"2":{"110":1}}],["因此",{"2":{"433":1}}],["因此这个值应该在调用上下文中硬编码或缓存",{"2":{"280":1,"282":1}}],["因此已签署的许可无需按特定顺序执行交易",{"2":{"110":1}}],["因此合约可以通过签名批准和转移代币",{"2":{"110":1}}],["过期批准",{"2":{"110":1}}],["标准",{"2":{"110":1}}],["标准在链间桥接",{"2":{"87":1}}],["哈希和",{"2":{"110":1}}],["安全任意数据验证",{"2":{"110":1}}],["安全审计报告",{"2":{"26":1}}],["安全审计",{"2":{"6":1,"9":2,"31":1,"55":1,"123":2,"333":3}}],["绕过设置任何许可",{"2":{"110":1}}],["批量撤销许可",{"2":{"110":1}}],["批量代币转账",{"2":{"110":1}}],["批量代币批准",{"2":{"110":1}}],["批准可以是有时间限制的",{"2":{"110":1}}],["批准在各种应用中变得更容易",{"2":{"109":1}}],["批准",{"2":{"109":1}}],["发送到池中",{"2":{"409":2}}],["发送给接收者",{"2":{"213":1}}],["发送一个",{"2":{"110":1}}],["发行",{"2":{"125":1}}],["发放奖励的合约",{"2":{"28":1}}],["样式的批准",{"2":{"110":1}}],["现在也可以使用",{"2":{"110":1}}],["更多信息请见",{"2":{"429":1}}],["更改",{"2":{"278":1}}],["更安全和更一致",{"2":{"109":1}}],["更新工厂的所有者",{"2":{"285":1}}],["更新指定池的",{"2":{"197":1}}],["更新",{"2":{"107":1,"203":1,"204":1,"287":1}}],["更新彩票的内部状态",{"2":{"102":1}}],["更新前级地址数量",{"2":{"102":1}}],["更新特定池的信息",{"2":{"48":1}}],["更新所有池的信息",{"2":{"47":1}}],["使得",{"2":{"109":1}}],["使用",{"2":{"87":1,"102":1}}],["元交易系统",{"2":{"109":1}}],["引入了一种低开销的新一代",{"2":{"109":1}}],["简介",{"0":{"109":1}}],["当其为负时",{"2":{"436":1}}],["当其为正时",{"2":{"436":1}}],["当前稳定币交换的",{"2":{"116":1}}],["当",{"2":{"105":1,"243":1}}],["闪涨事件期间将票价设置为任意价格",{"2":{"104":1}}],["防止",{"2":{"104":1}}],["转移",{"2":{"212":1}}],["转移到指定的地址",{"2":{"417":1}}],["转移到",{"2":{"102":1,"415":1}}],["转换并空投给您",{"2":{"84":1}}],["没有",{"2":{"102":1}}],["没有访问敏感合约操作的权限",{"2":{"95":1}}],["报告前级地址数",{"2":{"102":1}}],["报告仅限于那些导致用户签署交易或重定向的影响",{"2":{"0":1}}],["j",{"2":{"102":9}}],["jojo",{"2":{"29":1}}],["奖金",{"2":{"102":1}}],["奖励总数量",{"2":{"52":1}}],["奖励的最后时间",{"2":{"39":2}}],["奖励的合约",{"2":{"28":1}}],["奖励百分比",{"2":{"39":4}}],["奖励",{"2":{"39":2,"50":1,"192":1}}],["从当前区块时间戳起的每个",{"2":{"317":2}}],["从费用中检索",{"2":{"284":1}}],["从对手续费的",{"2":{"261":1,"263":1}}],["从",{"2":{"212":1,"259":1,"260":1,"262":1,"264":1,"415":1,"422":1}}],["从池中移除流动性",{"2":{"342":1}}],["从池中收获",{"2":{"200":1}}],["从池中提取",{"2":{"202":1}}],["从池中提取质押代币",{"2":{"64":1,"65":1}}],["从池中提取抵押代币",{"2":{"45":1,"46":1}}],["从而在每次交易结束时",{"2":{"414":1}}],["从而使合约能够在调用此函数之前发送代币",{"2":{"410":1,"411":1}}],["从而转移",{"2":{"111":1}}],["从而消除对钱包整个代币余额悬挂的批准的安全担忧",{"2":{"110":1}}],["从最高等级开始计算每个等级的",{"2":{"102":1}}],["初始化池",{"0":{"423":1}}],["初始化布尔值",{"2":{"307":1}}],["初始化提取到",{"2":{"102":1}}],["初始化一个计数前一个等级地址数量的变量",{"2":{"102":1}}],["根据种子请求生成器生成随机数",{"2":{"101":1,"107":1}}],["+",{"2":{"100":5,"102":2}}],["+=",{"2":{"99":1,"102":2}}],["和池",{"2":{"348":1,"350":1,"352":1,"354":1,"355":1,"356":1}}],["和流动性值的时间间隔",{"2":{"317":1}}],["和流动性",{"2":{"317":1}}],["和稳定池",{"2":{"274":1}}],["和",{"0":{"99":1},"2":{"106":1,"224":1,"233":2,"239":2,"281":1,"284":1,"304":1,"316":1,"327":2,"328":2,"372":1,"409":1,"416":1,"433":1}}],["和投票指标",{"0":{"27":1},"1":{"28":1}}],["目前与",{"0":{"97":1}}],["调整余额",{"0":{"416":1},"1":{"417":1,"418":1,"419":1},"2":{"415":1}}],["调度地址",{"2":{"95":1}}],["调用者现在可以调用",{"2":{"418":1}}],["调用者欠",{"2":{"418":1}}],["调用者有两种选择",{"2":{"417":1,"418":1}}],["调用者然后需要通过以下四种方法中的一种与",{"2":{"415":1}}],["调用者执行操作",{"2":{"415":1}}],["调用者需要先从",{"2":{"415":1}}],["调用者可以传递任何大于实际欠款代币的值",{"2":{"322":1}}],["调用回调捐赠基础代币予当前范围内的流动性提供者",{"2":{"328":1}}],["调用它",{"2":{"317":1}}],["调用方不是加速合约时抛出",{"2":{"188":1}}],["调用以结束彩票轮次",{"2":{"101":1}}],["调用",{"2":{"100":1,"111":1,"210":1,"227":1,"228":1}}],["调用函数时的发送者签名器",{"2":{"44":1,"45":1,"46":1}}],["调用useraddress用户地址basetokenaddress用户发送给做市商的代币地址quotetokenaddress用户从做市商接收的代币地址basetokenamountuint256交换中基础代币的数量quotetokenamountuint256交换中报价代币的数量expirytimestampuint256签名的到期时间",{"2":{"19":1}}],["阈值为",{"2":{"94":1,"96":1,"97":1}}],["由于我们使用余额检查来确定铸造",{"2":{"312":1}}],["由于某些必要的计算逻辑更新",{"2":{"28":1}}],["由",{"2":{"94":1,"96":1,"97":1,"101":1,"107":1}}],["是一个",{"2":{"424":1}}],["是一个可以支付的函数",{"2":{"84":1}}],["是",{"2":{"422":1,"431":2}}],["是描述每个池的结构体",{"2":{"422":1}}],["是单例合约",{"2":{"420":1}}],["是为了避免强制类型转换",{"2":{"295":1}}],["是唯一的",{"2":{"130":1}}],["是用于定期注资彩票的地址operatoraddress",{"2":{"93":1}}],["联署计划合同在",{"2":{"91":1}}],["联署计划合同",{"2":{"91":1}}],["联署计划合同用于领取奖励",{"2":{"90":1}}],["智能路由",{"0":{"115":1}}],["智能链",{"0":{"91":1,"114":1}}],["智能合约",{"0":{"32":1},"1":{"33":1,"34":1,"35":1}}],["智能合约和区块链",{"2":{"0":1}}],["合同的签名验证",{"2":{"110":1}}],["合同需要不时地补充",{"2":{"90":1}}],["合约可以在任何地址吗",{"2":{"424":1}}],["合约中",{"2":{"421":1}}],["合约名",{"2":{"368":1}}],["合约名称",{"2":{"4":1,"5":1,"8":1,"12":1,"17":1,"25":2,"28":3,"37":1,"57":1,"77":1,"83":1,"231":1,"247":1,"276":1,"335":1}}],["合约bsc",{"2":{"272":1,"273":2}}],["合约的拥有者",{"2":{"220":1}}],["合约的",{"2":{"111":1}}],["合约上的",{"2":{"111":1}}],["合约上调用",{"2":{"111":1}}],["合约授予无限许可",{"2":{"111":1}}],["合约拥有者可以调用此函数更新每个池子的质押限制",{"2":{"226":1}}],["合约拥有者可以调用此函数",{"2":{"225":1}}],["合约拥有者可以使用该函数回收误发送到合约中的非",{"2":{"224":1}}],["合约拥有者可以从池子合约中提取奖励",{"2":{"223":1}}],["合约拥有者",{"0":{"221":1,"223":1,"224":1,"225":1,"226":1,"227":1,"228":1,"229":1},"2":{"93":1,"227":1,"228":1,"229":1}}],["合约角色",{"0":{"93":1,"220":1},"1":{"94":1,"95":1,"96":1,"97":1,"221":1}}],["合约在",{"2":{"25":2,"114":1,"115":1}}],["合约地址",{"2":{"4":1,"5":1,"8":1,"12":1,"17":2,"25":2,"28":6,"37":1,"57":1,"77":1,"83":1,"114":1,"115":1,"117":1,"120":1,"121":1,"122":1,"133":1,"134":1,"276":1,"335":1,"368":1,"390":1}}],["合约",{"0":{"4":1,"5":1,"245":1},"2":{"8":1,"28":1,"107":1,"111":1,"117":1}}],["合约信息",{"0":{"3":1,"8":1,"11":1,"14":1,"17":1,"24":1,"28":1,"37":1,"57":1,"77":1,"82":1,"113":1,"119":1,"216":1,"231":1,"247":1,"335":1,"368":1,"390":1},"1":{"4":1,"5":1,"12":1,"15":1,"18":1,"19":1,"20":1,"25":1,"83":1,"114":1,"115":1,"120":1,"121":1,"122":1,"217":1}}],["测试网mixedroutequoterv10x678aa4bf4e210cf2166753e054d5b7c31cc7fa860x4c650fb471fe4e0f476fd3437c3411b1122c4e3b0x3652fc6edcbd76161b8554388867d3dab65eca930x9b1edfb3848660402e4f1dc25733764e80aa627a0xb048bbc1ee6b733fffcfb9e9cef7375518e25997tokenvalidator0x864ed564875bddd6f421e226494a0e7c071c06f80x556b9306565093c855aea9ae92a594704c2cd59e0x8be9ea9c6015985ab2f5a216093305a9aaeb81640x08529a4be615746ef31cdbed46ce556406787e2f0x678aa4bf4e210cf2166753e054d5b7c31cc7fa86",{"2":{"273":1}}],["测试网swaprouter",{"2":{"273":1}}],["测试网0x4c650fb471fe4e0f476fd3437c3411b1122c4e3bzkevm0xb66b07590b30d4e6e22e45ddc83b06bb018a7b44arbitrum0x66a9870ff7707936b0b0278cf999c5f2ac2e42f5zksync0x3c6aa61f72932ad5d7c917737367be32d5509e6flinea0xb66b07590b30d4e6e22e45ddc83b06bb018a7b44base0xad3fe5aeabf79b8291f877b367139466c221216e",{"2":{"275":1}}],["测试网0x9a489505a00ce272eaa5e07dba6491314cae3796",{"2":{"274":1}}],["测试网0x31c2f6fcff4f8759b3bd5bf0e1084a055615c768linea0x31c2f6fcff4f8759b3bd5bf0e1084a055615c768opbnb0x31c2f6fcff4f8759b3bd5bf0e1084a055615c768zkevm0x31c2f6fcff4f8759b3bd5bf0e1084a055615c768scroll",{"2":{"108":1}}],["测试网0x31c2f6fcff4f8759b3bd5bf0e1084a055615c768sepolia",{"2":{"108":1}}],["测试网0x8d008b313c1d6c7fe2982f62d32da7507cf43551eth",{"2":{"87":1}}],["测试网",{"2":{"87":1,"108":1,"270":1,"272":1,"274":1,"275":1}}],["主网zksyncpancakev3factory0x0bfbcf9fa4f9c56b0f40a671ad40e0805a0918650x1bb72e0cbbea93c08f535fc7856e0338d7f7a8abpancakev3pooldeployer0x41ff9aa7e16b8b1a8a8dc4f0efacd93d02d071c90x7f71382044a6a62595d5d357fe75ca8199123ad6",{"2":{"272":1}}],["主网",{"2":{"87":1,"108":1,"270":1,"275":1}}],["主网的链",{"2":{"84":1}}],["地址可以由所有者使用布尔值",{"2":{"287":1}}],["地址的人",{"2":{"237":1}}],["地址的函数",{"2":{"106":1}}],["地址因池子不同而可能不同",{"2":{"221":1}}],["地址和代币如下",{"2":{"116":1}}],["地址",{"0":{"87":1,"108":1,"271":1},"1":{"272":1,"273":1,"274":1,"275":1},"2":{"102":1,"116":1,"233":1,"240":1}}],["`adapterparams`",{"2":{"84":1}}],["`",{"2":{"84":1}}],["如何修改流动性",{"2":{"429":1}}],["如何构建",{"2":{"84":2}}],["如上所述",{"2":{"424":1}}],["如同",{"2":{"111":1}}],["如果第",{"2":{"424":1}}],["如果为正",{"2":{"409":2}}],["如果没有代币被交换",{"2":{"409":1}}],["如果池子已经有一个",{"2":{"318":1}}],["如果池已存在",{"2":{"284":1}}],["如果在第一个快照拍摄和第二个快照拍摄之间的整个期间内未持有头寸",{"2":{"316":1}}],["如果不存在则返回地址",{"2":{"281":1}}],["如果不存在配对",{"2":{"233":1}}],["如果未启用",{"2":{"280":1}}],["如果启用",{"2":{"280":1}}],["如果配对不存在",{"2":{"239":1}}],["如果配对尚未创建",{"2":{"234":1}}],["如果存在",{"2":{"233":1}}],["如果",{"2":{"229":1,"327":2}}],["如果需要在奖励分发结束前停止奖励分发",{"2":{"225":1}}],["如果错误地将非",{"2":{"103":1}}],["如果该等级的奖励",{"2":{"102":1}}],["如果该等级的用户数量大于",{"2":{"102":1}}],["如果您不需要桥接将",{"2":{"84":1}}],["如果您定义了额外的空投燃料到您的目标地址",{"2":{"84":1}}],["如果有任何奖励代币",{"2":{"63":1,"64":1}}],["如果有奖励代币",{"2":{"44":1,"45":1}}],["否则你将丢失资金",{"2":{"210":1}}],["否则",{"2":{"102":1}}],["否则交易将因",{"2":{"84":1}}],["否则为特殊农场",{"2":{"42":2}}],["继续阅读以了解更多详细信息",{"2":{"84":2}}],["不会有通用接口",{"2":{"422":1}}],["不过如果你在开发一个进行大量交易的合约",{"2":{"419":1}}],["不重新计算应收取的费用",{"2":{"322":1}}],["不是数组中特定索引的数据",{"2":{"309":1}}],["不能减少",{"2":{"226":1}}],["不在多重签名范围内",{"2":{"95":1}}],["不应大于",{"2":{"84":1}}],["不要参考",{"2":{"28":1}}],["费用的数量",{"2":{"322":1}}],["费用的数量amount1uint128收集的",{"2":{"322":1}}],["费用增长",{"2":{"301":1,"302":1}}],["费用金额的额外信息可以由所有者更新",{"2":{"288":1}}],["费用金额不能被移除",{"2":{"280":1,"282":1}}],["费用无效或代币参数无效",{"2":{"284":1}}],["费用后的分配金额",{"2":{"102":1}}],["费用",{"2":{"84":1,"419":1}}],["我们必须将其乘以",{"2":{"431":1}}],["我们可以通过",{"2":{"130":1}}],["我们的后端会生成一个签名作为用户领取奖励的凭证",{"2":{"90":1}}],["我们不收取任何",{"2":{"84":1}}],["我们会不断部署更多功能",{"2":{"33":1}}],["8",{"2":{"84":2}}],["小于",{"2":{"84":1}}],["请记住",{"2":{"432":1}}],["请调用",{"2":{"423":1}}],["请查看",{"2":{"250":1}}],["请阅读",{"2":{"230":2,"246":1}}],["请确保在设置接收者地址为",{"2":{"210":1}}],["请注意",{"2":{"84":2}}],["请参考",{"2":{"29":1,"436":1}}],["请参照上面的地址",{"2":{"19":1}}],["whitelistrequested",{"2":{"288":1}}],["wbnb",{"2":{"249":1}}],["wrongreceiver",{"0":{"167":1},"2":{"167":1}}],["weth9",{"2":{"213":3,"393":1}}],["wethaddress",{"2":{"189":1}}],["weth",{"0":{"134":1,"249":1},"2":{"134":2,"189":1,"249":2,"430":2,"431":5,"434":6,"435":6}}],["wei",{"2":{"84":1}}],["witness",{"2":{"110":2}}],["withupdatebool是否调用",{"2":{"196":1,"197":1}}],["withupdate",{"2":{"196":1,"197":1}}],["withdraw",{"0":{"45":1,"46":1,"64":1,"65":1,"174":1,"202":1},"2":{"45":1,"46":1,"61":2,"64":1,"65":1,"174":1,"202":1}}],["with",{"2":{"39":1,"40":1,"333":1}}],["以下是根据",{"2":{"429":1,"433":1}}],["以及所有流动性书池在",{"2":{"421":1}}],["以尽可能少的代币交换沿指定路径",{"2":{"413":1}}],["以尽可能少的代币交换",{"2":{"412":1}}],["以仅收集",{"2":{"330":2}}],["以节省外部访问时的",{"2":{"300":1}}],["以防止流动性在任意时刻溢出",{"2":{"296":1}}],["以百分之一",{"2":{"294":1}}],["以百亿分之一为单位",{"2":{"286":1}}],["以整数形式返回",{"2":{"235":1}}],["以限制漏洞的攻击窗口",{"2":{"111":1}}],["以执行转账",{"2":{"111":1}}],["以在需要更新抽奖逻辑或发布更新时使用",{"2":{"107":1}}],["以启动新的彩票轮次",{"2":{"100":1}}],["以",{"2":{"84":1,"319":1}}],["以前使用",{"2":{"15":1}}],["为了简洁省略了一些代码",{"2":{"415":1}}],["为了获得时间加权平均",{"2":{"317":1}}],["为给定的收款人",{"2":{"321":1}}],["为给定的两种代币和费用创建一个池",{"2":{"284":1}}],["为烧毁的流动性账户最小数量的",{"2":{"209":2}}],["为规范的",{"2":{"111":1}}],["为单位",{"2":{"84":1,"319":1}}],["为",{"2":{"84":1,"239":1,"295":2,"327":2,"434":1}}],["桥接到",{"0":{"84":1}}],["桥接合约",{"0":{"83":1}}],["桥接",{"0":{"81":1},"1":{"82":1,"83":1,"84":1,"85":1,"86":1},"2":{"86":1,"87":1}}],["跨链",{"0":{"81":1},"1":{"82":1,"83":1,"84":1,"85":1,"86":1}}],["跨链农场",{"0":{"1":1}}],["函数进行最终号码抽奖",{"2":{"102":1}}],["函数仅供",{"2":{"100":1}}],["函数",{"0":{"78":1,"98":1,"222":1},"1":{"79":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"223":1,"224":1,"225":1,"226":1,"227":1,"228":1,"229":1}}],["对于大多数使用案例",{"2":{"419":1}}],["对",{"2":{"75":1,"86":1,"422":1,"434":2,"435":3}}],["对应池",{"2":{"40":2}}],["za",{"2":{"352":1,"354":1,"355":1,"356":1}}],["z",{"2":{"348":2,"349":1,"350":2,"351":1,"352":1,"354":1,"355":1,"356":1}}],["zeroforone",{"2":{"327":2}}],["zeroaddress",{"0":{"155":1},"2":{"155":1}}],["zero",{"2":{"106":3}}],["zellic",{"2":{"75":1}}],["zropaymentaddress",{"2":{"84":1}}],["zksync",{"2":{"29":3}}],["zkevm",{"2":{"29":3,"272":1,"273":1}}],["秒",{"2":{"61":2,"68":2}}],["管理员多重签名地址",{"2":{"57":1}}],["管理员多签地址",{"2":{"37":1,"335":1,"368":1}}],["输入值",{"0":{"51":1,"70":1,"73":1,"359":1,"362":1,"365":1,"377":1,"381":1}}],["将价格移到",{"2":{"433":1}}],["将资金集中在池内的特定价格区间",{"2":{"427":1}}],["将有",{"2":{"420":1}}],["将多余的代币存储在",{"2":{"418":1}}],["将代币转移到",{"2":{"418":1}}],["将回调到调用者",{"2":{"415":1}}],["将确保这一点",{"2":{"391":1}}],["将流动性从发送方烧毁并将流动性欠款记入池子头寸",{"2":{"323":1}}],["将一个地址添加到白名单中",{"2":{"287":1}}],["将在排序顺序中位于",{"2":{"243":1}}],["将合约中的",{"2":{"213":1}}],["将减少的流动性数量",{"2":{"209":1}}],["将",{"2":{"102":1,"376":1,"405":2,"410":1,"411":1}}],["将其加入提取到",{"2":{"102":1}}],["将返回到该地址zropaymentaddressaddress0x0000000000000000000000000000000000000000adapterparamsbytes一组用于定义目标燃料空投的参数",{"2":{"84":1}}],["将转移给用户",{"2":{"63":1,"64":1}}],["将质押代币存入池中",{"2":{"63":1}}],["将要提取的代币数量",{"2":{"45":1}}],["将要存入的代币数量",{"2":{"44":1}}],["将抵押代币存入池中",{"2":{"44":1}}],["也会分配给用户",{"2":{"44":1,"45":1}}],["入口函数",{"0":{"43":1,"62":1,"337":1},"1":{"44":1,"45":1,"46":1,"47":1,"48":1,"63":1,"64":1,"65":1,"338":1,"339":1,"340":1,"341":1,"342":1,"343":1,"344":1,"345":1,"346":1,"347":1,"348":1,"349":1,"350":1,"351":1,"352":1,"353":1,"354":1,"355":1,"356":1}}],["抵押代币的总数量",{"2":{"42":1}}],["databytes",{"2":{"409":1}}],["data",{"2":{"321":1,"327":1,"328":1,"409":1,"415":3}}],["duplicatedpool",{"0":{"165":1},"2":{"165":1}}],["duration",{"0":{"146":1,"147":1,"148":1},"2":{"146":1,"147":1,"148":1}}],["drawn",{"2":{"102":1}}],["drawfinalnumberandmakelotteryclaimable",{"0":{"102":1},"2":{"102":1}}],["direct",{"2":{"358":1,"361":1}}],["divisor",{"2":{"100":2}}],["discount",{"2":{"100":2}}],["discountdivisor",{"2":{"100":4}}],["donate",{"2":{"416":1}}],["doublehop",{"2":{"348":1,"350":1}}],["docs",{"2":{"85":1}}],["domain",{"2":{"19":2}}],["dstnativegastransferaddress",{"2":{"84":1}}],["dstnativegastransferamount",{"2":{"84":1}}],["dstgaslimit",{"2":{"84":1}}],["dstchainiduint16aptos",{"2":{"84":1}}],["dstchainid",{"2":{"84":1}}],["dev",{"2":{"429":1}}],["delta",{"2":{"415":4}}],["decode",{"2":{"415":1}}],["decreaseliquidityparamstokenid",{"2":{"209":1}}],["decreaseliquidityparams",{"2":{"209":1}}],["decreaseliquidity",{"0":{"209":1},"2":{"209":1}}],["desiredu64希望提供的",{"2":{"341":2}}],["desired",{"2":{"340":2}}],["dex",{"2":{"333":3}}],["denominator",{"0":{"298":1},"2":{"298":1}}],["deadlineuint交易确认的最后期限时间戳",{"2":{"257":1,"258":1,"259":1,"260":1,"261":1,"262":1,"263":1,"264":1,"265":1,"266":1,"267":1,"268":1}}],["deadline",{"2":{"206":1,"209":1,"257":1,"258":1,"259":1,"260":1,"261":1,"262":1,"263":1,"264":1,"265":1,"266":1,"267":1,"268":1,"269":1}}],["deployer",{"2":{"177":1,"393":1}}],["depositcache",{"0":{"198":1},"2":{"198":1}}],["deposit",{"0":{"44":1,"63":1,"173":1},"2":{"44":1,"63":1,"173":1}}],["debtu128分发给用户的奖励总数量",{"2":{"41":1}}],["debt",{"2":{"41":1}}],["池管理器通过",{"2":{"415":1}}],["池是否已创建",{"0":{"378":1},"1":{"379":1}}],["池子当前范围内可用的流动性",{"2":{"305":1}}],["池子中的第",{"2":{"300":1}}],["池子中两种代币中排序在后的代币",{"2":{"293":1}}],["池子中两种代币中排序在前的代币",{"2":{"292":1}}],["池子的",{"2":{"295":1}}],["池子的小费率",{"2":{"294":1}}],["池并管理池协议费用的所有权和控制",{"2":{"277":1}}],["池中的高阶货币",{"2":{"422":1}}],["池中的低阶货币",{"2":{"422":1}}],["池中的累计",{"2":{"42":1}}],["池中移除流动性",{"2":{"259":1,"260":1,"261":1}}],["池中添加流动性",{"2":{"257":1,"258":1}}],["池部署者",{"0":{"217":1}}],["池都有其自己的智能合约",{"2":{"216":1}}],["池只能创建一个池",{"2":{"196":1}}],["池提供",{"2":{"125":1}}],["池的整个价格范围被划分为离散的区间",{"2":{"429":1}}],["池的交换费",{"2":{"422":1}}],["池的池管理器",{"2":{"422":1}}],["池的钩子",{"2":{"422":1}}],["池的地址",{"2":{"191":1,"196":1}}],["池的信息",{"2":{"129":1}}],["池的总数",{"2":{"53":1}}],["池的",{"2":{"48":1,"50":1,"424":1}}],["池分配点",{"2":{"42":1}}],["池",{"0":{"215":1},"1":{"216":1,"217":1},"2":{"40":1,"216":1,"348":1,"350":1,"352":2,"354":2,"355":3,"356":3,"371":1,"372":1,"373":1,"383":1,"385":1,"387":1}}],["池信息列表",{"2":{"39":1}}],["包含",{"2":{"40":1}}],["包括所需的",{"2":{"424":1}}],["包括团队",{"2":{"29":1}}],["包括价格",{"2":{"29":3}}],["每当你执行某些操作时",{"2":{"416":1}}],["每秒流动性",{"2":{"316":1}}],["每流动性秒数",{"2":{"316":1}}],["每对连续地址的池必须存在且有流动性",{"2":{"265":1,"266":1,"267":1,"268":1}}],["每股",{"2":{"42":2}}],["每次维护操作都会延长此时间戳",{"2":{"39":2}}],["每个区间由",{"2":{"429":1}}],["每个池都是一个独立的合约",{"2":{"421":1}}],["每个池的信息",{"2":{"42":1,"61":1}}],["每个池中的用户信息",{"2":{"41":1}}],["每个",{"2":{"14":1,"129":1,"216":1}}],["特殊农场可以获得的",{"2":{"39":1}}],["rbytes32许可签名的",{"2":{"262":1,"263":1,"264":1}}],["r",{"2":{"262":2,"263":2,"264":2}}],["router",{"0":{"117":1,"246":1,"334":1},"1":{"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"256":1,"257":1,"258":1,"259":1,"260":1,"261":1,"262":1,"263":1,"264":1,"265":1,"266":1,"267":1,"268":1,"269":1,"335":1,"336":1,"337":1,"338":1,"339":1,"340":1,"341":1,"342":1,"343":1,"344":1,"345":1,"346":1,"347":1,"348":1,"349":1,"350":1,"351":1,"352":1,"353":1,"354":1,"355":1,"356":1,"357":1,"358":1,"359":1,"360":1,"361":1,"362":1,"363":1,"364":1,"365":1,"366":1},"2":{"115":1,"117":1,"245":1,"332":1,"335":2}}],["rawdata",{"2":{"415":2}}],["randomnumbergenerator",{"2":{"107":1}}],["randomgeneratoraddress",{"2":{"107":5}}],["randomgenerator",{"2":{"101":1,"102":2,"107":1}}],["range",{"2":{"100":1}}],["rate",{"2":{"39":4}}],["register",{"2":{"376":1}}],["regularbooltrue",{"2":{"42":1}}],["regularu64常规农场可以获得的",{"2":{"39":1}}],["regular",{"2":{"39":3,"42":1}}],["remove",{"2":{"342":1}}],["removeliquiditywithpermit",{"0":{"264":1},"2":{"264":1}}],["removeliquidityethwithpermitsupportingfeeontransfertokens",{"0":{"263":1},"2":{"263":1}}],["removeliquidityethwithpermit",{"0":{"262":1},"2":{"262":1}}],["removeliquidityethsupportingfeeontransfertokens",{"0":{"261":1},"2":{"261":1}}],["removeliquidityeth",{"0":{"260":1},"2":{"260":1}}],["removeliquidity",{"0":{"259":1},"2":{"259":1}}],["remainingcake",{"2":{"182":1}}],["reserves",{"2":{"385":1}}],["reserve",{"2":{"372":2,"373":3}}],["reserveb",{"2":{"255":1}}],["reservea",{"2":{"255":1}}],["reserveout",{"2":{"251":1,"252":1}}],["reservein",{"2":{"251":1,"252":1}}],["refundeth",{"2":{"391":1}}],["refund",{"0":{"208":1},"2":{"208":1}}],["refundaddress",{"2":{"84":1}}],["returns",{"2":{"190":1,"191":1,"192":1,"199":1,"200":1,"201":1,"202":1,"206":1,"209":1,"210":1,"211":1,"233":1,"234":1,"235":1,"236":1,"237":1,"239":1,"244":6,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"257":1,"258":1,"259":1,"260":1,"261":1,"262":1,"263":1,"264":1,"265":1,"266":1,"268":1,"284":1,"315":1,"316":1,"317":1,"321":1,"322":1,"323":1,"327":1,"330":1,"401":1,"402":1,"405":1,"410":1,"411":1,"412":1,"413":1}}],["recipient",{"2":{"210":1,"213":1,"214":1,"321":1,"322":1,"327":1,"328":1,"330":1}}],["receiver",{"0":{"135":1},"2":{"135":1,"178":1,"194":1}}],["recoverwrongtokens",{"0":{"103":1,"224":1},"2":{"103":1,"224":1}}],["require",{"2":{"99":1,"100":6,"101":2,"102":2,"103":1,"104":1,"105":1,"106":3,"107":1,"224":2,"226":2,"227":1,"228":3}}],["rewardperblock",{"2":{"227":4}}],["rewardgrowthinside",{"2":{"127":1}}],["rewards",{"2":{"100":1}}],["rewardsbreakdown",{"2":{"100":9,"102":3}}],["rewardtoken",{"2":{"61":7,"63":1,"64":1,"65":1,"67":1,"69":1,"72":1,"223":1,"224":2}}],["rewardtokentype",{"2":{"58":1}}],["reward",{"2":{"41":2,"42":2,"61":12,"72":1,"127":1,"180":1,"192":1,"200":1,"201":1,"202":1,"224":1}}],["revenuesharingpool",{"2":{"28":1}}],["revenuesharingpoolgateway",{"2":{"28":1}}],["revenuesharingpoolforcake",{"2":{"28":2}}],["代币传输的次数来节省",{"2":{"419":1}}],["代币余额",{"0":{"387":1},"1":{"388":1}}],["代币储备",{"0":{"385":1},"1":{"386":1}}],["代币注册到账户",{"2":{"376":1}}],["代币数量",{"2":{"259":1,"260":1,"261":1,"262":1,"263":1,"264":1,"343":1,"418":1}}],["代币接收者的地址",{"2":{"257":1,"258":1,"259":1,"260":1,"261":1,"262":1,"263":1,"264":1}}],["代币由",{"2":{"206":1}}],["代币合约地址",{"2":{"189":1}}],["代币符号",{"2":{"116":1}}],["代币中",{"2":{"111":1}}],["代币之间",{"2":{"111":1}}],["代币的总供应量",{"2":{"384":1}}],["代币的接收地址",{"2":{"202":1}}],["代币的",{"2":{"111":1}}],["代币",{"2":{"110":1,"116":1,"202":1,"224":1,"372":1}}],["代币发送到彩票合约",{"2":{"103":1}}],["代币类型信息数组",{"2":{"39":2}}],["代币类型信息及相应的池",{"2":{"39":2}}],["代码",{"2":{"29":1}}],["资源账号的签名能力",{"2":{"39":1}}],["资源",{"0":{"38":1,"59":1,"370":1},"1":{"39":1,"40":1,"41":1,"42":1,"60":1,"61":1,"371":1,"372":1,"373":1,"374":1},"2":{"359":1,"360":1,"362":1,"363":2}}],["已经上链到",{"2":{"33":1}}],["已弃用",{"0":{"7":1},"1":{"8":1,"9":1}}],["功能",{"0":{"33":1,"110":1}}],["64",{"2":{"433":1}}],["65646",{"2":{"431":1}}],["65535",{"2":{"309":1}}],["68554",{"2":{"430":2}}],["6",{"2":{"94":1,"96":1,"97":1,"100":1,"102":1,"221":1,"286":1,"294":1,"295":2,"431":3,"435":3}}],["6u64用户限制秒数内允许质押的代币数量",{"2":{"68":1}}],["6gctvx98k3a9hf9zjvgekwjz7rtd4c1v173ryedbemfx",{"2":{"29":1}}],["6du6wwez22yacyzbtbsa3ceccmad8g7oq8aw6myd5vku",{"2":{"29":1}}],["hook",{"0":{"425":1},"2":{"424":3,"425":1}}],["hookdata",{"2":{"423":2,"429":1}}],["hooks",{"2":{"422":2,"424":5,"425":1}}],["house",{"2":{"333":1}}],["halborn",{"2":{"333":1}}],["harvestoperation",{"0":{"201":1},"2":{"201":1}}],["harvest",{"0":{"180":1,"200":1},"2":{"180":1,"200":1}}],["hasuserlimit",{"2":{"226":5}}],["has",{"2":{"39":1,"40":1,"41":1,"42":1,"60":1,"61":1,"227":1,"228":1,"371":1,"372":1,"373":1,"374":1}}],["higher",{"2":{"226":1,"228":1}}],["high",{"2":{"100":1}}],["hv1gncly5doczogtxjo4kwbtvxm3mahvzqbze4sut9ez",{"2":{"29":1}}],["https",{"2":{"0":1,"29":26,"34":1,"87":1,"415":1,"425":1}}],["31",{"2":{"424":1}}],["39",{"2":{"424":1}}],["3000",{"2":{"422":1}}],["3poolamountoutuint256amountinmaxuint256toaddress",{"2":{"402":1}}],["3poolamountinuint256amountoutminuint256toaddress",{"2":{"401":1}}],["3600",{"2":{"317":1}}],["32",{"2":{"315":2}}],["3",{"2":{"94":1,"96":1,"97":1,"100":1,"221":1,"295":4,"401":1,"402":1,"430":1,"431":1,"434":2,"435":1}}],["3u64开始时间",{"2":{"68":1}}],["3dkr3tyxtuwirlku9vpj3mvzeumeuggwurbfc72zbpyy",{"2":{"29":1}}],["3oyoaocjmv2zyzstpg6cus1gktzcc2cjmcvfpnywzvmr",{"2":{"29":1}}],["37wmh5kbu6qqytrpmwljmgprbxvhgpuzswqsww4finc2",{"2":{"29":1}}],["947",{"2":{"434":2}}],["9",{"2":{"431":3,"435":4}}],["96",{"2":{"319":1,"327":1,"433":4,"434":1,"435":1}}],["9pstwtnvvqwshuvrtcur8985ufzotdtdzwvt8k9kjgeg",{"2":{"29":1}}],["9opy17wnepd4recc43yhycqthseumqe26wyoemjztlex",{"2":{"29":1}}],["q2",{"2":{"424":1}}],["q1",{"2":{"424":1}}],["q128",{"0":{"152":1},"2":{"152":1,"301":1,"302":1}}],["quadruplehop",{"2":{"355":1,"356":1}}],["quotequotequote",{"2":{"20":1}}],["quotevalue",{"2":{"19":2}}],["quotetokenamount",{"2":{"19":2,"20":1}}],["quotetoken",{"2":{"19":2,"20":1,"116":3}}],["quotetype",{"2":{"19":2}}],["quote",{"0":{"255":1},"2":{"19":1,"20":3,"255":1}}],["quot",{"2":{"19":32,"28":2,"84":10,"99":2,"100":12,"101":4,"102":4,"103":2,"104":2,"105":2,"106":6,"107":2,"224":4,"226":4,"227":2,"228":6,"422":2}}],["q64",{"2":{"319":1,"433":1}}],["qproczexb8kyhueg55aolhbmwnlxexxopq7cunfkjmv",{"2":{"29":1}}],["日志值将是第一个创建的配对为",{"2":{"243":1}}],["日",{"2":{"29":2,"430":1,"431":1,"434":1,"435":1}}],["月",{"2":{"29":1,"430":1,"431":1,"434":1,"435":1}}],["4057",{"2":{"435":1}}],["4073",{"2":{"434":1}}],["40",{"2":{"434":2}}],["4049",{"2":{"431":1}}],["4u64结束时间",{"2":{"68":1}}],["4",{"2":{"29":1,"100":1,"422":1,"431":3,"435":5}}],["年",{"2":{"29":1,"430":1,"431":1,"434":1,"435":1}}],["21",{"2":{"435":1}}],["2pool",{"2":{"401":1,"402":1}}],["2u64储备更新时的时间戳",{"2":{"386":1}}],["2u64每秒钟发放的奖励",{"2":{"68":1}}],["2574020484831874748518739167",{"2":{"434":2}}],["256",{"2":{"307":1}}],["251mhfnn1rwjerxd2efwmpns73sanzn8ua192zw6ixve",{"2":{"29":1}}],["2612",{"2":{"110":1,"111":2}}],["2",{"0":{"431":1,"435":1},"2":{"84":1,"100":1,"243":1,"265":1,"266":1,"267":1,"268":1,"315":1,"401":1,"402":1,"420":1,"433":3,"434":2,"435":2}}],["2024",{"2":{"430":1,"431":1,"434":1,"435":1}}],["2021",{"2":{"29":1}}],["20",{"2":{"419":1}}],["200000",{"2":{"84":1}}],["200000dstnativegastransferamountuint目标原生燃料代币的空投数量",{"2":{"84":1}}],["2dstgaslimituint默认为",{"2":{"84":1}}],["2fq9u1dyx1bxuu6d3huzcfyzsbxphd8ywdujnvoxnjsp",{"2":{"29":1}}],["2njl7l4cmqagjsacm43ofmh6arf6gjobebajtz9ewaq9",{"2":{"29":1}}],["跟踪和验证",{"2":{"111":1}}],["跟踪您的跨链交易",{"2":{"85":1}}],["跟踪",{"2":{"29":2}}],["跟踪交易竞赛",{"2":{"29":3}}],["跟踪复活节大赛",{"2":{"29":1}}],["跟踪所有",{"2":{"29":11}}],["即使这个值始终是正数",{"2":{"295":1}}],["即使是不支持",{"2":{"110":1}}],["即",{"2":{"29":1,"286":1,"294":1,"295":1,"315":1,"316":1,"433":1}}],["积分和活动",{"2":{"29":1}}],["用固定数量的代币尽可能多地交换",{"2":{"269":1}}],["用固定数量的输入代币尽可能多地交换",{"2":{"268":1}}],["用固定数量的",{"2":{"266":1,"267":1}}],["用尽可能少的",{"2":{"265":1}}],["用户将其授予规范的",{"2":{"111":1}}],["用户的待领取",{"2":{"50":1}}],["用户",{"2":{"29":1}}],["用于从一个方法进入池子",{"2":{"312":1}}],["用于向",{"2":{"125":1}}],["用于运行常规操作的彩票调度账户treasuryaddress",{"2":{"93":1}}],["用于多合约领取",{"2":{"28":1}}],["用于领取每周",{"2":{"28":1}}],["用于领取每周收益分享奖励的合约",{"2":{"28":1}}],["帐户",{"2":{"29":1}}],["轮次和投注",{"2":{"29":3}}],["7968a225eba6c99f5f1070aeec1b405757dee939eabcfda43ba91588bf5fccf3",{"2":{"37":1}}],["7hroseafxfjtyqpbgcfannsgkzzczxzi6c75qlphekzq",{"2":{"29":1}}],["7",{"2":{"29":1}}],["721",{"2":{"29":1}}],["712",{"0":{"19":1},"2":{"19":1,"110":1}}],["抽奖和彩票",{"2":{"29":2}}],["涵盖各轮次",{"2":{"29":2}}],["彩票",{"2":{"29":1}}],["lhs",{"2":{"433":1}}],["lmpool",{"0":{"310":1},"2":{"171":1,"192":1,"310":1,"331":1}}],["lmpooldeployer",{"0":{"137":1},"2":{"137":1,"195":1}}],["log",{"2":{"317":1}}],["lockacquired",{"2":{"415":3}}],["lock",{"0":{"312":1},"2":{"312":1,"415":2}}],["lower",{"2":{"228":1}}],["low",{"2":{"100":1}}],["lotteries",{"2":{"99":2,"100":2,"101":4,"102":12,"107":1}}],["lotterynumberdrawn",{"2":{"102":1}}],["lotteryclose",{"2":{"101":1}}],["lotteryopen",{"2":{"100":1}}],["lotteryinjection",{"2":{"99":1}}],["lotteryid",{"2":{"99":5,"101":7,"102":18}}],["lottery",{"0":{"92":1},"1":{"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1},"2":{"29":1,"99":1,"100":5,"101":2,"102":1,"107":1}}],["layer",{"0":{"414":1},"1":{"415":1,"416":1,"417":1,"418":1,"419":1}}],["layerzero",{"2":{"85":1,"87":1}}],["layerzeroscan",{"2":{"85":1}}],["latestperiodcakepersecond",{"0":{"144":1},"2":{"144":1}}],["latestperiodendtime",{"0":{"143":1},"2":{"143":1}}],["latestperiodstarttime",{"0":{"142":1},"2":{"142":1}}],["latestperiodnumber",{"0":{"141":1},"2":{"141":1}}],["lastu64储备更新时的时间戳",{"2":{"373":1}}],["lastu128上一次交换时池中的",{"2":{"372":1}}],["lastrewardblock",{"2":{"228":2}}],["last",{"2":{"39":2,"42":2,"61":2,"372":1,"373":1}}],["lzcallparams",{"2":{"84":1}}],["liquidityamounts",{"2":{"436":1}}],["liquidityu64要移除的",{"2":{"343":1}}],["liquidityuint要移除的",{"2":{"259":1,"260":1,"261":1,"262":1,"263":1,"264":1}}],["liquiditystart",{"2":{"324":1}}],["liquiditydelta",{"2":{"320":1,"429":1}}],["liquidity",{"0":{"305":1},"2":{"127":1,"173":1,"175":1,"198":1,"206":1,"257":1,"258":1,"259":1,"260":1,"261":1,"262":1,"263":1,"264":1,"305":1,"325":1,"340":1,"342":2}}],["limits",{"2":{"100":1}}],["limitu64开始时间后应用用户限制的时间",{"2":{"61":1}}],["limit",{"2":{"61":5,"226":1}}],["lineazkevm",{"2":{"273":1}}],["linea",{"2":{"29":2,"272":1,"273":2,"274":1}}],["length",{"0":{"53":1},"1":{"54":1},"2":{"39":1,"40":1,"53":1,"100":3,"265":1,"266":1,"267":1,"268":1}}],["lt",{"2":{"39":3,"40":2,"44":1,"45":1,"46":1,"60":1,"61":13,"63":1,"64":1,"65":1,"67":1,"69":1,"72":1,"100":3,"102":1,"104":2,"227":1,"228":3,"338":1,"340":1,"342":1,"344":1,"346":1,"348":1,"350":1,"352":1,"354":1,"355":1,"356":1,"358":3,"361":4,"364":1,"371":1,"372":11,"373":1,"374":1,"376":1,"378":1,"380":1,"383":1,"385":1,"387":1}}],["lptoken",{"0":{"371":1},"2":{"371":1,"372":4}}],["lpaddress",{"2":{"116":3}}],["lpsymbol",{"2":{"116":3}}],["lpsvector所有已添加",{"2":{"39":1}}],["lps",{"2":{"39":1,"427":1}}],["lp",{"0":{"376":1,"380":1,"383":1},"1":{"377":1,"381":1,"382":1,"384":1},"2":{"39":5,"116":6,"202":1,"236":1,"259":1,"260":1,"261":1,"262":1,"263":1,"264":1,"343":1,"372":4,"376":2,"380":2,"382":1,"383":2}}],["outu64支付的输出",{"2":{"347":1,"351":1,"354":1,"356":1}}],["outu64接收的最小",{"2":{"345":1,"349":1,"353":1,"355":1}}],["output",{"2":{"346":1,"350":1,"354":1,"356":1}}],["out",{"2":{"344":1,"346":1,"348":1,"350":1,"352":1,"354":1,"355":1,"356":1,"361":1,"362":1,"364":1,"365":1}}],["outside",{"2":{"100":2}}],["observe",{"0":{"317":1},"2":{"309":1,"317":1}}],["observation",{"2":{"309":1}}],["observations",{"0":{"309":1},"2":{"309":1}}],["observationcardinalitynext",{"2":{"299":1,"318":3}}],["observationcardinality",{"2":{"299":1}}],["observationindex",{"2":{"299":1}}],["oracle",{"2":{"309":1}}],["oldendtime",{"2":{"182":1}}],["over",{"2":{"101":1}}],["override",{"2":{"99":1,"100":1,"101":1,"102":1}}],["offset",{"2":{"424":1}}],["of",{"2":{"100":2}}],["oft",{"2":{"35":1,"86":1,"87":1}}],["open",{"2":{"99":2,"100":1,"101":2}}],["operatoraddress",{"0":{"145":1},"2":{"106":5,"145":1}}],["operator",{"0":{"95":1,"100":1,"101":1,"102":1},"2":{"100":1,"101":1,"102":1,"104":1,"106":1,"176":1}}],["opbnb0x678aa4bf4e210cf2166753e054d5b7c31cc7fa86arbitrum0x32226588378236fd0c7c4053999f88ac0e5cac77zksync0xf8b59f3c3ab33200ec80a8a58b2aa5f5d2a8944c",{"2":{"274":1}}],["opbnbarbitrumzksyncgor",{"2":{"273":1}}],["opbnbzksyncgor",{"2":{"273":1}}],["opbnb",{"2":{"29":4,"272":1}}],["owneraddress工厂的新所有者",{"2":{"285":1}}],["owner",{"0":{"94":1,"97":1,"99":1,"103":1,"104":1,"105":1,"106":1,"107":1,"278":1},"2":{"99":1,"103":1,"105":1,"107":1,"278":1,"285":1,"313":1,"320":1}}],["on",{"2":{"247":1}}],["onlyfactoryowner",{"0":{"313":1},"2":{"313":1}}],["onlyboostcontract",{"0":{"188":1},"2":{"188":1}}],["onlyreceiver",{"0":{"187":1},"2":{"187":1}}],["onlyvalidpid",{"0":{"186":1},"2":{"186":1}}],["onlyowneroroperator",{"0":{"185":1},"2":{"185":1}}],["onlyownerorinjector",{"2":{"99":1}}],["onlyowner",{"2":{"93":1,"103":1,"104":1,"105":1,"106":1,"107":1,"220":1,"223":1,"224":1,"225":1,"226":1,"227":1,"228":1}}],["onlyoperator",{"2":{"93":1,"100":1,"101":1,"102":1}}],["onlytreasury",{"2":{"93":1}}],["onlyinjector",{"2":{"93":1}}],["oneforzero",{"2":{"327":1}}],["onerc721received",{"0":{"199":1},"2":{"199":1}}],["one",{"2":{"29":21}}],["ottersec",{"2":{"31":1,"35":1,"55":1,"86":1,"333":1}}],["take",{"0":{"419":1},"2":{"415":2,"416":1,"417":1,"419":1}}],["tablewithlength包含",{"2":{"40":1}}],["tablewithlengthlp",{"2":{"39":1}}],["tablewithlength",{"2":{"39":1,"40":1}}],["testnet0xa8eea7aa6620712524d18d742821848e55e773b5linea0x9f3cb8251492a069dbf0634c24e9de305d6946b8opbnb0xa8eea7aa6620712524d18d742821848e55e773b5zkevm0xa8eea7aa6620712524d18d742821848e55e773b5scroll",{"2":{"270":1}}],["testnet0x9a082015c919ad0e47861e5db9a1c7070e81a2c7sepolia0x55d32fa7da7290838347bc97cb7fad4992672255goerli0xc46abf8b66df4b9eb0cc0cf6eba24226ac6e6285arbitrum",{"2":{"270":1}}],["ticknext",{"2":{"326":1}}],["tickamountuint128烧毁的流动性数量",{"2":{"323":1}}],["tickamountuint128添加的流动性数量databytes在回调时传递的数据",{"2":{"321":1}}],["tickamount0requesteduint128需要从应付费用中提取的",{"2":{"322":1}}],["ticktickupperint24烧毁流动性的位置的上限",{"2":{"323":1}}],["ticktickupperint24需要收集费用的位置的上限",{"2":{"322":1}}],["ticktickupperint24添加流动性的位置的上限",{"2":{"321":1}}],["ticktickupperint24范围的上限",{"2":{"316":1}}],["tickmath",{"2":{"317":1}}],["tickcumulative",{"2":{"324":1}}],["tickcumulatives",{"2":{"317":1}}],["tickcumulativeinside",{"2":{"316":1}}],["tickbitmap",{"0":{"307":1},"2":{"307":2}}],["ticks",{"0":{"306":1},"1":{"307":1},"2":{"306":1}}],["tickspacingint24对于使用给定费用金额创建的所有池强制执行的",{"2":{"286":1}}],["tickspacing",{"0":{"295":1},"2":{"284":1,"286":1,"295":2,"422":1}}],["tickspacingextrainfo",{"2":{"282":1}}],["tick",{"0":{"429":1,"432":1},"1":{"430":1,"431":1},"2":{"280":1,"282":1,"286":2,"295":3,"296":2,"299":1,"305":1,"306":2,"307":1,"316":4,"317":7,"325":1,"424":1,"429":4,"430":1,"431":1,"432":5}}],["tickupper",{"2":{"127":1,"173":1,"175":1,"198":1,"316":1,"320":1,"321":2,"322":1,"323":1,"429":2}}],["ticklower",{"2":{"127":1,"173":1,"175":1,"198":1,"316":1,"320":1,"321":2,"322":1,"323":1,"429":2}}],["time",{"2":{"100":1}}],["timestampu64最近一次发放奖励的时间",{"2":{"61":1}}],["timestampu64最新的奖励分发时间",{"2":{"42":1}}],["timestampu64结束时间",{"2":{"61":1}}],["timestampu64开始时间",{"2":{"61":1}}],["timestamp64农场可以获得",{"2":{"39":1}}],["timestamp64上次维护执行的时间戳",{"2":{"39":1}}],["timestamp",{"2":{"39":2,"42":1,"61":5,"100":4,"101":1,"373":2}}],["the",{"2":{"228":2}}],["thegraph",{"2":{"29":22}}],["than",{"2":{"228":2}}],["this",{"2":{"99":1}}],["triplehop",{"2":{"352":1,"354":1}}],["transferownership",{"0":{"229":1},"2":{"229":1}}],["transfertoken",{"0":{"212":1},"2":{"212":1}}],["transferfrom",{"2":{"111":3}}],["transformedwinningnumber",{"2":{"102":5}}],["trading",{"2":{"29":4}}],["treasuryaddress",{"2":{"102":1,"106":5}}],["treasuryfee",{"2":{"100":4,"102":1}}],["treasury",{"0":{"96":1},"2":{"100":2,"102":4,"106":1}}],["true",{"2":{"42":1,"327":1}}],["toid",{"2":{"422":1}}],["too",{"2":{"100":2}}],["toaddress接收手续费的地址",{"2":{"374":1}}],["toaddress接收者地址",{"2":{"265":1,"266":1,"267":1,"268":1}}],["toaddress接收地址",{"2":{"200":1,"212":1}}],["toaddresslp",{"2":{"257":1,"258":1,"259":1,"260":1,"261":1,"262":1,"263":1,"264":1}}],["toaddress提取",{"2":{"202":1}}],["toaddressbytes32aptos",{"2":{"84":1}}],["toaddress",{"2":{"84":1}}],["tokenpairreserve",{"0":{"373":1},"2":{"373":1}}],["tokenpairmetadata",{"0":{"372":1},"2":{"372":1}}],["tokenz",{"2":{"348":1,"349":1,"350":1,"351":1}}],["tokeny",{"2":{"341":2,"343":1,"344":1,"345":1,"346":1,"347":1,"358":1,"360":1,"361":1,"362":1,"363":1,"365":1,"366":1}}],["tokenx",{"2":{"341":2,"343":1,"344":1,"345":1,"346":1,"347":1,"348":1,"349":1,"350":1,"351":1,"352":1,"353":1,"354":2,"355":2,"356":2,"358":1,"359":1,"361":1,"362":1,"363":1,"366":1}}],["tokenbaddress流动性对中另一个代币的合约地址",{"2":{"257":1,"259":1,"264":1}}],["tokenb",{"2":{"233":3,"239":3,"244":2,"257":3,"259":2,"264":1,"281":1,"284":2,"355":2,"356":2}}],["tokeniduint256要更新的",{"2":{"203":1,"204":1}}],["tokeniduint256要存入的",{"2":{"202":1}}],["tokeniduint256nft",{"2":{"192":1,"200":1}}],["tokenid",{"2":{"130":3,"173":1,"174":1,"175":1,"180":1,"192":1,"199":1,"200":1,"201":1,"202":1,"203":1,"204":1,"205":1}}],["token1",{"0":{"293":1},"2":{"126":1,"131":1,"198":1,"206":3,"209":2,"210":2,"243":2,"244":1,"281":2,"284":2,"293":1,"302":1,"303":1,"304":1,"317":1,"321":1,"322":3,"323":1,"327":5,"328":3,"329":1,"330":3,"409":2,"430":1,"431":1,"433":1,"434":2,"435":2}}],["token0",{"0":{"292":1},"2":{"126":1,"131":1,"198":1,"206":3,"209":2,"210":2,"243":2,"244":1,"281":2,"284":2,"292":1,"301":1,"303":1,"304":1,"317":1,"321":1,"322":3,"323":1,"327":5,"328":3,"329":1,"330":3,"409":2,"415":2,"430":1,"431":1,"433":1,"434":2,"435":2}}],["tokena",{"2":{"233":3,"239":3,"244":2,"257":3,"259":2,"264":1,"281":1,"284":2,"352":1,"353":1,"354":2}}],["tokenamount",{"2":{"103":3,"224":3}}],["tokenaddress添加流动性的代币合约地址",{"2":{"258":1}}],["tokenaddress要转移的代币",{"2":{"212":1}}],["tokenaddress要退款的代币",{"2":{"208":1}}],["tokenaddress要支付的代币",{"2":{"207":1}}],["tokenaddress",{"2":{"103":4,"224":5}}],["tokencoin",{"2":{"61":2}}],["token",{"2":{"61":4,"103":1,"109":2,"116":3,"192":1,"200":1,"202":1,"203":1,"204":1,"206":1,"207":1,"208":1,"209":1,"212":2,"214":1,"224":2,"249":1,"258":1,"260":1,"261":1,"262":1,"263":1,"336":2,"369":2,"372":2,"373":2,"385":1,"386":2,"387":1,"388":2,"418":1}}],["totalallocpoint",{"0":{"140":1},"2":{"140":1}}],["totalboostliquidity",{"2":{"126":1}}],["totalliquidity",{"2":{"126":1}}],["total",{"2":{"39":4,"42":1,"61":3,"383":1}}],["to",{"2":{"39":6,"40":2,"100":1,"174":1,"180":1,"200":1,"201":1,"202":1,"211":1,"212":1,"257":1,"258":1,"259":1,"260":1,"261":1,"262":1,"263":1,"264":1,"265":1,"266":1,"267":1,"268":1,"269":1,"358":1,"361":1,"374":1,"401":1,"402":1,"405":1,"417":4}}],["types",{"2":{"77":1,"422":1}}],["type",{"2":{"19":7,"322":1}}],["memory",{"2":{"253":2,"254":2,"265":1,"266":1,"268":1,"415":1,"422":1,"423":2,"429":2}}],["meganode",{"2":{"29":1}}],["multisig",{"2":{"333":1}}],["multicall",{"2":{"210":1}}],["must",{"2":{"100":1,"104":1,"105":1,"226":2,"228":2}}],["modifyliquidityparams",{"2":{"429":2}}],["modifyliquidity",{"2":{"415":1,"416":1,"429":1,"436":1}}],["modifyposition",{"2":{"321":1,"323":1}}],["modifypositionparams",{"0":{"320":1},"2":{"320":1}}],["modifier",{"2":{"185":1,"186":1,"187":1,"188":1,"312":1,"313":1}}],["mod",{"2":{"315":1}}],["move",{"2":{"34":1}}],["mcv3",{"2":{"129":1}}],["minu64要移除的",{"2":{"343":2}}],["minu64提供的",{"2":{"341":2}}],["mintcapability创建",{"2":{"372":1}}],["mintcapability",{"2":{"372":1}}],["mint",{"0":{"321":1,"419":1},"2":{"321":1,"372":2,"415":2,"417":1,"418":1,"419":1}}],["minprice",{"2":{"104":1}}],["minpriceticketincake",{"2":{"100":1,"104":4}}],["min",{"0":{"148":1},"2":{"100":2,"148":1,"340":2,"342":2,"344":1,"345":1,"348":1,"349":1,"352":1,"353":1,"355":2}}],["minamountuint256最低接收金额",{"2":{"84":1}}],["minamount",{"2":{"84":1}}],["msg",{"2":{"99":1,"103":1,"206":1,"223":1,"224":1,"409":1}}],["md",{"2":{"33":2,"245":2,"332":1}}],["managers",{"2":{"420":1}}],["main",{"2":{"415":1}}],["mainnet",{"2":{"29":2}}],["mapping",{"2":{"129":1,"130":1,"131":3,"132":1,"280":1,"281":3,"282":1,"306":1,"307":1,"308":1}}],["maxliquiditypertick",{"0":{"296":1},"2":{"296":1}}],["maxnumberticketsperbuyorclaim",{"2":{"105":1}}],["maxnumberticketsperbuy",{"2":{"105":3}}],["maxprice",{"2":{"104":1}}],["maxpriceticketincake",{"2":{"100":1,"104":4}}],["max",{"0":{"147":1,"151":1,"153":1},"2":{"100":2,"147":1,"151":1,"153":1,"322":1,"346":1,"347":1,"350":1,"351":1,"354":2,"356":2}}],["massupdatepools",{"2":{"196":1,"197":1}}],["mass",{"0":{"47":1},"2":{"47":1}}],["masterchefv3",{"0":{"275":1},"2":{"29":1,"125":1,"129":1,"130":1,"154":1,"201":1,"205":1}}],["masterchefv2",{"2":{"29":1}}],["masterchef",{"0":{"36":1,"39":1,"118":1,"120":1,"121":1,"122":1,"124":1},"1":{"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"119":1,"120":1,"121":1,"122":1,"123":1,"125":1,"126":1,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1,"137":1,"138":1,"139":1,"140":1,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1,"153":1,"154":1,"155":1,"156":1,"157":1,"158":1,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1,"165":1,"166":1,"167":1,"168":1,"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"176":1,"177":1,"178":1,"179":1,"180":1,"181":1,"182":1,"183":1,"184":1,"185":1,"186":1,"187":1,"188":1,"189":1,"190":1,"191":1,"192":1,"193":1,"194":1,"195":1,"196":1,"197":1,"198":1,"199":1,"200":1,"201":1,"202":1,"203":1,"204":1,"205":1,"206":1,"207":1,"208":1,"209":1,"210":1,"211":1,"212":1,"213":1,"214":1},"2":{"29":2,"33":1,"37":2,"39":2,"55":1,"123":2,"212":1}}],["market",{"2":{"29":1}}],["marketplace",{"2":{"29":1}}],["mmsigneraddress做市商地址",{"2":{"20":1}}],["mmsigner",{"2":{"20":1}}],["mm",{"2":{"17":1,"19":2}}],["交换确切",{"0":{"358":1}}],["交换确切输出",{"0":{"346":1},"1":{"347":1}}],["交换确切输入",{"0":{"344":1},"1":{"345":1}}],["交换确切数量的",{"2":{"344":1,"348":1,"352":1,"355":1,"358":1}}],["交换后价格不能高于此值databytes在回调时传递的任何数据",{"2":{"327":1}}],["交换后价格不能低于此值",{"2":{"327":1}}],["交换",{"0":{"361":1},"2":{"327":1,"346":1,"350":1,"354":1,"356":1,"361":1,"410":1,"411":1,"415":1}}],["交换和闪电贷等交互的支付状态",{"2":{"312":1}}],["交换准确数量的输出代币",{"2":{"265":1}}],["交换示例",{"0":{"18":1},"1":{"19":1,"20":1}}],["交易必须包含以生效的时间截止日期",{"2":{"206":1,"209":1}}],["交易所",{"0":{"80":1}}],["交易所数据",{"2":{"29":3}}],["交易",{"2":{"29":1}}],["交易量",{"2":{"29":3}}],["仓库获取最新版本",{"2":{"29":1}}],["子图",{"0":{"29":1}}],["注意",{"0":{"391":1}}],["注册",{"0":{"376":1},"1":{"377":1}}],["注入特定数量的",{"2":{"99":1}}],["注",{"2":{"28":3}}],["部署的",{"2":{"409":1}}],["部署池子的合约",{"2":{"291":1}}],["部署",{"2":{"277":1}}],["部署了新的",{"2":{"28":1}}],["部署者",{"0":{"15":1}}],["gas",{"2":{"300":1,"419":1,"432":2}}],["gaugevotingcalc",{"2":{"28":2}}],["gaugevoting",{"2":{"28":2}}],["gor",{"2":{"272":1}}],["goerli0xa8eea7aa6620712524d18d742821848e55e773b5base",{"2":{"270":1}}],["goerli0x31c2f6fcff4f8759b3bd5bf0e1084a055615c768base",{"2":{"108":1}}],["goerli0x31c2f6fcff4f8759b3bd5bf0e1084a055615c768arbitrum",{"2":{"108":1}}],["goerli0x2b3c5df29f73dbf028ba82c33e0a5a6e5800f75eopbnb0xa11b290b038c35711eb309268a2460754f730921zkevm0x2b3c5df29f73dbf028ba82c33e0a5a6e5800f75e",{"2":{"87":1}}],["goerli0x052a99849ef2e13a5cb28275862991671d4b6ff5linea",{"2":{"87":1}}],["goerli0xc2c3eabe0368a2ea97f485b03d1098cdd7d0c081base",{"2":{"87":1}}],["goerli",{"2":{"29":1}}],["gnosis",{"2":{"94":1,"96":1,"97":1,"221":1}}],["gui",{"2":{"85":1}}],["gethooksregistrationbitmap",{"2":{"422":1,"424":1}}],["getpool",{"0":{"281":1},"2":{"281":1}}],["getpair",{"0":{"233":1},"2":{"233":1,"244":1}}],["getamountsin",{"0":{"254":1},"2":{"254":1}}],["getamountsout",{"0":{"253":1},"2":{"253":1}}],["getamountin",{"0":{"252":1},"2":{"252":1}}],["getamountout",{"0":{"251":1},"2":{"251":1}}],["getlatestperiodinfo",{"0":{"191":1},"2":{"191":1}}],["getlatestperiodinfobypid",{"0":{"190":1},"2":{"190":1}}],["getrandomnumber",{"2":{"101":1,"107":1}}],["get",{"2":{"67":1,"69":1,"72":1,"364":1}}],["getusernonce",{"2":{"19":1}}],["gt",{"2":{"39":3,"40":2,"44":1,"45":1,"46":1,"60":1,"61":13,"63":1,"64":1,"65":1,"67":1,"69":1,"72":1,"100":3,"101":1,"102":1,"105":1,"129":1,"130":2,"131":4,"132":2,"226":1,"265":1,"266":1,"267":1,"268":1,"280":1,"281":3,"282":1,"306":1,"307":1,"308":1,"338":1,"340":1,"342":1,"344":1,"346":1,"348":1,"350":1,"352":1,"354":1,"355":1,"356":1,"358":3,"361":4,"364":1,"371":1,"372":11,"373":1,"374":1,"376":1,"378":1,"380":1,"383":1,"385":1,"387":1,"415":1}}],["gy319rl3cwryq4lvtcgne2ftvtwfm7d7flzsy21gfyub",{"2":{"29":1}}],["graph",{"2":{"29":2}}],["graphql",{"2":{"29":1}}],["gro",{"2":{"29":1}}],["github",{"0":{"34":1},"2":{"29":2,"34":1,"231":1,"247":1,"415":1,"425":1}}],["上位",{"2":{"422":1}}],["上限为1",{"2":{"422":1}}],["上都是强制执行的",{"2":{"296":1}}],["上执行",{"2":{"111":1}}],["上调用",{"2":{"111":1}}],["上的主抵押合约",{"2":{"120":1,"121":1}}],["上的详情",{"2":{"91":1}}],["上的目标地址",{"2":{"84":1}}],["上次维护执行的时间戳",{"2":{"39":1}}],["上",{"2":{"25":2,"114":1,"115":1,"417":1,"418":1}}],["上查看合约名称",{"2":{"28":3}}],["上查看",{"2":{"4":1,"5":1,"8":1,"12":1,"17":2,"28":3,"83":1,"117":1,"231":1,"335":1,"368":1}}],["预测",{"0":{"23":1,"25":1},"1":{"24":1,"25":1,"26":1},"2":{"25":1,"29":3}}],["陶瓷奖",{"2":{"29":1}}],["陶瓷",{"0":{"22":1}}],["vault",{"0":{"414":1},"1":{"415":1,"416":1,"417":1,"418":1,"419":1},"2":{"414":1,"415":13,"416":1,"417":5,"418":7}}],["virtual",{"2":{"315":1}}],["view",{"2":{"190":1,"191":1,"192":1,"233":1,"234":1,"235":1,"236":1,"237":1,"244":5,"253":1,"254":1,"315":1,"316":1,"317":1}}],["viewrandomresult",{"2":{"102":1,"107":1}}],["viewlatestlotteryid",{"2":{"102":1}}],["view=query",{"2":{"29":21}}],["vuint8许可签名的",{"2":{"262":1,"263":1,"264":1}}],["v",{"2":{"262":2,"263":2,"264":2}}],["vrf",{"2":{"102":1}}],["v4",{"2":{"29":2,"415":1,"421":1,"422":1,"425":1}}],["v3swaprouter",{"0":{"406":1},"1":{"407":1,"408":1,"409":1,"410":1,"411":1,"412":1,"413":1}}],["v3poolcontract",{"2":{"196":1}}],["v3pooladdressv3",{"2":{"191":1}}],["v3pooladdress",{"2":{"132":1}}],["v3pooladdresspid",{"0":{"132":1},"2":{"132":2}}],["v3poolpid",{"0":{"131":1},"2":{"131":2}}],["v3pool",{"2":{"126":1,"171":1,"191":1,"196":1}}],["v3",{"0":{"122":1,"124":1,"271":1},"1":{"125":1,"126":1,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1,"137":1,"138":1,"139":1,"140":1,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1,"153":1,"154":1,"155":1,"156":1,"157":1,"158":1,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1,"165":1,"166":1,"167":1,"168":1,"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"176":1,"177":1,"178":1,"179":1,"180":1,"181":1,"182":1,"183":1,"184":1,"185":1,"186":1,"187":1,"188":1,"189":1,"190":1,"191":1,"192":1,"193":1,"194":1,"195":1,"196":1,"197":1,"198":1,"199":1,"200":1,"201":1,"202":1,"203":1,"204":1,"205":1,"206":1,"207":1,"208":1,"209":1,"210":1,"211":1,"212":1,"213":1,"214":1,"272":1,"273":1,"274":1,"275":1},"2":{"29":6,"196":1,"212":1,"273":1,"274":1,"277":1,"421":1}}],["vector",{"2":{"39":2,"40":1}}],["vecake",{"0":{"27":1},"1":{"28":1},"2":{"28":2}}],["verified",{"2":{"287":1}}],["verifyingcontract",{"2":{"19":1}}],["version",{"2":{"19":1,"84":1}}],["v2swaprouter",{"0":{"403":1},"1":{"404":1,"405":1}}],["v2",{"0":{"121":1,"230":1,"245":1,"246":1,"332":1,"334":1,"367":1},"1":{"231":1,"232":1,"233":1,"234":1,"235":1,"236":1,"237":1,"238":1,"239":1,"240":1,"241":1,"242":1,"243":1,"244":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"256":1,"257":1,"258":1,"259":1,"260":1,"261":1,"262":1,"263":1,"264":1,"265":1,"266":1,"267":1,"268":1,"269":1,"333":1,"335":1,"336":1,"337":1,"338":1,"339":1,"340":1,"341":1,"342":1,"343":1,"344":1,"345":1,"346":1,"347":1,"348":1,"349":1,"350":1,"351":1,"352":1,"353":1,"354":1,"355":1,"356":1,"357":1,"358":1,"359":1,"360":1,"361":1,"362":1,"363":1,"364":1,"365":1,"366":1,"368":1,"369":1,"370":1,"371":1,"372":1,"373":1,"374":1,"375":1,"376":1,"377":1,"378":1,"379":1,"380":1,"381":1,"382":1,"383":1,"384":1,"385":1,"386":1,"387":1,"388":1},"2":{"26":1,"29":11,"33":1,"80":1,"121":1,"230":3,"244":1,"245":2,"246":3,"250":1,"274":1,"332":1,"427":1}}],["v1",{"2":{"21":1,"29":4,"87":1}}],["市场的",{"2":{"29":1}}],["市场",{"0":{"21":1},"2":{"21":1}}],["flaguint256",{"2":{"401":1,"402":1}}],["flag",{"2":{"401":1,"402":1}}],["flash",{"0":{"328":1},"2":{"328":1}}],["freezecapability创建",{"2":{"372":1}}],["freezecapability",{"2":{"372":1}}],["freeze",{"2":{"372":2}}],["fromaddress发起地址",{"2":{"84":1}}],["from",{"2":{"84":1,"173":1,"174":1,"175":1,"199":1,"422":1}}],["finalnumber",{"2":{"100":1,"102":6,"107":1}}],["finance",{"2":{"87":1}}],["firstticketidnextlottery",{"2":{"100":1,"101":1}}],["firstticketid",{"2":{"100":1}}],["feeamount",{"2":{"326":1}}],["feeamounttickspacingextrainfo",{"0":{"282":1},"2":{"282":1}}],["feeamounttickspacing",{"0":{"280":1},"2":{"280":1}}],["feegrowthglobalx128",{"2":{"325":1}}],["feegrowthglobal1x128",{"0":{"302":1},"2":{"302":1}}],["feegrowthglobal0x128",{"0":{"301":1},"2":{"301":1}}],["feeprotocol1",{"2":{"329":1}}],["feeprotocol0",{"2":{"329":1}}],["feeprotocol",{"2":{"299":1,"324":1}}],["feetosetter",{"0":{"237":1},"2":{"237":1,"244":1}}],["feeto",{"0":{"236":1},"2":{"236":1,"237":1,"240":1,"241":1,"244":1}}],["fee",{"0":{"294":1,"297":1,"298":1},"2":{"100":2,"126":1,"131":1,"198":1,"284":1,"286":1,"288":1,"294":1,"297":1,"298":1,"372":2,"374":2,"422":2}}],["fees",{"2":{"84":1}}],["for",{"2":{"61":2,"84":1,"102":1,"422":1}}],["fd1d8a523f1be89277ac0787ae3469312667e3d0b3f75a5f01bfc95530a2dc91",{"2":{"57":1}}],["fun",{"2":{"44":1,"45":1,"46":1,"47":1,"48":1,"50":1,"53":1,"63":1,"64":1,"65":1,"67":1,"69":1,"72":1,"338":1,"340":1,"342":1,"344":1,"346":1,"348":1,"350":1,"352":1,"354":1,"355":1,"356":1,"358":1,"361":1,"364":1,"376":1,"378":1,"380":1,"383":1,"385":1,"387":1}}],["function",{"2":{"20":1,"84":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"190":1,"191":1,"192":1,"193":1,"194":1,"195":1,"196":1,"197":1,"199":1,"200":1,"201":1,"202":1,"203":1,"204":1,"205":1,"206":1,"207":1,"208":1,"209":1,"210":1,"211":1,"212":1,"213":1,"214":1,"223":1,"224":1,"225":1,"226":1,"227":1,"228":1,"233":1,"234":1,"235":1,"236":1,"237":1,"239":1,"244":8,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"257":1,"258":1,"259":1,"260":1,"261":1,"262":1,"263":1,"264":1,"265":1,"266":1,"267":1,"268":1,"269":1,"284":1,"285":1,"286":1,"287":1,"288":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"323":1,"327":1,"328":1,"329":1,"330":1,"331":1,"400":1,"401":1,"402":1,"405":1,"409":1,"410":1,"411":1,"412":1,"413":1,"415":2,"423":2,"429":1}}],["falseamountspecifiedint256交换的数量",{"2":{"327":1}}],["false",{"2":{"287":1}}],["factoru128用于计算的精度因子",{"2":{"61":1}}],["factor",{"2":{"61":1}}],["factoryv3",{"2":{"393":1}}],["factoryv2",{"2":{"393":1}}],["factory",{"0":{"5":1,"230":1,"250":1,"291":1},"1":{"231":1,"232":1,"233":1,"234":1,"235":1,"236":1,"237":1,"238":1,"239":1,"240":1,"241":1,"242":1,"243":1,"244":1},"2":{"114":2,"245":1,"250":1,"291":1,"398":1,"400":1}}],["farmboostcontract",{"2":{"183":1}}],["farmboosterproxyfactory",{"2":{"5":1}}],["farmbooster",{"2":{"4":1}}],["farm",{"0":{"2":1,"4":1,"5":1,"138":1},"1":{"3":1,"4":1,"5":1,"6":1},"2":{"6":1,"138":1}}],["activeid",{"2":{"423":1}}],["acc",{"2":{"42":2,"61":2}}],["accountpoolbalancedelta",{"2":{"415":1}}],["accounting",{"0":{"414":1},"1":{"415":1,"416":1,"417":1,"418":1,"419":1}}],["account",{"2":{"39":1,"60":1,"63":1,"64":1,"65":1,"69":1,"72":1,"374":1}}],["ab",{"2":{"355":1,"356":1}}],["abi",{"2":{"101":1,"107":1,"415":1,"422":1}}],["as",{"2":{"228":1}}],["allpairslength",{"0":{"235":1},"2":{"235":1,"244":1}}],["allpairs",{"0":{"234":1},"2":{"234":1,"244":1}}],["allocpointuint256池的新分配点数",{"2":{"197":1}}],["allocpointuint256新池的分配点数",{"2":{"196":1}}],["allocpoint",{"2":{"126":1,"171":1,"172":1,"196":1,"197":1}}],["alloc",{"2":{"39":4,"42":2}}],["alice",{"2":{"111":4}}],["a",{"2":{"102":2,"352":2,"353":1,"354":3,"355":1,"356":1}}],["autoinjection",{"2":{"102":2}}],["affiliate",{"0":{"88":1},"1":{"89":1,"90":1,"91":1}}],["and",{"2":{"61":2}}],["amms",{"2":{"420":1}}],["amm",{"0":{"420":1},"1":{"421":1,"422":1,"423":1},"2":{"420":1,"427":1}}],["amountcoin",{"2":{"372":1}}],["amountcollectedincake",{"2":{"99":1,"100":1,"102":2}}],["amountcalculated",{"2":{"325":1}}],["amounteth",{"2":{"258":1,"260":1,"261":1,"262":1,"263":1}}],["amountethminuint最少移除的",{"2":{"260":1,"261":1,"262":1,"263":1,"264":1}}],["amountethminuint最少提供的",{"2":{"258":1}}],["amountethmin",{"2":{"258":1,"260":1,"261":1,"262":1,"263":1}}],["amountbminuint最少移除的",{"2":{"259":1}}],["amountbminuint最少提供的",{"2":{"257":1}}],["amountbmin",{"2":{"257":1,"259":1,"264":1}}],["amountbdesireduint你希望提供的",{"2":{"257":1}}],["amountbdesired",{"2":{"257":1}}],["amountb",{"2":{"255":1,"257":1,"259":1,"264":1}}],["amountaminuint最少移除的",{"2":{"259":1}}],["amountaminuint最少提供的",{"2":{"257":1}}],["amountamin",{"2":{"257":1,"259":1,"264":1}}],["amountadesireduint你希望提供的",{"2":{"257":1}}],["amountadesired",{"2":{"257":1}}],["amounta",{"2":{"255":1,"257":1,"259":1,"264":1}}],["amountspecified",{"2":{"327":1}}],["amountspecifiedremaining",{"2":{"325":1}}],["amounts",{"2":{"253":1,"254":1,"265":1,"266":1,"268":1}}],["amountoutminuint最少接收的",{"2":{"268":1}}],["amountoutminuint最少接收的代币数量",{"2":{"266":1,"267":1}}],["amountoutmin",{"2":{"266":1,"267":1,"268":1,"269":1,"401":1,"405":1}}],["amountoutuint要接收的代币数量",{"2":{"265":1}}],["amountout",{"2":{"251":1,"252":1,"254":1,"265":1,"326":1,"401":1,"402":1,"405":1,"410":1,"411":1,"412":1,"413":1}}],["amountinmax",{"2":{"402":1}}],["amountin",{"2":{"251":1,"252":1,"253":1,"268":1,"269":1,"326":1,"401":1,"402":1,"405":3,"410":2,"411":2,"412":1,"413":1}}],["amountminimum",{"2":{"213":2,"214":1}}],["amount1deltaint256交换结束时池发送",{"2":{"409":1}}],["amount1delta",{"2":{"409":2}}],["amount1desired",{"2":{"206":1}}],["amount1requested",{"2":{"322":2,"330":1}}],["amount1max",{"2":{"210":1}}],["amount1min",{"2":{"206":1,"209":1}}],["amount1",{"2":{"206":1,"209":1,"210":1,"211":1,"321":1,"322":1,"323":1,"327":1,"328":2,"330":1,"416":1}}],["amount0delta",{"2":{"409":2}}],["amount0desired",{"2":{"206":1}}],["amount0requested",{"2":{"322":2,"330":1}}],["amount0max",{"2":{"210":1}}],["amount0min",{"2":{"206":1,"209":1}}],["amount0",{"2":{"206":1,"209":1,"210":1,"211":1,"321":1,"322":1,"323":1,"327":1,"328":1,"330":1,"415":3,"416":1}}],["amounttoken",{"2":{"258":1,"260":1,"262":1}}],["amounttokenminuint最少移除的代币数量",{"2":{"260":1,"261":1,"262":1,"263":1,"264":1}}],["amounttokenminuint最少提供的代币数量",{"2":{"258":1}}],["amounttokenmin",{"2":{"258":1,"260":1,"261":1,"262":1,"263":1}}],["amounttokendesireduint你希望提供的代币数量",{"2":{"258":1}}],["amounttokendesired",{"2":{"258":1}}],["amounttowithdrawtotreasury",{"2":{"102":6}}],["amounttosharetowinners",{"2":{"102":4}}],["amountu64用户将会收到的",{"2":{"365":1}}],["amountu64用户将会收到的期望",{"2":{"362":1}}],["amountu64将要提取的质押代币数量",{"2":{"64":1}}],["amountu64将要提取的代币数量",{"2":{"45":1}}],["amountu64将要存入的质押代币数量",{"2":{"63":1}}],["amountu64将要存入的代币数量",{"2":{"44":1}}],["amountuint256要退款的数量",{"2":{"208":1}}],["amountuint256要支付的数量",{"2":{"207":1}}],["amountuint256cake",{"2":{"84":1}}],["amountu128抵押代币的总数量",{"2":{"42":1}}],["amount",{"2":{"41":1,"42":1,"44":1,"45":1,"63":1,"64":1,"69":1,"84":2,"99":4,"207":1,"208":1,"209":1,"223":2,"321":1,"323":1,"340":4,"341":4,"342":2,"343":2,"361":1,"364":2,"372":1,"417":2,"418":1}}],["amp",{"2":{"29":21,"44":1,"45":1,"46":1,"63":1,"64":1,"65":1,"100":4,"338":1,"340":1,"342":1,"344":1,"346":1,"348":1,"350":1,"352":1,"354":1,"355":1,"356":1,"376":1}}],["addr",{"2":{"311":1,"380":1}}],["address配对中",{"2":{"369":2}}],["address交易对中",{"2":{"336":2}}],["address一个代币地址数组",{"2":{"265":1,"266":1,"267":1,"268":1}}],["address池的",{"2":{"58":1}}],["address池中奖励代币的币种类型地址",{"2":{"58":1}}],["address池中质押代币的币种类型地址",{"2":{"58":1}}],["address",{"0":{"95":1,"96":1,"97":1},"2":{"19":3,"20":4,"39":2,"50":1,"60":1,"69":1,"72":1,"84":1,"99":2,"103":3,"106":9,"107":1,"126":2,"127":1,"131":2,"132":1,"134":1,"135":1,"145":1,"173":1,"174":2,"175":1,"176":1,"177":1,"178":1,"180":2,"183":1,"189":1,"191":1,"194":1,"198":2,"199":2,"200":1,"201":1,"202":1,"207":1,"208":1,"211":1,"212":2,"213":1,"214":2,"223":1,"224":4,"233":3,"234":1,"236":1,"237":1,"239":3,"243":3,"244":14,"249":1,"250":1,"253":1,"254":1,"257":3,"258":2,"259":3,"260":2,"261":2,"262":2,"263":2,"264":3,"265":3,"266":3,"267":3,"268":3,"269":2,"278":1,"279":1,"281":3,"283":1,"284":3,"285":1,"287":1,"291":1,"292":1,"293":1,"311":1,"320":1,"321":1,"322":1,"327":1,"328":1,"330":1,"372":1,"374":2,"380":1,"393":7,"396":1,"397":1,"398":2,"399":2,"400":2,"401":2,"402":2,"405":2,"408":1,"417":4,"422":1}}],["addliquidityeth",{"0":{"258":1},"2":{"258":1}}],["addliquidity",{"0":{"257":1},"2":{"257":1,"415":2}}],["add",{"0":{"196":1},"2":{"196":1,"340":1}}],["addpool",{"0":{"171":1},"2":{"171":1}}],["adapterparams",{"2":{"84":2}}],["admintokenrecovery",{"2":{"103":1,"224":1}}],["adminaddress模块管理员的地址",{"2":{"60":1}}],["adminaddress模块的管理员地址",{"2":{"39":1,"374":1}}],["adminaddress执行维护调用的账号",{"2":{"39":1}}],["admin",{"2":{"39":2,"60":1,"229":1,"333":1,"374":1}}],["approvemaxbool签名中的批准数量是否用于流动性或",{"2":{"262":1,"263":1,"264":1}}],["approvemax",{"2":{"262":1,"263":1,"264":1}}],["approve",{"2":{"111":1}}],["apt",{"2":{"84":2}}],["aptos",{"0":{"32":1,"84":1},"1":{"33":1,"34":1,"35":1},"2":{"31":1,"33":1,"37":1,"55":1,"57":1,"75":1,"77":1,"85":1,"333":3,"335":1,"368":1}}],["api",{"0":{"125":1,"277":1,"290":1,"392":1,"395":1,"404":1,"407":1},"1":{"126":1,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1,"137":1,"138":1,"139":1,"140":1,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1,"153":1,"154":1,"155":1,"156":1,"157":1,"158":1,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1,"165":1,"166":1,"167":1,"168":1,"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"176":1,"177":1,"178":1,"179":1,"180":1,"181":1,"182":1,"183":1,"184":1,"185":1,"186":1,"187":1,"188":1,"189":1,"190":1,"191":1,"192":1,"193":1,"194":1,"195":1,"196":1,"197":1,"198":1,"199":1,"200":1,"201":1,"202":1,"203":1,"204":1,"205":1,"206":1,"207":1,"208":1,"209":1,"210":1,"211":1,"212":1,"213":1,"214":1,"278":1,"279":1,"280":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"320":1,"321":1,"322":1,"323":1,"324":1,"325":1,"326":1,"327":1,"328":1,"329":1,"330":1,"331":1,"393":1,"396":1,"397":1,"398":1,"399":1,"400":1,"401":1,"402":1,"405":1,"408":1,"409":1,"410":1,"411":1,"412":1,"413":1},"2":{"29":2}}],["arbitrum",{"2":{"108":1,"273":1}}],["arb",{"2":{"29":6,"272":1}}],["await",{"2":{"19":1}}],["unlocked",{"2":{"299":1}}],["uniswapv3",{"2":{"427":1}}],["uniswap",{"2":{"230":3,"244":1,"246":3,"250":1}}],["unix",{"2":{"19":1}}],["unwrapweth9",{"0":{"213":1},"2":{"210":1,"213":1}}],["u256",{"0":{"153":1},"2":{"153":1}}],["u2",{"2":{"79":2}}],["u1",{"2":{"79":2}}],["u128",{"2":{"41":2,"42":2,"61":2,"372":1,"383":1}}],["u0",{"2":{"79":2}}],["utils",{"0":{"76":1},"1":{"77":1,"78":1,"79":1},"2":{"84":1}}],["ui",{"2":{"87":1,"216":1}}],["uint8",{"2":{"262":1,"263":1,"264":1,"424":1}}],["uint128",{"2":{"127":2,"198":1,"206":1,"296":2,"303":2,"304":1,"305":1,"321":1,"322":5,"323":1,"324":1,"325":2,"330":4,"415":2}}],["uint160",{"2":{"299":1,"316":1,"317":1,"319":1,"324":1,"325":1,"326":2,"327":1,"423":1,"433":1}}],["uint16",{"2":{"84":2,"299":3,"318":1}}],["uint24",{"2":{"126":1,"131":1,"198":1,"280":1,"281":1,"282":1,"284":1,"286":1,"288":1,"294":1,"422":2,"423":1}}],["uint256",{"2":{"19":4,"20":4,"99":2,"100":17,"101":2,"102":4,"103":1,"104":2,"105":1,"107":1,"126":3,"127":4,"128":1,"129":1,"130":1,"131":1,"132":1,"140":1,"141":1,"142":1,"143":1,"144":1,"146":1,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1,"153":1,"154":1,"165":1,"171":2,"172":2,"173":3,"174":2,"175":2,"179":1,"180":3,"181":5,"182":4,"186":1,"190":3,"191":2,"192":2,"196":1,"197":2,"199":1,"200":2,"201":2,"202":2,"203":1,"204":2,"205":2,"206":2,"207":1,"208":1,"209":2,"210":2,"211":2,"213":1,"214":1,"223":1,"224":1,"226":1,"227":1,"228":2,"298":1,"301":2,"302":2,"307":1,"321":2,"323":2,"325":1,"326":3,"328":2,"401":4,"402":4,"405":3,"410":1,"411":1,"412":1,"413":1,"417":2,"418":1,"422":1}}],["uint32",{"2":{"102":5,"297":1,"299":1,"315":1,"316":1,"317":1,"324":2,"329":2}}],["uint",{"2":{"84":4,"234":1,"235":1,"243":2,"244":3,"251":4,"252":4,"253":2,"254":2,"255":4,"257":8,"258":7,"259":6,"260":6,"261":5,"262":7,"263":6,"264":7,"265":3,"266":3,"267":2,"268":4,"269":3}}],["uints",{"2":{"77":2}}],["uidu64最新池的最新",{"2":{"60":1}}],["uid",{"2":{"58":1,"60":1,"61":6,"63":1,"64":1,"65":1,"67":1,"69":1,"72":1}}],["uidtype",{"2":{"58":1}}],["updatestartandendblocks",{"0":{"228":1},"2":{"228":1}}],["updaterewardperblock",{"0":{"227":1},"2":{"227":1}}],["updatepoollimitperuser",{"0":{"226":1},"2":{"226":1}}],["updateboostmultiplier",{"0":{"204":1},"2":{"204":1}}],["updatefarmboostcontract",{"0":{"183":1},"2":{"183":1}}],["updateupkeepperiod",{"0":{"182":1},"2":{"182":1}}],["updateliquidityoperation",{"0":{"205":1},"2":{"205":1}}],["updateliquidity",{"0":{"175":1,"203":1},"2":{"175":1,"203":1}}],["update",{"0":{"47":1,"48":1},"2":{"47":1,"48":1}}],["upkeep",{"2":{"39":4}}],["u64",{"2":{"39":8,"40":2,"42":2,"44":1,"45":1,"48":1,"50":2,"53":1,"60":1,"61":6,"63":1,"64":1,"67":7,"72":1,"340":4,"342":3,"344":2,"346":2,"348":2,"350":2,"352":2,"354":2,"355":2,"356":2,"361":1,"364":2,"373":3,"380":1,"385":3,"387":2}}],["using",{"2":{"422":1}}],["userpositioninfos",{"0":{"130":1},"2":{"130":2}}],["userpositioninfo",{"0":{"127":1},"2":{"127":1,"130":2,"201":1,"205":1}}],["useru64用户限制秒数内允许质押的代币数量",{"2":{"61":1}}],["useraddress存款者的地址",{"2":{"51":1}}],["userinfo",{"0":{"41":1},"2":{"40":1,"41":1}}],["user",{"2":{"19":2,"20":1,"40":4,"50":1,"61":3,"69":1,"127":1,"287":1,"415":2}}],["usdc",{"2":{"116":4,"434":1,"435":2}}],["usdt",{"2":{"116":4,"431":5,"435":5}}],["usd",{"2":{"0":3}}],["n",{"2":{"234":1}}],["number",{"2":{"225":1,"227":1,"228":2}}],["numberticketsperlotteryid",{"2":{"102":4}}],["numberaddressesinpreviousbracket",{"2":{"102":6}}],["numbers",{"2":{"102":1}}],["natives",{"2":{"84":1}}],["name",{"2":{"19":8,"29":3}}],["newstartandendblocks",{"2":{"228":1}}],["newstartandendtimestampevent",{"2":{"61":1}}],["newmultiplieruint256新的加速倍数",{"2":{"204":1}}],["newmultiplier",{"2":{"204":1,"205":1}}],["newendtime",{"2":{"182":1}}],["newupkeepperiod",{"0":{"181":1},"2":{"181":1}}],["newpoollimit",{"2":{"226":1}}],["newpoollimitevent",{"2":{"61":1}}],["newperiodduration",{"0":{"179":1},"2":{"179":1}}],["newlmpooldeployeraddress",{"0":{"177":1},"2":{"177":1}}],["newoperatoraddress",{"0":{"176":1},"2":{"176":1}}],["newoperatorandtreasuryandinjectoraddresses",{"2":{"106":1}}],["newrewardperblock",{"2":{"227":1}}],["newrewardpersecondevent",{"2":{"61":1}}],["newreceiver",{"0":{"178":1},"2":{"178":1}}],["newrandomgenerator",{"2":{"107":1}}],["new",{"2":{"61":6,"226":1,"228":3}}],["nodelegatecall",{"2":{"321":1,"323":1}}],["nodereal",{"2":{"29":3}}],["nolmpool",{"0":{"163":1},"2":{"163":1}}],["noliquidity",{"0":{"161":1},"2":{"161":1}}],["nobalance",{"0":{"157":1},"2":{"157":1}}],["nonfungiblepositionmanagercontract",{"2":{"189":1}}],["nonfungiblepositionmanager",{"0":{"136":1},"2":{"136":1,"189":1}}],["nonreentrant",{"2":{"101":1,"102":1}}],["nonce",{"2":{"19":3,"20":1,"110":1}}],["notice",{"2":{"422":7}}],["notempty",{"0":{"166":1},"2":{"166":1}}],["notowner",{"0":{"160":1},"2":{"160":1}}],["notowneroroperator",{"0":{"156":1},"2":{"156":1}}],["notpancakenft",{"0":{"158":1},"2":{"158":1}}],["not",{"2":{"84":1,"99":1,"100":1,"101":2,"102":2,"107":1}}],["nft",{"0":{"21":1},"2":{"21":1,"29":2,"202":2,"203":2,"204":2,"210":1}}],["5046499860369450237927407",{"2":{"435":2}}],["500",{"2":{"0":1,"432":1}}],["500高usd",{"2":{"0":1}}],["5",{"2":{"100":1,"102":1,"244":1,"432":1}}],["5u64开始时间后应用用户限制的时间",{"2":{"68":1}}],["56",{"2":{"19":1}}],["193256",{"2":{"431":2}}],["18",{"2":{"430":2,"431":3,"434":2,"435":3}}],["15",{"2":{"424":1}}],["1u64池中",{"2":{"386":1,"388":1}}],["1u64池中奖励代币的总量",{"2":{"68":1}}],["1coin",{"2":{"363":1}}],["12",{"2":{"430":1,"431":2,"434":1,"435":1}}],["128",{"2":{"301":1,"302":1}}],["1271",{"2":{"110":1}}],["16",{"2":{"244":1,"424":4}}],["133",{"2":{"116":1}}],["134",{"2":{"116":1}}],["135",{"2":{"116":1}}],["1001",{"2":{"432":1}}],["100",{"2":{"432":1}}],["10000",{"2":{"100":2,"102":4}}],["10",{"2":{"102":1,"422":1,"431":2,"435":4}}],["108",{"2":{"84":1}}],["1e",{"2":{"84":1,"286":1,"294":1}}],["14",{"2":{"29":1}}],["1",{"0":{"430":1,"434":1},"2":{"19":2,"100":1,"102":1,"111":1,"243":1,"262":1,"263":1,"264":1,"295":1,"317":1,"424":1,"429":1,"430":2,"431":3,"432":1,"434":3,"435":3}}],["=0",{"2":{"244":1}}],["==",{"2":{"99":1,"100":3,"101":1,"102":2,"107":2}}],["=",{"2":{"19":4,"84":1,"100":6,"101":2,"102":15,"103":1,"104":3,"105":2,"106":6,"107":1,"129":1,"130":2,"131":4,"132":2,"224":2,"225":1,"226":3,"227":1,"228":3,"265":1,"266":1,"267":1,"268":1,"280":1,"281":3,"282":1,"306":1,"307":1,"308":1,"317":1,"415":2,"422":2,"424":1,"429":1,"430":2,"431":4,"433":2,"434":5,"435":4}}],["error",{"2":{"155":1,"156":1,"157":1,"158":1,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1,"165":1,"166":1,"167":1,"168":1,"169":1}}],["erc721",{"2":{"199":1}}],["erc20",{"2":{"110":1,"111":6}}],["erc",{"2":{"29":1,"419":1}}],["else",{"2":{"102":1,"226":1,"415":1}}],["equal",{"2":{"100":1}}],["emit",{"2":{"99":1,"100":1,"101":1,"102":1,"103":1,"106":1,"107":1,"224":1,"226":1,"227":1,"228":1}}],["emergencyrewardwithdraw",{"0":{"223":1},"2":{"223":1}}],["emergencywithdrawrewardevent",{"2":{"61":1}}],["emergency",{"0":{"46":1,"65":1,"139":1},"2":{"46":1,"61":2,"65":1,"139":1,"184":1,"193":1}}],["eventeventhandle管理员更新池开始时间或结束时间时触发的事件",{"2":{"61":1}}],["eventeventhandle管理员更新池每秒奖励时触发的事件",{"2":{"61":1}}],["eventeventhandle管理员更新新池限制时触发的事件",{"2":{"61":1}}],["eventeventhandle管理员停止奖励时触发的事件",{"2":{"61":1}}],["eventeventhandle提取奖励时触发的事件",{"2":{"61":1}}],["eventeventhandle新池创建时触发的事件",{"2":{"60":1}}],["eventhandle池创建时触发的事件",{"2":{"374":1}}],["eventhandle",{"2":{"60":1,"61":5,"374":1}}],["event",{"2":{"60":1,"61":5,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"176":1,"177":1,"178":1,"179":1,"180":1,"181":1,"182":1,"183":1,"184":1,"243":1,"244":1,"311":1,"374":1,"398":1}}],["encode",{"2":{"422":1}}],["encodepacked",{"2":{"101":1,"107":1}}],["enabled",{"2":{"288":1}}],["enablefeeamount",{"0":{"286":1},"2":{"286":1}}],["enough",{"2":{"84":1}}],["entry",{"2":{"44":1,"45":1,"46":1,"47":1,"48":1,"63":1,"64":1,"65":1,"338":1,"340":1,"342":1,"344":1,"346":1,"348":1,"350":1,"352":1,"354":1,"355":1,"356":1}}],["endblock",{"2":{"228":1}}],["endtime",{"2":{"100":6,"101":1,"181":1,"190":1,"191":1}}],["end",{"2":{"39":2,"61":4}}],["eef8788f3eaa34b936d0bc5897fc40fa3782b1e663bf04edf2cd22fcd18329ff",{"2":{"37":1}}],["eti2z5zvedarnuuzjcbv4qcimtlysaizsqh3s6cbfpjb",{"2":{"29":1}}],["eth0x556b9306565093c855aea9ae92a594704c2cd59ezkevm0xe9c7f3196ab8c09f6616365e8873daeb207c0391arbitrum0x5e09acf80c0296740ec5d6f643005a4ef8daa694zksync0x4c615e78c5fca1ad31e4d66eb0d8688d84307463linea0x22e2f236065b780fa33ec8c4e58b99ebc8b55c57base0xc6a2db661d5a5690172d8eb0a7dea2d3008665a3",{"2":{"275":1}}],["eth0x13f4ea83d0bd40e75c8222255bc855a974568dd4zkevm",{"2":{"274":1}}],["etherscan",{"2":{"17":1}}],["eth",{"2":{"17":1,"29":3,"213":2,"272":1,"273":2,"434":1,"435":1}}],["esl7getrca3lallm9ecmfzybugnvf8rixoeegerrodb3",{"2":{"29":1}}],["exactoutputparams多跳交换所需的参数",{"2":{"413":1}}],["exactoutputparams",{"2":{"413":2}}],["exactoutput",{"0":{"413":1},"2":{"413":1}}],["exactoutputsingleparams交换所需的参数",{"2":{"412":1}}],["exactoutputsingleparams",{"2":{"412":2}}],["exactoutputsingle",{"0":{"412":1},"2":{"412":1}}],["exactoutputstableswap",{"0":{"402":1},"2":{"402":1}}],["exactinputparams多跳交换所需的参数",{"2":{"411":1}}],["exactinputparams",{"2":{"411":2}}],["exactinput",{"0":{"411":1},"2":{"411":1}}],["exactinputsingleparams交换所需的参数",{"2":{"410":1}}],["exactinputsingleparams",{"2":{"410":2}}],["exactinputsingle",{"0":{"410":1},"2":{"410":1}}],["exactinputstableswap",{"0":{"401":1},"2":{"401":1}}],["exact",{"2":{"344":1,"346":1,"348":1,"350":1,"352":1,"354":1,"355":1,"356":1,"358":1,"361":1}}],["explorer",{"2":{"29":21,"37":1,"57":1,"77":1,"335":1,"368":1}}],["expirytimestamp",{"2":{"19":2,"20":1}}],["exchange",{"2":{"29":6}}],["external",{"2":{"20":1,"84":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"192":1,"193":1,"194":1,"195":1,"196":1,"197":1,"199":1,"200":1,"202":1,"203":1,"204":1,"206":1,"209":1,"210":1,"211":1,"213":1,"214":1,"223":1,"224":1,"225":1,"226":1,"227":1,"228":1,"233":1,"234":1,"235":1,"236":1,"237":1,"239":1,"244":8,"249":1,"250":1,"257":1,"258":1,"259":1,"260":1,"261":1,"262":1,"263":1,"264":1,"265":1,"266":1,"267":1,"268":1,"269":1,"284":1,"285":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"323":1,"327":1,"328":1,"329":1,"330":1,"331":1,"358":1,"361":1,"400":1,"401":1,"402":1,"405":1,"409":1,"410":1,"411":1,"412":1,"413":1,"415":2}}],["eip",{"0":{"19":1},"2":{"19":1,"110":3,"111":2}}],["做市商池",{"0":{"16":1},"1":{"17":1,"18":1,"19":1,"20":1}}],["并调用",{"2":{"418":1,"424":1}}],["并记入",{"2":{"417":1}}],["并交换全部金额",{"2":{"405":1,"410":1,"411":1}}],["并在回调中偿还",{"2":{"328":1}}],["并且作为单个方法暴露",{"2":{"300":1}}],["并且还可以防止不可用范围内的流动性被用来增加池子中的可用流动性",{"2":{"296":1}}],["并且始终为正",{"2":{"295":1}}],["并且使用这种方法时永远不会有悬挂的批准",{"2":{"110":1}}],["并将其计入该头寸",{"2":{"209":1}}],["并将签署的",{"2":{"111":1}}],["并链接到",{"2":{"14":1}}],["并与这里设定的",{"2":{"0":1}}],["销售下找到它们的地址",{"2":{"14":1}}],["限额",{"0":{"10":1},"1":{"11":1,"12":1}}],["iclpoolmanager",{"2":{"429":2}}],["iclhooks",{"2":{"424":1}}],["icake",{"0":{"10":1,"12":1},"1":{"11":1,"12":1},"2":{"12":1}}],["ipoolmanager",{"2":{"422":1}}],["ipancakev3flashcallback",{"2":{"328":1}}],["ipancakev3factory",{"2":{"282":1,"291":1,"313":1}}],["ipancakev3swapcallback",{"2":{"327":1}}],["ipancakev3lmpool",{"2":{"310":1,"331":1}}],["ipancakev3poolv3",{"2":{"196":1}}],["ipancakev3pool",{"2":{"126":1,"171":1,"196":1,"409":1}}],["ipancakefactory",{"2":{"244":2}}],["ihooks",{"2":{"422":2}}],["iv3swaprouter",{"2":{"410":2,"411":2,"412":2,"413":2}}],["import",{"2":{"244":1,"422":1}}],["immunefi",{"2":{"0":1}}],["ibep20",{"2":{"224":1}}],["ilmpool",{"2":{"171":1}}],["ilmpooldeployer",{"2":{"137":1,"195":1}}],["irandomnumbergenerator",{"2":{"107":3}}],["ierc20cake",{"2":{"189":1}}],["ierc20",{"2":{"103":1,"133":1,"189":1}}],["ifarmbooster",{"2":{"138":1}}],["if",{"2":{"102":3,"226":1,"415":1}}],["ifo页面的每个",{"2":{"14":1}}],["ifo",{"0":{"10":1,"13":1,"15":1,"30":1},"1":{"11":1,"12":1,"14":1,"15":1,"31":1},"2":{"14":3,"31":1}}],["i++",{"2":{"102":1}}],["i",{"2":{"102":3}}],["inu64输入的最大",{"2":{"347":1,"351":1,"354":1,"356":1}}],["inu64支付的输入",{"2":{"345":1,"349":1,"353":1,"355":1}}],["input",{"2":{"344":1,"348":1,"352":1,"355":1}}],["indexed",{"2":{"243":2,"244":2}}],["incoin",{"2":{"359":1,"362":1}}],["inconsistentamount",{"0":{"168":1},"2":{"168":1}}],["increaseobservationcardinalitynext",{"0":{"318":1},"2":{"318":1}}],["increaseliquidityparamstokenid",{"2":{"206":1}}],["increaseliquidityparams",{"2":{"206":1}}],["increaseliquidity",{"0":{"206":1},"2":{"206":1}}],["initialized",{"2":{"326":1}}],["initialize",{"0":{"319":1},"2":{"319":1,"423":2,"424":1}}],["init",{"0":{"170":1},"2":{"170":1}}],["insufficientamount",{"0":{"169":1},"2":{"169":1}}],["invalidpid",{"0":{"164":1},"2":{"164":1}}],["invalidperiodduration",{"0":{"162":1},"2":{"162":1}}],["invalidnft",{"0":{"159":1},"2":{"159":1}}],["inonfungiblepositionmanagerstruct",{"2":{"206":2,"209":2,"210":2,"211":1}}],["inonfungiblepositionmanagernft",{"2":{"189":1}}],["inonfungiblepositionmanager",{"2":{"136":1,"189":1}}],["int",{"2":{"436":1}}],["int256",{"2":{"325":2,"327":3,"409":2,"429":1}}],["int24",{"2":{"127":2,"173":2,"175":2,"198":2,"280":1,"286":1,"295":2,"299":1,"306":1,"316":2,"320":2,"321":2,"322":2,"323":2,"325":1,"326":1,"429":2}}],["int56",{"2":{"316":1,"317":1,"324":1}}],["int16",{"2":{"307":1}}],["int128",{"2":{"175":1,"320":1,"416":2}}],["interface",{"2":{"244":1}}],["interfaces",{"2":{"244":1}}],["internal",{"2":{"201":1,"205":1,"207":1,"208":1,"212":1,"251":1,"252":1,"253":1,"254":1,"255":1,"315":1,"399":1}}],["introduction",{"0":{"90":1}}],["in",{"2":{"107":1,"333":1,"344":1,"346":1,"348":1,"350":1,"352":1,"354":1,"355":1,"356":1,"358":1,"361":1,"364":1}}],["injectfunds",{"0":{"99":1},"2":{"99":1}}],["injectoraddress",{"2":{"106":5}}],["injector",{"0":{"97":1,"99":1},"2":{"93":1,"99":1,"106":1}}],["infostableswapaddress",{"2":{"116":3}}],["infotable",{"2":{"40":1}}],["infovector池信息结构体的列表",{"2":{"39":1}}],["info",{"0":{"89":1},"1":{"90":1,"91":1},"2":{"39":1,"40":3,"67":1,"306":1,"308":1,"398":1,"400":1}}],["is",{"2":{"42":2,"378":1}}],["id",{"2":{"39":2,"40":4,"48":2,"50":1,"51":1,"60":1,"84":1,"192":1,"197":1,"200":1,"202":1,"203":1,"204":1,"206":1,"209":1,"210":1,"422":1}}],["io",{"2":{"29":3}}],["src",{"2":{"415":1,"422":1}}],["supply",{"2":{"383":1}}],["subgraphs",{"2":{"29":24}}],["subgraph",{"2":{"29":1}}],["safe",{"2":{"333":1}}],["safetransfer",{"2":{"102":1,"103":1,"223":1,"224":1}}],["safetransferfrom",{"2":{"99":1}}],["sqrtpricelimitx96uint160q64",{"2":{"327":1}}],["sqrtpricelimitx96",{"2":{"327":1}}],["sqrtpricenextx96",{"2":{"326":1}}],["sqrtpricestartx96",{"2":{"326":1}}],["sqrtpricex96",{"0":{"433":1},"1":{"434":1,"435":1},"2":{"299":1,"319":1,"325":1,"423":1,"433":3,"434":1,"435":1}}],["sqrt",{"2":{"317":1,"319":1,"327":1,"433":1}}],["snapshotcumulativesinside",{"0":{"316":1},"2":{"316":1}}],["slot0",{"0":{"299":1,"300":1},"2":{"299":1,"300":2}}],["slowmist",{"2":{"9":1,"123":1,"333":1}}],["sp",{"0":{"297":1},"2":{"297":1}}],["special64特殊农场可以获得的",{"2":{"39":1}}],["special",{"2":{"39":3}}],["sbytes32许可签名的",{"2":{"262":1,"263":1,"264":1}}],["s",{"2":{"262":2,"263":2,"264":2,"333":3}}],["sol",{"2":{"231":1,"244":1,"247":1,"415":1,"422":1,"424":1,"429":1,"436":1}}],["solidity",{"0":{"125":1,"277":1,"290":1,"395":1,"404":1,"407":1},"1":{"126":1,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1,"137":1,"138":1,"139":1,"140":1,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1,"153":1,"154":1,"155":1,"156":1,"157":1,"158":1,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1,"165":1,"166":1,"167":1,"168":1,"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"176":1,"177":1,"178":1,"179":1,"180":1,"181":1,"182":1,"183":1,"184":1,"185":1,"186":1,"187":1,"188":1,"189":1,"190":1,"191":1,"192":1,"193":1,"194":1,"195":1,"196":1,"197":1,"198":1,"199":1,"200":1,"201":1,"202":1,"203":1,"204":1,"205":1,"206":1,"207":1,"208":1,"209":1,"210":1,"211":1,"212":1,"213":1,"214":1,"278":1,"279":1,"280":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"320":1,"321":1,"322":1,"323":1,"324":1,"325":1,"326":1,"327":1,"328":1,"329":1,"330":1,"331":1,"396":1,"397":1,"398":1,"399":1,"400":1,"401":1,"402":1,"405":1,"408":1,"409":1,"410":1,"411":1,"412":1,"413":1},"2":{"244":1}}],["soliditypack",{"2":{"84":1}}],["sweeptoken",{"0":{"214":1},"2":{"210":1,"214":1}}],["swapcallbackdata",{"0":{"408":1},"2":{"408":1}}],["swapcache",{"0":{"324":1},"2":{"324":1}}],["swapinfo",{"0":{"374":1},"2":{"374":1}}],["swapstate",{"0":{"325":1},"2":{"325":1}}],["swapexacttokensfortokens",{"0":{"405":1},"2":{"405":1}}],["swapexacttokensforethsupportingfeeontransfertokens",{"0":{"269":1},"2":{"269":1}}],["swapexacttokensforeth",{"0":{"268":1},"2":{"268":1}}],["swapexactethfortokenssupportingfeeontransfertokens",{"0":{"267":1},"2":{"267":1}}],["swapexactethfortokens",{"0":{"266":1},"2":{"266":1}}],["swapethforexacttokens",{"0":{"265":1},"2":{"265":1}}],["swap",{"0":{"20":1,"327":1,"367":1},"1":{"368":1,"369":1,"370":1,"371":1,"372":1,"373":1,"374":1,"375":1,"376":1,"377":1,"378":1,"379":1,"380":1,"381":1,"382":1,"383":1,"384":1,"385":1,"386":1,"387":1,"388":1},"2":{"20":1,"327":1,"344":1,"346":1,"348":1,"350":1,"352":1,"354":1,"355":1,"356":1,"358":1,"361":1,"368":2,"409":1,"415":1,"416":1}}],["smartrouterv3",{"0":{"389":1},"1":{"390":1,"391":1,"392":1,"393":1}}],["smart",{"0":{"117":1},"2":{"57":2,"115":1,"117":2}}],["smartchefinitializable",{"0":{"219":1},"1":{"220":1,"221":1,"222":1,"223":1,"224":1,"225":1,"226":1,"227":1,"228":1,"229":1}}],["smartchefmetadata",{"0":{"60":1},"2":{"60":1}}],["smartchef",{"2":{"29":2}}],["sepolia0xb89a6778d1efe7a5b7096757a21b810cc2886fa1zksync0xca97d1fafcea54efc68d66ea914ab2f8fbfe93c5",{"2":{"270":1}}],["sepolia0xfe6508f0015c778bdcc1fb5465ba5ebe224c9912base",{"2":{"270":1}}],["sepolia0xfe6508f0015c778bdcc1fb5465ba5ebe224c9912arbitrum",{"2":{"270":1}}],["sepolia0x31c2f6fcff4f8759b3bd5bf0e1084a055615c768zksync0xaf321b731e65715ddbfda73a066e00bb28345709",{"2":{"108":1}}],["sepolia",{"2":{"108":2}}],["settickspacing",{"2":{"422":1}}],["settle",{"0":{"419":1},"2":{"415":3,"416":1,"418":1,"419":1}}],["setstableswap",{"0":{"398":1,"400":1},"2":{"398":1,"400":1}}],["setlmpool",{"0":{"331":1},"2":{"331":1}}],["setlmpoolevent",{"0":{"311":1},"2":{"311":1}}],["setlmpooldeployer",{"0":{"195":1},"2":{"195":1}}],["setfeeprotocol",{"0":{"329":1},"2":{"329":1}}],["setfeeamountextrainfo",{"0":{"288":1},"2":{"288":1}}],["setfeetosetter",{"0":{"241":1},"2":{"244":1}}],["setfeeto",{"0":{"240":1},"2":{"244":1}}],["setwhitelistaddress",{"0":{"287":1},"2":{"287":1}}],["setowner",{"0":{"285":1},"2":{"278":1,"285":1}}],["setoperatorandtreasuryandinjectoraddresses",{"0":{"106":1},"2":{"106":1}}],["set",{"0":{"197":1},"2":{"197":1,"226":1,"228":1}}],["setreceiver",{"0":{"194":1},"2":{"194":1}}],["setemergency",{"0":{"184":1,"193":1},"2":{"184":1,"193":1}}],["setpool",{"0":{"172":1},"2":{"172":1}}],["setmaxnumberticketsperbuy",{"0":{"105":1},"2":{"105":1}}],["setminandmaxticketpriceincake",{"0":{"104":1},"2":{"104":1}}],["sendfrom",{"2":{"84":3}}],["sender",{"2":{"44":1,"45":1,"46":1,"99":1,"103":1,"180":1,"206":1,"223":1,"224":1,"338":1,"340":1,"342":1,"344":1,"346":1,"348":1,"350":1,"352":1,"354":1,"355":1,"356":1,"376":1,"409":1}}],["secondu64每秒钟发放的奖励",{"2":{"61":1}}],["secondsago",{"2":{"317":3}}],["secondsagos",{"2":{"317":2}}],["secondsperliquiditycumulativex128",{"2":{"324":1}}],["secondsperliquiditycumulativex128s",{"2":{"317":1}}],["secondsperliquidityinsidex128",{"2":{"316":1}}],["secondsinside",{"2":{"316":1}}],["seconds",{"2":{"61":2}}],["second64所有农场池每秒的",{"2":{"39":1}}],["second",{"2":{"39":1,"61":3}}],["shareu128每份的累积代币",{"2":{"61":1}}],["shareu128池中的累计",{"2":{"42":1}}],["share",{"2":{"42":1,"61":1}}],["singercapability资源账号的签名能力",{"2":{"39":1}}],["signercapabilty部署模块时生成的签名者能力",{"2":{"374":1}}],["signercapability",{"2":{"39":1,"60":1,"374":1}}],["signercapablity资源账户的签名能力",{"2":{"60":1}}],["signer",{"2":{"39":1,"44":1,"45":1,"46":1,"60":1,"63":1,"64":1,"65":1,"338":1,"340":1,"342":1,"344":1,"346":1,"348":1,"350":1,"352":1,"354":1,"355":1,"356":1,"374":1,"376":1}}],["signtypeddata",{"2":{"19":1}}],["signaturebytes上述生成的签名",{"2":{"20":1}}],["signature",{"2":{"19":1,"20":1}}],["stepcomputations",{"0":{"326":1},"2":{"326":1}}],["stopreward",{"2":{"225":1}}],["stoprewards",{"0":{"225":1}}],["stoprewardevent",{"2":{"61":1}}],["stop",{"2":{"61":2}}],["store",{"2":{"41":1,"42":1}}],["stableinfo",{"2":{"393":1}}],["stablefactory",{"2":{"393":1}}],["stableswapinfo",{"0":{"397":1},"2":{"397":1,"399":1}}],["stableswapfactory",{"0":{"396":1},"2":{"396":1,"399":1}}],["stableswaprouter",{"0":{"394":1},"1":{"395":1,"396":1,"397":1,"398":1,"399":1,"400":1,"401":1,"402":1}}],["stableswapaddress",{"2":{"116":3}}],["stableswap",{"2":{"29":2,"80":1,"114":2}}],["status",{"2":{"99":2,"100":4,"101":4,"102":4,"107":2}}],["started",{"2":{"227":1,"228":1}}],["startblock",{"2":{"227":1,"228":11}}],["starttime",{"2":{"100":1,"181":1}}],["startlottery",{"0":{"100":1},"2":{"100":2}}],["start",{"2":{"61":4,"100":1}}],["stake",{"2":{"69":1}}],["stakedtoken",{"2":{"224":2}}],["staked",{"2":{"61":2,"224":1}}],["staketoken",{"2":{"61":7,"63":1,"64":1,"65":1,"67":1,"69":1,"72":1}}],["string",{"2":{"39":4}}],["struct",{"2":{"20":1,"39":1,"40":1,"41":1,"42":1,"60":1,"61":1,"79":3,"126":1,"127":1,"129":1,"130":1,"198":1,"201":1,"205":1,"206":1,"209":1,"210":1,"211":1,"282":1,"299":1,"300":1,"303":1,"304":1,"306":1,"308":1,"309":1,"320":1,"324":1,"325":1,"326":1,"371":1,"372":1,"373":1,"374":1,"408":1,"410":1,"411":1,"412":1,"413":1,"422":1,"429":1}}],["syrup",{"0":{"7":1,"56":1,"215":1,"217":1},"1":{"8":1,"9":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"216":1,"217":1},"2":{"29":1,"33":1,"75":1,"216":3}}],["的价格比率",{"2":{"434":1,"435":1}}],["的价格而变化",{"2":{"84":1}}],["的平方根价格比率",{"2":{"433":1}}],["的初始化方法",{"2":{"423":1}}],["的输入需要",{"2":{"422":1}}],["的逻辑",{"2":{"420":1}}],["的多余代币",{"2":{"418":1}}],["的值",{"2":{"416":1}}],["的例子",{"2":{"415":1}}],["的余额进行调整",{"2":{"415":1}}],["的余额变动",{"2":{"415":1}}],["的另一种代币",{"2":{"412":1,"413":1}}],["的一种代币以沿指定路径尽可能多地获取另一种代币",{"2":{"411":1}}],["的一种代币以获取尽可能多的另一种代币",{"2":{"410":1}}],["的一种代币换成尽可能多的另一种代币",{"2":{"405":1}}],["的币种储备",{"2":{"373":1}}],["的币种类型地址",{"2":{"369":2}}],["的总量",{"2":{"372":2,"373":2,"386":2,"388":2}}],["的总流动性没有关系",{"2":{"305":1}}],["的乘积",{"2":{"372":1}}],["的费用",{"2":{"330":1}}],["的费用amount1requesteduint128发送的最大",{"2":{"330":1}}],["的费用数量",{"2":{"210":1}}],["的费用数量amount1uint256收集的",{"2":{"210":1}}],["的累积秒数范围内流动性值",{"2":{"317":1}}],["的累积",{"2":{"317":2}}],["的信息",{"2":{"306":1}}],["的池子表示",{"2":{"295":1}}],["的标准地址",{"2":{"249":1,"250":1}}],["的顺序可互换",{"2":{"233":1,"239":1}}],["的最大数量",{"2":{"210":2}}],["的最小数量",{"2":{"206":2}}],["的最后状态",{"2":{"192":1}}],["的期望数量",{"2":{"206":2}}],["的协议这样做过",{"2":{"111":1}}],["的代币余额",{"2":{"387":1}}],["的代币储备",{"2":{"385":1}}],["的代币",{"2":{"110":1}}],["的代币和奖励",{"2":{"29":1}}],["的金额",{"2":{"102":2}}],["的随机生成器计算",{"2":{"102":1,"107":1}}],["的数量会被忽略",{"2":{"84":1}}],["的数量",{"2":{"84":1,"304":1,"321":2}}],["的数据",{"2":{"29":2}}],["的地址",{"2":{"84":1,"213":1,"233":1,"241":1,"336":2}}],["的示例",{"0":{"84":1}}],["的安全审计",{"2":{"75":1,"86":1}}],["的列表",{"2":{"40":2}}],["的表",{"2":{"40":2}}],["的元数据",{"2":{"39":1,"372":1}}],["的所有指标",{"2":{"29":4}}],["的市场",{"2":{"29":3}}],["的返回值",{"2":{"28":1}}],["的新",{"2":{"9":2,"123":2}}],["的",{"2":{"6":1,"8":1,"26":1,"31":1,"35":1,"55":1,"84":1,"154":1,"192":1,"200":1,"202":1,"203":1,"204":1,"206":1,"209":1,"210":1,"221":1,"301":1,"302":1,"317":2,"327":1,"359":1,"360":1,"362":1,"363":2,"409":2,"422":3}}],["的漏洞悬赏计划主要关注我们的智能合约",{"2":{"0":1}}],["审计报告",{"0":{"9":1,"123":1},"2":{"35":1}}],["审计",{"0":{"6":1,"26":1,"31":1,"35":1,"55":1,"75":1,"86":1,"333":1}}],["提升倍数进行挖矿",{"2":{"5":1}}],["这是",{"2":{"432":1}}],["这也意味着",{"2":{"430":1,"431":1}}],["这也意味着撤销批准不一定需要一笔新交易",{"2":{"110":1}}],["这些都为你更容易实现",{"2":{"424":1}}],["这些是需要与你的",{"2":{"416":1}}],["这取决于你的使用案例",{"2":{"419":1}}],["这将把多余的代币存储在",{"2":{"417":1}}],["这将把欠下的代币从",{"2":{"417":1}}],["这使合约可以在调用此函数之前发送代币",{"2":{"405":1}}],["这必须通过铸造或烧毁任意数量的流动性来完成",{"2":{"322":1}}],["这确保了没有用户质押数量超过质押限制",{"2":{"226":1}}],["这样的间接方式使",{"2":{"111":1}}],["这意味着如果用户之前已经为某个集成",{"2":{"111":1}}],["这意味着应用程序接收代币时不需要批准",{"2":{"110":1}}],["这允许应用程序通过在使用",{"2":{"110":1}}],["这里存在权衡",{"2":{"432":1}}],["这里",{"2":{"87":1}}],["这个",{"2":{"433":1}}],["这个方法也防止在池子初始化之前对一个函数的进入",{"2":{"312":1}}],["这个值与所有",{"2":{"305":1}}],["这个值可能会溢出",{"2":{"301":1,"302":1}}],["这个参数不能再修改",{"2":{"227":1,"228":1}}],["这个地址由阈值",{"2":{"221":1}}],["这个地址应为调用",{"2":{"84":1}}],["这个工厂合约帮助用户部署代理来使用",{"2":{"5":1}}],["这可以是一个智能合约本身或一笔交易",{"2":{"0":1}}],["pure",{"2":{"249":1,"250":1,"251":1,"252":1,"255":1}}],["public",{"2":{"44":1,"45":1,"46":1,"47":1,"48":1,"50":1,"53":1,"63":1,"64":1,"65":1,"67":1,"69":1,"72":1,"189":1,"190":1,"191":1,"283":1,"286":1,"287":1,"288":1,"314":1,"338":1,"340":1,"342":1,"344":1,"346":1,"348":1,"350":1,"352":1,"354":1,"355":1,"356":1,"358":1,"361":1,"364":1,"376":1,"378":1,"380":1,"383":1,"385":1,"387":1,"393":1}}],["phantom",{"2":{"61":3,"77":1,"371":2,"372":2,"373":2}}],["pendingcake",{"0":{"192":1},"2":{"192":1}}],["pendinginjectionnextlottery",{"2":{"100":3,"102":1}}],["pending",{"0":{"50":1},"1":{"51":1,"52":1},"2":{"50":1,"72":1}}],["periphery",{"2":{"415":1}}],["periodnumber",{"2":{"181":1,"182":1}}],["periodduration",{"2":{"179":1}}],["period",{"0":{"146":1},"2":{"146":1}}],["permittransferfrom",{"2":{"111":2}}],["permit",{"2":{"110":2,"111":1}}],["permit2",{"0":{"108":1},"2":{"109":1,"110":1,"111":11}}],["per",{"2":{"39":2,"42":2,"61":8}}],["pecksheild",{"2":{"9":1,"123":1}}],["peckshield",{"2":{"6":1,"26":1}}],["piduint256池的",{"2":{"190":1,"197":1}}],["pidsvector池",{"2":{"40":1}}],["pids",{"2":{"40":1}}],["pidtable",{"2":{"39":1}}],["pid",{"2":{"39":1,"40":1,"48":1,"50":1,"116":3,"127":1,"130":1,"131":1,"132":1,"165":1,"171":1,"172":1,"173":1,"174":1,"175":1,"180":1,"186":1,"190":2,"197":1}}],["positionmanager",{"2":{"393":1}}],["position",{"2":{"308":1}}],["positions",{"0":{"308":1},"1":{"309":1},"2":{"308":1}}],["positioninfo",{"2":{"201":1,"205":1}}],["pointu64池分配点",{"2":{"42":1}}],["pointu64所有特殊农场分配点总和",{"2":{"39":1}}],["pointu64所有常规农场分配点总和",{"2":{"39":1}}],["point",{"2":{"39":2,"42":1}}],["pottery",{"2":{"29":1}}],["polygon",{"2":{"29":3}}],["poolidlibrary",{"2":{"422":4}}],["poolid",{"0":{"422":1},"2":{"422":6}}],["poolinfo",{"0":{"42":1,"61":1,"126":1,"129":1},"2":{"39":1,"42":1,"61":1,"126":1,"129":2,"197":1}}],["poolkey",{"0":{"422":1},"2":{"415":2,"422":9,"423":2,"424":3,"429":1,"432":1}}],["poolmanager",{"0":{"420":1},"1":{"421":1,"422":1,"423":1},"2":{"415":1,"416":1,"421":1,"422":4}}],["poollimitperuser",{"2":{"226":7}}],["poollength",{"0":{"128":1},"2":{"128":1}}],["pooldeployer",{"0":{"218":1,"279":1},"2":{"279":1,"283":1}}],["pooluserinfo",{"0":{"40":1},"2":{"40":1}}],["pools",{"0":{"47":1,"56":1},"1":{"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1},"2":{"29":1,"33":1,"47":1,"216":1}}],["pool",{"0":{"7":1,"48":1,"53":1},"1":{"8":1,"9":1,"54":1},"2":{"8":1,"9":2,"17":1,"19":1,"39":2,"48":1,"53":1,"60":2,"61":4,"67":1,"75":1,"227":1,"228":1,"284":1,"415":1,"420":1}}],["price",{"2":{"429":1,"430":1,"431":1,"433":2,"434":1,"435":1}}],["priceticketincake",{"2":{"100":6}}],["pragma",{"2":{"244":1}}],["precision",{"0":{"149":1,"150":1,"151":1},"2":{"61":2,"149":1,"150":1,"151":2}}],["prediction",{"2":{"25":2,"26":1,"29":3}}],["protocolfee",{"2":{"325":1}}],["protocolfees",{"0":{"303":1,"304":1},"2":{"303":1,"304":2}}],["protocol",{"0":{"297":1,"298":1},"2":{"297":1,"298":1}}],["program",{"0":{"88":1},"1":{"89":1,"90":1,"91":1}}],["profile",{"2":{"29":1}}],["proxy",{"0":{"5":1}}],["parameters",{"2":{"422":2,"424":3}}],["params",{"2":{"206":1,"209":1,"210":1,"211":1,"410":1,"411":1,"412":1,"413":1,"415":1,"429":1}}],["path",{"2":{"253":1,"254":1,"265":3,"266":3,"267":3,"268":3,"269":1,"401":1,"402":1,"405":1,"408":1}}],["paircreatedevent",{"2":{"374":1}}],["paircreated",{"0":{"243":1},"2":{"239":1,"243":1,"244":1}}],["pair",{"2":{"233":1,"234":1,"239":1,"243":1,"244":4,"338":1,"374":2,"378":1}}],["payer",{"2":{"408":1}}],["pay",{"0":{"207":1},"2":{"207":1}}],["payable",{"2":{"20":1,"84":1,"206":1,"258":1,"265":1,"266":1,"267":1,"401":1,"402":1,"405":1,"410":1,"411":1,"412":1,"413":1}}],["pancakev3flashcallback",{"2":{"328":1}}],["pancakev3factory",{"0":{"276":1},"1":{"277":1,"278":1,"279":1,"280":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1},"2":{"409":1}}],["pancakev3swapcallback",{"0":{"409":1},"2":{"327":1,"409":1}}],["pancakev3pool",{"0":{"289":1},"1":{"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"320":1,"321":1,"322":1,"323":1,"324":1,"325":1,"326":1,"327":1,"328":1,"329":1,"330":1,"331":1},"2":{"300":1,"304":1,"409":1}}],["pancakerouter",{"2":{"247":2}}],["pancakefactory",{"2":{"231":2,"250":1,"276":1}}],["pancakebridge",{"2":{"85":1}}],["pancakesswap",{"2":{"33":1}}],["pancakeswapv3",{"2":{"125":1}}],["pancakeswap",{"0":{"80":1,"108":1,"270":1,"271":1},"1":{"272":1,"273":1,"274":1,"275":1},"2":{"0":3,"8":1,"21":1,"25":2,"29":15,"31":1,"33":1,"34":1,"35":1,"55":1,"75":1,"86":1,"87":2,"91":1,"114":1,"115":1,"117":1,"120":1,"121":1,"230":1,"246":1,"277":1,"333":3,"391":1,"415":1,"421":2,"422":1,"425":1}}],["pancake",{"2":{"29":1,"34":1,"37":1,"57":1,"77":1,"335":1,"368":1,"400":1,"415":1,"425":1}}],["pancakepredictionv3",{"2":{"25":1}}],["pancakepredictionv2",{"2":{"25":1}}],["pcs",{"2":{"19":1}}],["在池上进行交换或流动性操作之前",{"2":{"423":1}}],["在池中抵押的代币总数量",{"2":{"41":1}}],["在初始部署中",{"2":{"420":1}}],["在这种情况下",{"2":{"417":1,"418":1}}],["在这个架构的核心是",{"2":{"414":1}}],["在实现中",{"2":{"409":1}}],["在通过",{"2":{"409":1}}],["在通过路由器完成所有交换操作的最后",{"2":{"391":1}}],["在紧急情况下",{"2":{"223":1}}],["在协议合约上调用交互函数",{"2":{"111":1}}],["在一个",{"2":{"111":1}}],["在一次交易中移除任何数量的代币和授权者的许可",{"2":{"110":1}}],["在闪崩",{"2":{"104":1}}],["在四舍五入到",{"2":{"84":1}}],["在",{"2":{"4":1,"5":1,"8":1,"12":1,"17":2,"28":6,"83":1,"87":1,"117":1,"120":1,"121":1,"231":1,"335":1,"368":1,"415":1,"421":2}}],["0571e",{"2":{"435":5}}],["04965646e",{"2":{"431":3}}],["0dstnativegastransferaddressbytes目标链上接收原生燃料代币的地址",{"2":{"84":1}}],["01",{"2":{"84":1,"432":1}}],["00105551602",{"2":{"434":3}}],["00105411128",{"2":{"430":2}}],["005",{"2":{"84":1}}],["0001",{"2":{"317":1,"429":1,"430":1,"431":1}}],["000低usd",{"2":{"0":1}}],["000中usd",{"2":{"0":2}}],["000高usd",{"2":{"0":1}}],["000",{"2":{"0":2,"422":2}}],["0",{"2":{"84":3,"100":16,"102":7,"105":2,"106":3,"107":1,"210":1,"226":1,"234":2,"280":1,"281":1,"295":1,"300":1,"317":1,"328":1,"330":2,"405":1,"415":1,"422":1,"424":3,"430":2,"434":3}}],["0x73feaa1ee314f8c655e354234017be2193c9e24e",{"2":{"120":1}}],["0x7c5a0427242214c1cf58b2c3fa7dc673b924212e",{"2":{"15":1}}],["0x1b81d678ffb9c0263b24a97847620c99d213eb140xd70c70ad87aa8d45b8d59600342fb3aee76e3c680x1b81d678ffb9c0263b24a97847620c99d213eb14v3migrator0xbc203d7f83677c7ed3f7acec959963e7f4ecc5c20x556a72a7a3bb3bbd293d923e59b6b56898fb405d0x46a15b0b27311cedf172ab29e4f4766fbe7f4364nonfungiblepositionmanager0x46a15b0b27311cedf172ab29e4f4766fbe7f43640xa815e2ed7f7d5b0c49fda367f249232a1b9d28830x427bf5b37357632377ecbec9de3626c71a5396c1quoterv20xb048bbc1ee6b733fffcfb9e9cef7375518e259970x3d146fce6c1006857750cbe8af44f76a28041ccc0xbc203d7f83677c7ed3f7acec959963e7f4ecc5c2ticklens0x9a489505a00ce272eaa5e07dba6491314cae37960x7b08978fa77910f77d273c353c62b5bfb9e6d17b0xac1ce734566f390a94b00eb9bf561c2625bf44eapancakeinterfacemulticall0xac1ce734566f390a94b00eb9bf561c2625bf44ea0x2a76b93b9cd441ae8ada529e0e95826e005563510x3d00cdb4785f0ef20c903a13596e0b9b2c652227",{"2":{"273":1}}],["0x169f653a54acd441ab34b73da9946e2c451787ef",{"2":{"116":1}}],["0x1a77c359d0019cd8f4d36b7cdf5a88043d801072",{"2":{"116":1}}],["0x18b2a687610328590bc8f2e5fedde3b582a49cda",{"2":{"25":1}}],["0xc2f5b9a3d9138ab2b74d581fc11346219ebf43fe",{"2":{"116":1}}],["0xc6665d98efd81f47b03801187eb46cbc63f328b0",{"2":{"115":1,"117":1}}],["0xcaf4e48a4cb930060d0c3409f40ae7b34d2abe2d",{"2":{"28":1}}],["0xe2aecf96d23575b11624d0891c0828e767c8cb8b",{"2":{"217":1}}],["0xe2086f890e7bd20e07fc0036a437dc4813e88b09",{"2":{"96":1}}],["0xee1bcc9f1692e81a281b3a302a4b67890ba4be76",{"2":{"116":1}}],["0xe4faa3ef5a9708c894435b0f39c2b440936a3a52",{"2":{"4":1}}],["0x566a7e38b300e903de71389c2b801acdba5268db",{"2":{"95":1}}],["0x5692db8177a81a6c6afc8084c2976c9933ec1bab",{"2":{"28":1}}],["0xa5f8c5dbd5f286960b9d90548680ae5ebff07652",{"2":{"121":1}}],["0xa5465248b3a8986d86aca968c0c076250263409f",{"2":{"15":1}}],["0xa680d27f63fa5e213c502d1b3ca1eb6a3c1b31d6",{"2":{"116":3}}],["0xad9d97fc7bf0ac6dc68d478dcb3709454519b358",{"2":{"94":1,"97":1,"221":1}}],["0xyouraptosaddress",{"2":{"84":1}}],["0xb274202daba6ae180c665b4fbe59857b7c3a8091",{"2":{"83":1}}],["0xbdc44f83de2e66534e555dabed640c9af290ce54",{"2":{"15":1}}],["0xd97268666bad31a7299cc80c1bca26face32718630c5498544fe8e9bcc593d74",{"2":{"57":1}}],["0xd4e7f319a22a746518e9b8b79854b30b0c7bf5df",{"2":{"15":1}}],["0x0000000000000000000000000000000000000000",{"2":{"233":1,"234":1}}],["0x011f2a82846a4e9c62c2fc4fd6fdbad19147d94a",{"2":{"28":1}}],["0x0e3a8078edd2021dadcde733c6b4a86e51ee8f07",{"2":{"25":1}}],["0x927158be21fe3d4da7e96931bb27fd5059a8cbc2",{"2":{"217":1}}],["0x92c73d90f709dff7e5e7307e8f2ee20e39396b12",{"2":{"91":1}}],["0x9936836587ca33240d3d3f91844651b16cb07802faf5e34514ed6f78580deb0a",{"2":{"77":1}}],["0x9cac9745731d1cf2b483f257745a512f0938dd01",{"2":{"28":1}}],["0x9ca2a439810524250e543ba8fb6e88578af242bc",{"2":{"17":1}}],["0x94f8cba8712b3e72c9bf8ba4d6619ac9046fe695",{"2":{"28":1}}],["0xfff5812c35ec100df51d5c9842e8cc3fe60f9ad7",{"2":{"217":1}}],["0xffdcdd4cf85ba1b51d7ab498208c0ec7e1910e3b",{"2":{"28":1}}],["0xfeacb05b373f1a08e68235ba7fc92636b92ced01",{"2":{"17":1}}],["0x4684b399607f67e26a21e9f2a73eae97e28d246d",{"2":{"15":1}}],["0x45c54210128a065de780c4b0df3d16664f7f859e",{"2":{"8":1}}],["0x36842f8fb99d55477c0da638af5ceb6bbf86aa98",{"2":{"116":1}}],["0x36bbb126e75351c0dfb651e39b38fe0bc436ffd2",{"2":{"114":1}}],["0x3efebc418efb585248a0d2140cfb87afcc2c63dd",{"2":{"116":1}}],["0x3b3e6b959b842a1634bb96b1d924e98bca38f4e7",{"2":{"15":1}}],["0x3c458828d1622f5f4d526eb0d24da8c4eb8f07b1",{"2":{"12":1}}],["0x2c36221bf724c60e9fee3dd44e2da8017a8ef3ba",{"2":{"5":1}}],["或流动性",{"2":{"415":1}}],["或必须接收",{"2":{"409":2}}],["或确切输出量",{"2":{"327":1}}],["或范围内流动性",{"2":{"317":1}}],["或查看更多",{"2":{"87":1}}],["或者",{"2":{"14":1}}],["或",{"2":{"0":1,"19":1,"99":1,"210":1,"280":1,"281":1,"284":1,"322":2,"327":1,"328":1,"415":1,"416":1,"423":1}}],["currency1",{"2":{"422":3}}],["currency",{"2":{"417":4,"418":3,"422":2}}],["currency0",{"2":{"415":2,"422":3}}],["current",{"2":{"228":1}}],["currentticketid",{"2":{"100":3,"101":3,"107":1}}],["currentlotteryid++",{"2":{"100":1}}],["currentlotteryid",{"2":{"100":4,"102":1,"107":3}}],["creator",{"2":{"372":1}}],["createdevent",{"2":{"374":1}}],["created",{"2":{"374":1,"378":1}}],["createpool",{"0":{"284":1},"2":{"284":1}}],["createpoolevent",{"2":{"60":1}}],["createpair",{"0":{"239":1},"2":{"239":1,"243":1,"244":1}}],["create",{"2":{"60":2,"338":1}}],["c7efb4076dbe143cbcd98cfaaa929ecfc8f299203dfff63b95ccb6bfe19850fa",{"2":{"335":1,"368":1}}],["cl",{"2":{"422":1}}],["clpoolmanager",{"2":{"415":2,"420":1,"421":1,"423":2,"429":1}}],["close",{"2":{"101":1,"102":2}}],["closelottery",{"0":{"101":1},"2":{"101":1}}],["claimable",{"2":{"100":1,"102":1,"107":2}}],["c5euizwwkcge7edveemcvdmdr7jjc1zg4vgn8uucldfz",{"2":{"29":1}}],["cjygnhb7rvnhfbdjqprnd3oxgyhibzc7fkama38yv3os",{"2":{"29":1}}],["changerandomgenerator",{"0":{"107":1},"2":{"107":1}}],["chain",{"2":{"117":1}}],["chainlink",{"2":{"102":2,"107":1}}],["chain=arbitrum",{"2":{"29":21}}],["chainid",{"2":{"19":1}}],["chef",{"2":{"29":1,"57":2}}],["cannot",{"2":{"103":1,"106":3,"224":2}}],["callbackdata",{"2":{"415":2}}],["callparams`",{"2":{"84":1}}],["callparamstuple用于定义桥接行为的一组调用参数",{"2":{"84":1}}],["callparams",{"2":{"84":1}}],["calldata",{"2":{"20":2,"84":1,"100":1,"265":1,"266":1,"267":1,"268":1,"269":1,"410":1,"411":1,"412":1,"413":1,"415":2,"423":2,"429":1}}],["capcoin",{"2":{"372":3}}],["capaccount",{"2":{"39":1,"60":1,"374":1}}],["cap",{"2":{"39":1,"60":1,"372":3,"374":1}}],["cakecontract",{"2":{"189":1}}],["cakeamount",{"2":{"181":1}}],["cakeamountbelongtomc",{"0":{"154":1},"2":{"154":1}}],["caketoken",{"2":{"99":1,"102":1,"103":1}}],["cakepersecond",{"2":{"181":1,"190":1,"191":1}}],["cakeperbracket",{"2":{"100":1,"102":2}}],["cakeproxyoft",{"2":{"83":1,"84":1}}],["cakepool",{"2":{"8":1}}],["cake",{"0":{"7":1,"50":1,"81":1,"83":1,"84":1,"87":1,"133":1},"1":{"8":1,"9":1,"51":1,"52":1,"82":1,"83":1,"84":1,"85":1,"86":1},"2":{"0":1,"8":1,"9":2,"25":2,"29":2,"35":1,"39":14,"42":4,"50":2,"52":1,"84":1,"85":1,"86":1,"90":1,"99":1,"102":3,"103":2,"125":1,"133":2,"154":1,"189":1,"190":1,"191":1,"192":2,"197":1,"200":1,"430":2,"434":8}}],["counterhook",{"2":{"422":1}}],["countwinnersperbracket",{"2":{"100":1,"102":1}}],["core",{"0":{"367":1},"1":{"368":1,"369":1,"370":1,"371":1,"372":1,"373":1,"374":1,"375":1,"376":1,"377":1,"378":1,"379":1,"380":1,"381":1,"382":1,"383":1,"384":1,"385":1,"386":1,"387":1,"388":1},"2":{"244":1,"422":1}}],["collectprotocol",{"0":{"330":1},"2":{"330":1}}],["collectparamstokenid",{"2":{"210":1}}],["collectparams",{"2":{"210":1,"211":1}}],["collectto",{"0":{"211":1},"2":{"211":1}}],["collect",{"0":{"210":1,"322":1},"2":{"210":1,"322":2}}],["coin用户将会收到的",{"2":{"360":1,"363":1}}],["coin用户将要交换的",{"2":{"359":1,"362":1,"363":1}}],["coin池中",{"2":{"372":2}}],["coin池中所有交换收集的总",{"2":{"372":1}}],["coin池中奖励代币的总量",{"2":{"61":1}}],["coin池中质押代币的总量",{"2":{"61":1}}],["coin",{"2":{"61":4,"358":4,"359":1,"360":1,"361":6,"362":1,"363":2,"372":9}}],["cointype",{"2":{"44":1,"45":1,"46":1}}],["contract",{"0":{"89":1,"92":1},"1":{"90":1,"91":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1},"2":{"126":1,"133":1,"136":1,"137":1,"138":1,"171":2,"189":2,"195":1,"196":1,"310":1,"331":1,"415":1}}],["contracts",{"2":{"34":1,"80":1,"244":1}}],["constant",{"2":{"424":1}}],["constructor",{"0":{"189":1,"283":1,"314":1,"399":1},"2":{"189":1,"283":1,"314":1,"393":1,"399":1}}],["const",{"2":{"19":4,"84":1}}],["computedlatestobservation",{"2":{"324":1}}],["competition",{"2":{"29":4}}],["com",{"2":{"0":1,"29":23,"34":1,"415":1,"425":1}}],["团队支付",{"2":{"0":1}}],["级别严重",{"2":{"0":1}}],["级别严重最高",{"2":{"0":1}}],["网站和应用",{"2":{"0":1}}],["网站和应用程序",{"2":{"0":1}}],["演示漏洞是如何被利用的以符合奖励资格",{"2":{"0":1}}],["$4100",{"2":{"434":1}}],["$4",{"2":{"0":1,"434":1}}],["$40",{"2":{"0":1}}],["$7",{"2":{"0":1}}],["$5",{"2":{"0":1}}],["$1",{"2":{"0":3}}],["还是通过社交工程攻击来重定向用户或强迫他们签署交易",{"2":{"0":1}}],["重点在于防止用户资金的损失",{"2":{"0":1}}],["blob",{"2":{"415":1}}],["blocktimestamp",{"0":{"315":1},"2":{"315":1,"324":1}}],["block",{"2":{"100":4,"101":1,"225":1,"227":1,"228":3,"373":2}}],["balancedelta",{"2":{"415":1,"416":1}}],["balances",{"2":{"387":1}}],["balance",{"2":{"372":4,"380":1}}],["base",{"2":{"29":3,"108":1,"272":1,"273":2,"274":1,"317":1}}],["basetokenamount",{"2":{"19":2,"20":1}}],["basetoken",{"2":{"19":2,"20":1}}],["b11ccaed0056a75472539c2b0d9511c82fc6a36622bec7578216af5fe550dd0d",{"2":{"335":1,"368":1}}],["binstep",{"2":{"422":1}}],["binpoolmanager",{"2":{"420":1,"421":1,"423":2}}],["binfungiblepositionmanager",{"2":{"415":2}}],["bin",{"2":{"415":1,"422":1,"424":2}}],["binance",{"0":{"91":1,"114":1},"2":{"117":1,"249":1}}],["bip",{"2":{"294":1}}],["before",{"2":{"424":1}}],["beforeinitialise",{"2":{"424":1}}],["bep20⇄wbnb",{"2":{"258":1,"260":1,"261":1,"262":1,"263":1}}],["bep20⇄bep20",{"2":{"257":1,"259":1,"264":1}}],["be",{"2":{"103":1,"104":1,"105":1,"106":3,"224":2,"226":2,"228":2}}],["b",{"2":{"102":1,"355":3,"356":3}}],["bracketcalculator",{"2":{"102":1}}],["bridge",{"2":{"87":1}}],["bhwnsedahtmtczxxccdfhpmm6in9rxuhorhdhkyujic3",{"2":{"29":1}}],["bntm866ghteyhxzrsmqncddaeixc34r87snzaxh4bchy",{"2":{"29":1}}],["bnb",{"0":{"25":1},"2":{"25":1,"84":4,"258":2,"260":1,"261":1,"262":2,"263":2,"264":1,"265":2,"266":2,"267":2,"268":2,"269":1}}],["bytes4",{"2":{"199":1}}],["bytes32",{"2":{"84":1,"262":2,"263":2,"264":2,"308":1,"422":3,"424":1}}],["bytes",{"2":{"20":1,"84":1,"199":1,"321":1,"327":1,"328":1,"408":1,"409":1,"415":1,"423":2,"429":1}}],["bsctokens",{"2":{"116":6}}],["bsc",{"2":{"17":1,"29":4,"105":1,"272":1,"273":2,"274":1,"275":1}}],["bscscan",{"2":{"4":1,"5":1,"8":1,"12":1,"14":1,"17":1,"25":2,"28":6,"83":1,"91":1,"114":1,"115":1,"117":1,"120":1,"121":1,"216":1}}],["bcake",{"0":{"2":1,"4":1,"5":1},"1":{"3":1,"4":1,"5":1,"6":1},"2":{"5":1}}],["bonusendblock",{"2":{"225":1,"228":5}}],["boost",{"0":{"150":1,"151":1},"2":{"150":1,"151":2}}],["boostmultiplier",{"2":{"127":1}}],["boostliquidity",{"2":{"127":1}}],["booster",{"0":{"2":1,"4":1,"5":1,"138":1},"1":{"3":1,"4":1,"5":1,"6":1},"2":{"6":1,"138":1}}],["bool",{"2":{"42":1,"102":1,"139":1,"184":1,"193":1,"196":1,"197":1,"226":1,"262":1,"263":1,"264":1,"287":1,"288":2,"299":1,"324":1,"326":1,"327":1,"378":1}}],["bounty",{"0":{"0":1},"2":{"0":1}}],["burncapability创建",{"2":{"372":1}}],["burncapability",{"2":{"372":1}}],["burn",{"0":{"323":1,"419":1},"2":{"323":1,"372":2,"415":1,"418":1,"419":1}}],["busd",{"2":{"0":1,"116":4}}],["bug",{"0":{"0":1}}]],"serializationVersion":2}
